{
  "openapi": "3.0.0",
  "servers": [
    {
      "url": "https://api.inaturalist.org/v2"
    }
  ],
  "info": {
    "title": "Test iNaturalist Version 2 API",
    "version": "2.0.0-alpha",
    "description": "## https://api.inaturalist.org/v2\n**UNDER ACTIVE DEVELOPMENT, USE OF THIS ALPHA RELEASE NOT RECOMMENDED**\n\nThese API methods return data in JSON/JSONP and PNG response formats. Visit our\n[developers page](https://www.inaturalist.org/pages/developers) for more\ninformation. Write operations that expect and return JSON describe a single\n`body` parameter that represents the request body, which should be specified\nas JSON. See the \"Model\" of each body parameter for attributes that we\naccept in these JSON objects.\n\nMultiple values for a single URL parameter should be separated by commas,\ne.g. `taxon_id=1,2,3`.\n\nMap tiles are generated using the\n[node-mapnik](https://github.com/mapnik/node-mapnik) library, following the\nXYZ map tiling scheme. The \"Observation Tile\" methods accept nearly all the\nparameters of the observation search APIs, and will generate map tiles\nreflecting the same observations returned by searches. These\n\"Observation Tile\" methods have corresponding\n[UTFGrid](https://github.com/mapbox/utfgrid-spec) JSON\nresponses which return information needed to make interactive maps.\n\nAuthentication in the Node API is handled via JSON Web Tokens (JWT). To\nobtain one, make an [OAuth-authenticated\nrequest](http://www.inaturalist.org/pages/api+reference#auth) to\n\u003Chttps://www.inaturalist.org/users/api_token\u003E. Each JWT will expire after 24\nhours. Authentication is required for all PUT and POST requests. Some GET\nrequests will also include private information like hidden coordinates if\nthe authenticated user has permission to view them.\n\n## Specifying Response Fields\n\nBy default, all endpoints will return a very minimal response for the requested\nresources (e.g. the contents of the `results` array), usually just the UUID.\nTo receive more data, include the `fields` parameter to specify exactly what\nyou want from these resources. For GET requests, this can be as simple as\n[https://api.inaturalist.org/v2/observations?fields=species_guess,observed_on](https://api.inaturalist.org/v2/observations?fields=species_guess,observed_on)\nto return the `species_guess` and `observed_on` fields of the observations.\n\nFor more complex responses, including nested objects, you have two options:\n\n### RISON\n\nYou can encode the fields parameter as [RISON](https://github.com/w33ble/rison-node),\na URL-friendly variant of JSON. If you want to request fields like\n\n```json\n{\n  \"species_guess\": true,\n  \"user\": {\n    \"login\": true\n  }\n}\n```\n\nyou can encode those fields as RISON:\n\n\u003Ca href=\"https://api.inaturalist.org/v2/observations?fields=(species_guess:!t,user:(login:!t))\"\u003Ehttps://api.inaturalist.org/v2/observations?fields=(species_guess:!t,user:(login:!t))\u003C/a\u003E\n\nThis is our preferred way to specify fields because it maintains the caching\nbenefits of URLs that are unique to their responses, and it avoids the\ncomplexity of overriding the HTTP request method.\n\n### X-HTTP-Method-Override\n\nIf specifying the fields in RISON still results in a URL that is too large or\nunwieldy, all GET endpoints also support POST requests with\nthe `X-HTTP-Method-Override: GET` header to so you can specify the response\nfields in stringified JSON, e.g.\n\n```\n  curl -XPOST \\\n    -H \"X-HTTP-Method-Override: GET\" \\\n    -H \"Content-Type: application/json\" \\\n    -d '{\"fields\": {\"species_guess\": true, \"user\": {\"login\": true}}}' \\\n    \"https://api.inaturalist.org/v2/observations\"\n```\n\nWhen making `multipart/form-data` POST requests, you can still specify\n`fields` as part of the form data, either as a commma-separated list of field\nnames or a JSON string.\n\nTo see all available fields, you can use `fields=all`, e.g.\n\u003Chttps://api.inaturalist.org/v2/observations?fields=all\u003E\n\nPhotos served from https://static.inaturalist.org and\nhttps://inaturalist-open-data.s3.amazonaws.com have multiple size\nvariants and not all size variants are returned in responses. To access\nother sizes, the photo URL can be modified to replace only the size\nqualifier (each variant shares the exact same extension). The domain a photo\nis hosted under reflects the license under which the photo is being shared,\nand the domain may change over time if the license changes. Photos in\nthe `inaturalist-open-data` domain are shared under open licenses. These can\nbe accessed in bulk in the [iNaturalist AWS Open Dataset](\nhttps://registry.opendata.aws/inaturalist-open-data/). Photos in the\n`static.inaturalist.org` domain do not have open licenses.\n\nThe available photo sizes are:\n* original (max 2048px in either dimension)\n* large (max 1024px in either dimension)\n* medium (max 500px in either dimension)\n* small (max 240px in either dimension)\n* thumb (max 100px in either dimension)\n* square (75px square)\n\n## About iNaturalist\n\n[iNaturalist](https://www.inaturalist.org/) is a global community of\nnaturalists, scientists, and members of the public sharing over a million\nwildlife sightings to teach one another about the natural world while\ncreating high quality citizen science data for science and conservation.\n\niNaturalist Website: \u003Chttps://www.inaturalist.org/\u003E\n\nOpen Source Software: \u003Chttps://github.com/inaturalist/\u003E\n\n## Terms of Use\n\nUse of this API is subject to the iNaturalist\n[Terms of Service](https://www.inaturalist.org/terms) and\n[Privacy Policy](https://www.inaturalist.org/privacy). We will block any\nuse of our API that violates our Terms or Privacy Policy without notice.\nThe API is intended to support application development, not data scraping.\nFor pre- generated data exports, see\n\u003Chttps://www.inaturalist.org/pages/developers\u003E.\n\nPlease note that we throttle API usage to a max of 100 requests per minute,\nthough we ask that you try to keep it to 60 requests per minute or lower,\nand to keep under 10,000 requests per day. If we notice usage that has\nserious impact on our performance we may institute blocks without\nnotification.\n\nTerms of Service: \u003Chttps://www.inaturalist.org/terms\u003E\n\nPrivacy Policy: \u003Chttps://www.inaturalist.org/privacy\u003E"
  },
  "components": {
    "schemas": {
      "ControlledTerm": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique auto-increment integer identifier."
          },
          "blocking": {
            "type": "boolean"
          },
          "is_value": {
            "type": "boolean"
          },
          "excepted_taxon_ids": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "label": {
            "type": "string"
          },
          "labels": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "definition": {
                  "type": "string"
                },
                "label": {
                  "type": "string"
                },
                "locale": {
                  "type": "string"
                },
                "valid_within_clade": {
                  "type": "integer",
                  "nullable": true
                }
              },
              "additionalProperties": false
            }
          },
          "multivalued": {
            "type": "boolean"
          },
          "ontology_uri": {
            "type": "string"
          },
          "taxon_ids": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "uri": {
            "type": "string"
          },
          "uuid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "valid_within_clade": {
            "type": "integer",
            "nullable": true
          },
          "values": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ControlledTerm"
            }
          }
        },
        "required": [
          "id"
        ],
        "additionalProperties": false,
        "nullable": true
      },
      "Site": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique auto-increment integer identifier.",
            "example": 1
          },
          "icon_url": {
            "type": "string",
            "description": "URL of an icon image for the site",
            "example": "https://static.inaturalist.org/sites/1-logo_square.png"
          },
          "locale": {
            "type": "string",
            "nullable": true,
            "description": "Default language code for users of this site",
            "example": "en"
          },
          "name": {
            "type": "string",
            "description": "Full name of the site",
            "example": "iNaturalist"
          },
          "place_id": {
            "type": "integer",
            "nullable": true,
            "description": "Integer ID of the default search place for this site"
          },
          "site_name_short": {
            "type": "string",
            "nullable": true,
            "description": "Short name for this site",
            "example": "iNat"
          },
          "url": {
            "type": "string",
            "example": "https://www.inaturalist.org"
          }
        },
        "required": [
          "id"
        ],
        "additionalProperties": false,
        "nullable": true
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique auto-increment integer identifier."
          },
          "uuid": {
            "type": "string",
            "format": "uuid"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "faved_project_ids": {
            "type": "array",
            "items": {
              "type": "number",
              "format": "float"
            },
            "description": "Ordered list of IDs of projects the user has faved"
          },
          "icon": {
            "type": "string",
            "nullable": true
          },
          "icon_url": {
            "type": "string",
            "nullable": true
          },
          "identifications_count": {
            "type": "integer"
          },
          "journal_posts_count": {
            "type": "integer"
          },
          "annotated_observations_count": {
            "type": "integer"
          },
          "last_active": {
            "type": "string",
            "format": "date-time"
          },
          "login": {
            "type": "string"
          },
          "monthly_supporter": {
            "type": "boolean",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "observations_count": {
            "type": "integer"
          },
          "orcid": {
            "type": "string",
            "nullable": true
          },
          "preferences": {
            "type": "object",
            "properties": {
              "prefers_community_taxa": {
                "type": "boolean",
                "description": "\n        Whether the user allows the Community Taxon to be the taxon their observation is associated with\n      "
              },
              "prefers_observation_fields_by": {
                "type": "string",
                "enum": [
                  "anyone",
                  "curators",
                  "observer"
                ]
              },
              "prefers_project_addition_by": {
                "type": "string",
                "enum": [
                  "any",
                  "joined",
                  "none"
                ]
              }
            },
            "additionalProperties": false
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "site": {
            "$ref": "#/components/schemas/Site"
          },
          "site_id": {
            "type": "integer",
            "nullable": true
          },
          "spam": {
            "type": "boolean"
          },
          "species_count": {
            "type": "integer"
          },
          "suspended": {
            "type": "boolean"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id"
        ],
        "additionalProperties": false,
        "nullable": true
      },
      "Vote": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique auto-increment integer identifier."
          },
          "created_at": {
            "type": "string"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "user_id": {
            "type": "integer"
          },
          "vote_flag": {
            "type": "boolean"
          },
          "vote_scope": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Annotation": {
        "type": "object",
        "properties": {
          "concatenated_attr_val": {
            "type": "string"
          },
          "controlled_attribute": {
            "$ref": "#/components/schemas/ControlledTerm"
          },
          "controlled_attribute_id": {
            "type": "integer"
          },
          "controlled_value": {
            "$ref": "#/components/schemas/ControlledTerm"
          },
          "controlled_value_id": {
            "type": "integer"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "user_id": {
            "type": "integer"
          },
          "uuid": {
            "type": "string",
            "format": "uuid"
          },
          "vote_score": {
            "type": "integer"
          },
          "votes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Vote"
            }
          }
        },
        "required": [
          "uuid"
        ],
        "additionalProperties": false
      },
      "Announcement": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "body": {
            "type": "string"
          },
          "placement": {
            "type": "string"
          },
          "clients": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "dismissible": {
            "type": "boolean"
          },
          "locales": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "start": {
            "type": "string",
            "format": "date-time"
          },
          "end": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id"
        ],
        "additionalProperties": false
      },
      "AppBuildInfo": {
        "type": "object",
        "properties": {
          "rails": {
            "type": "object",
            "properties": {
              "git_branch": {
                "type": "string"
              },
              "git_commit": {
                "type": "string"
              },
              "image_tag": {
                "type": "string"
              },
              "build_date": {
                "type": "string"
              }
            },
            "additionalProperties": false
          },
          "api": {
            "type": "object",
            "properties": {
              "git_branch": {
                "type": "string"
              },
              "git_commit": {
                "type": "string"
              },
              "image_tag": {
                "type": "string"
              },
              "build_date": {
                "type": "string"
              }
            },
            "additionalProperties": false
          },
          "vision": {
            "type": "object",
            "properties": {
              "git_branch": {
                "type": "string"
              },
              "git_commit": {
                "type": "string"
              },
              "image_tag": {
                "type": "string"
              },
              "build_date": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      "AuthorizedApplication": {
        "type": "object",
        "properties": {
          "application": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": "string",
                "example": "iNaturalist iPhone App"
              },
              "official": {
                "type": "boolean",
                "description": "Whether this application is controlled by iNaturalist itself"
              }
            },
            "required": [
              "id"
            ],
            "additionalProperties": false
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "scopes": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "login",
                "write",
                "account_delete"
              ],
              "example": [
                "login",
                "write"
              ]
            },
            "description": "List of scopes granted to this application. `login` provides access to information required for logging into a third-party service like user ID, email address, profile pic, etc. `write` allows the application to post content to iNat as the user; `account_delete` allows the application to delete the user's iNat account."
          }
        },
        "required": [
          "application"
        ],
        "additionalProperties": false
      },
      "BuildInfo": {
        "type": "object",
        "properties": {
          "git_branch": {
            "type": "string"
          },
          "git_commit": {
            "type": "string"
          },
          "image_tag": {
            "type": "string"
          },
          "build_date": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "DateDetails": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string"
          },
          "day": {
            "type": "integer"
          },
          "hour": {
            "type": "integer"
          },
          "month": {
            "type": "integer"
          },
          "week": {
            "type": "integer"
          },
          "year": {
            "type": "integer"
          }
        },
        "required": [
          "date",
          "day",
          "hour",
          "month",
          "week",
          "year"
        ],
        "additionalProperties": false,
        "nullable": true
      },
      "Flag": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique auto-increment integer identifier."
          },
          "comment": {
            "type": "string",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_at_utc": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "flag": {
            "type": "string"
          },
          "flaggable_content": {
            "type": "string",
            "nullable": true
          },
          "flaggable_id": {
            "type": "integer",
            "nullable": true
          },
          "flaggable_type": {
            "type": "string",
            "nullable": true
          },
          "flaggable_user_id": {
            "type": "integer",
            "nullable": true
          },
          "resolved": {
            "type": "boolean"
          },
          "resolver_id": {
            "type": "integer",
            "nullable": true
          },
          "resolved_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updated_at_utc": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "user_id": {
            "type": "integer"
          },
          "uuid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "required": [
          "id"
        ],
        "additionalProperties": false
      },
      "ModeratorAction": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique auto-increment integer identifier."
          },
          "created_at": {
            "type": "string"
          },
          "created_at_details": {
            "$ref": "#/components/schemas/DateDetails"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "action": {
            "type": "string"
          },
          "reason": {
            "type": "string"
          },
          "private": {
            "type": "boolean"
          }
        },
        "required": [
          "id"
        ],
        "additionalProperties": false
      },
      "Comment": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique auto-increment integer identifier."
          },
          "body": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_at_details": {
            "$ref": "#/components/schemas/DateDetails"
          },
          "created_at_utc": {
            "type": "string",
            "format": "date-time"
          },
          "flags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Flag"
            }
          },
          "hidden": {
            "type": "boolean"
          },
          "html": {
            "type": "string"
          },
          "moderator_actions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ModeratorAction"
            }
          },
          "parent_id": {
            "type": "integer",
            "nullable": true
          },
          "parent_type": {
            "type": "string",
            "nullable": true
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "user_id": {
            "type": "integer",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at_details": {
            "type": "string",
            "format": "date-time"
          },
          "uuid": {
            "type": "string",
            "format": "uuid"
          }
        },
        "required": [
          "uuid"
        ],
        "additionalProperties": false
      },
      "Taxon": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique auto-increment integer identifier."
          },
          "uuid": {
            "type": "string",
            "format": "uuid"
          },
          "ancestors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Taxon"
            }
          },
          "ancestor_ids": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "ancestry": {
            "type": "string",
            "nullable": true
          },
          "atlas_id": {
            "type": "integer",
            "nullable": true
          },
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Taxon"
            }
          },
          "complete_rank": {
            "type": "string"
          },
          "complete_species_count": {
            "type": "integer",
            "nullable": true
          },
          "conservation_status": {
            "$ref": "#/components/schemas/ConservationStatus"
          },
          "conservation_statuses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConservationStatus"
            }
          },
          "created_at": {
            "type": "string"
          },
          "current_synonymous_taxon_ids": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "nullable": true
          },
          "default_photo": {
            "$ref": "#/components/schemas/Photo"
          },
          "endemic": {
            "type": "boolean"
          },
          "english_common_name": {
            "type": "string"
          },
          "establishment_means": {
            "type": "object",
            "properties": {
              "establishment_means": {
                "type": "string"
              },
              "id": {
                "type": "integer"
              },
              "place": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "name": {
                    "type": "string"
                  },
                  "display_name": {
                    "type": "string"
                  },
                  "ancestry": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          "preferred_establishment_means": {
            "type": "string"
          },
          "extinct": {
            "type": "boolean"
          },
          "flag_counts": {
            "type": "object",
            "properties": {
              "resolved": {
                "type": "integer"
              },
              "unresolved": {
                "type": "integer"
              }
            },
            "additionalProperties": false
          },
          "iconic_taxon_id": {
            "type": "integer",
            "nullable": true
          },
          "iconic_taxon_name": {
            "type": "string"
          },
          "introduced": {
            "type": "boolean"
          },
          "is_active": {
            "type": "boolean"
          },
          "listed_taxa": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "establishment_means": {
                  "type": "string"
                },
                "list": {
                  "$ref": "#/components/schemas/List"
                },
                "taxon": {
                  "$ref": "#/components/schemas/Taxon"
                },
                "taxon_id": {
                  "type": "integer"
                },
                "place": {
                  "$ref": "#/components/schemas/Place"
                }
              },
              "additionalProperties": false
            }
          },
          "listed_taxa_count": {
            "type": "integer"
          },
          "matched_term": {
            "type": "string"
          },
          "min_species_ancestry": {
            "type": "string"
          },
          "min_species_taxon_id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "native": {
            "type": "boolean"
          },
          "observations_count": {
            "type": "integer"
          },
          "parent_id": {
            "type": "integer",
            "nullable": true
          },
          "photos_locked": {
            "type": "boolean",
            "description": "Whether or not photos for this taxon can be edited"
          },
          "preferred_common_name": {
            "type": "string",
            "nullable": true
          },
          "preferred_common_names": {
            "type": "array",
            "items": {

            },
            "nullable": true
          },
          "rank": {
            "type": "string"
          },
          "rank_level": {
            "type": "number",
            "format": "float"
          },
          "representative_photo": {
            "$ref": "#/components/schemas/Photo"
          },
          "statuses": {
            "type": "array",
            "items": {
              "description": "TODO: status can be strings or objects"
            }
          },
          "taxon_changes_count": {
            "type": "integer"
          },
          "taxon_photos": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "taxon": {
                  "$ref": "#/components/schemas/Taxon"
                },
                "taxon_id": {
                  "type": "integer"
                },
                "photo": {
                  "$ref": "#/components/schemas/Photo"
                }
              },
              "additionalProperties": false
            }
          },
          "taxon_schemes_count": {
            "type": "integer"
          },
          "threatened": {
            "type": "boolean"
          },
          "universal_search_rank": {
            "type": "integer"
          },
          "vision": {
            "type": "boolean"
          },
          "wikipedia_summary": {
            "type": "string",
            "nullable": true
          },
          "wikipedia_url": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "id"
        ],
        "additionalProperties": false,
        "nullable": true
      },
      "PolygonGeoJson": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "coordinates": {
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "type": "array",
                  "items": {
                    "type": "array",
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "number",
                        "format": "float"
                      },
                      "minItems": 2,
                      "maxItems": 2
                    }
                  }
                }
              },
              {
                "type": "array",
                "items": {
                  "type": "array",
                  "items": {
                    "type": "array",
                    "items": {
                      "type": "number",
                      "format": "float"
                    },
                    "minItems": 2,
                    "maxItems": 2
                  }
                }
              }
            ]
          }
        },
        "required": [
          "type",
          "coordinates"
        ],
        "additionalProperties": false,
        "nullable": true
      },
      "PointGeoJson": {
        "type": "object",
        "properties": {
          "coordinates": {
            "type": "array",
            "items": {
              "type": "number",
              "format": "float"
            },
            "minItems": 2,
            "maxItems": 2
          },
          "type": {
            "type": "string"
          }
        },
        "required": [
          "coordinates",
          "type"
        ],
        "additionalProperties": false,
        "nullable": true
      },
      "Place": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique auto-increment integer identifier."
          },
          "admin_level": {
            "type": "integer",
            "nullable": true
          },
          "ancestor_place_ids": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "nullable": true
          },
          "bbox_area": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "bounding_box_geojson": {
            "$ref": "#/components/schemas/PolygonGeoJson"
          },
          "display_name": {
            "type": "string",
            "nullable": true
          },
          "display_name_autocomplete": {
            "type": "string",
            "nullable": true
          },
          "geometry_geojson": {
            "$ref": "#/components/schemas/PolygonGeoJson"
          },
          "location": {
            "type": "string",
            "nullable": true
          },
          "matched_term": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string"
          },
          "observations_count": {
            "type": "integer"
          },
          "place_type": {
            "type": "integer",
            "nullable": true
          },
          "point_geojson": {
            "$ref": "#/components/schemas/PointGeoJson"
          },
          "slug": {
            "type": "string",
            "nullable": true
          },
          "universal_search_rank": {
            "type": "integer",
            "nullable": true
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "uuid": {
            "type": "string",
            "format": "uuid"
          },
          "without_check_list": {
            "type": "boolean",
            "nullable": true
          }
        },
        "required": [
          "id"
        ],
        "additionalProperties": false,
        "nullable": true
      },
      "ConservationStatus": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "authority": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "geoprivacy": {
            "type": "string",
            "nullable": true
          },
          "iucn": {
            "type": "integer"
          },
          "iucn_status": {
            "type": "string"
          },
          "iucn_status_code": {
            "type": "string"
          },
          "place": {
            "$ref": "#/components/schemas/Place"
          },
          "place_id": {
            "type": "integer",
            "nullable": true
          },
          "source_id": {
            "type": "integer",
            "nullable": true
          },
          "status": {
            "type": "string"
          },
          "status_name": {
            "type": "string"
          },
          "taxon_id": {
            "type": "integer"
          },
          "user_id": {
            "type": "integer",
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "id"
        ],
        "additionalProperties": false,
        "nullable": true
      },
      "Photo": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique auto-increment integer identifier."
          },
          "attribution": {
            "type": "string"
          },
          "attribution_name": {
            "type": "string",
            "nullable": true
          },
          "flags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Flag"
            }
          },
          "hidden": {
            "type": "boolean"
          },
          "large_url": {
            "type": "string",
            "nullable": true
          },
          "license_code": {
            "type": "string",
            "nullable": true
          },
          "medium_url": {
            "type": "string",
            "nullable": true
          },
          "moderator_actions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ModeratorAction"
            }
          },
          "native_page_url": {
            "type": "string",
            "nullable": true
          },
          "native_photo_id": {
            "type": "string",
            "nullable": true
          },
          "original_dimensions": {
            "type": "object",
            "properties": {
              "height": {
                "type": "integer",
                "nullable": true
              },
              "width": {
                "type": "integer",
                "nullable": true
              }
            },
            "additionalProperties": false,
            "nullable": true
          },
          "original_url": {
            "type": "string",
            "nullable": true
          },
          "small_url": {
            "type": "string",
            "nullable": true
          },
          "square_url": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string"
          },
          "url": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "id"
        ],
        "additionalProperties": false,
        "nullable": true
      },
      "List": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique auto-increment integer identifier."
          },
          "title": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "id"
        ],
        "additionalProperties": false,
        "nullable": true
      },
      "CommonAncestor": {
        "type": "object",
        "properties": {
          "score": {
            "type": "number",
            "format": "float",
            "minimum": 0,
            "maximum": 100,
            "description": " Common ancestor scores are not directly comparable to the combined_score\n    of results. Generally they are similar, factoring in both vision and spatial\n    similarity, but are derived from a subset of the top results resulting in\n    a value different than combined_score. Usually the common ancestor score\n    will be above 70 as taxa need to have a high confidence in order to be\n    considered a likely common ancestor.\n  "
          },
          "taxon": {
            "$ref": "#/components/schemas/Taxon"
          }
        },
        "required": [
          "taxon"
        ],
        "additionalProperties": false,
        "description": " Common ancestor taxon of some of the top results weighted by combined score.\n  If present, it generally has a much higher chance of being accurate (if not\n  precise), often by as much as 30-40 percentage points.\n"
      },
      "Error": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Unique auto-increment integer identifier."
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "errorCode": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                },
                "from": {
                  "type": "string",
                  "nullable": true
                },
                "stack": {
                  "type": "string",
                  "nullable": true
                }
              },
              "additionalProperties": false
            }
          }
        },
        "additionalProperties": false
      },
      "Identification": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique auto-increment integer identifier."
          },
          "body": {
            "type": "string",
            "nullable": true
          },
          "category": {
            "type": "string",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_at_details": {
            "$ref": "#/components/schemas/DateDetails"
          },
          "current": {
            "type": "boolean"
          },
          "disagreement": {
            "type": "boolean",
            "nullable": true
          },
          "flags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Flag"
            }
          },
          "hidden": {
            "type": "boolean"
          },
          "moderator_actions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ModeratorAction"
            }
          },
          "observation_id": {
            "type": "integer"
          },
          "own_observation": {
            "type": "boolean"
          },
          "previous_observation_taxon_id": {
            "type": "integer",
            "nullable": true
          },
          "previous_observation_taxon": {
            "$ref": "#/components/schemas/Taxon"
          },
          "spam": {
            "type": "boolean"
          },
          "taxon": {
            "$ref": "#/components/schemas/Taxon"
          },
          "taxon_change": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              },
              "type": {
                "type": "string"
              }
            },
            "required": [
              "id",
              "type"
            ],
            "additionalProperties": false,
            "nullable": true
          },
          "taxon_change_id": {
            "type": "integer",
            "nullable": true
          },
          "taxon_change_type": {
            "type": "string",
            "nullable": true
          },
          "taxon_id": {
            "type": "integer"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "user_id": {
            "type": "integer"
          },
          "uuid": {
            "type": "string",
            "format": "uuid"
          },
          "vision": {
            "type": "boolean"
          }
        },
        "required": [
          "id"
        ],
        "additionalProperties": false
      },
      "ListedTaxon": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "nullable": true
          },
          "place": {
            "$ref": "#/components/schemas/Place"
          },
          "id": {
            "type": "integer",
            "description": "Unique auto-increment integer identifier."
          },
          "created_at": {
            "type": "string"
          },
          "updated_at": {
            "type": "string"
          },
          "comments_count": {
            "type": "integer"
          },
          "occurrence_status_level": {
            "type": "integer",
            "nullable": true,
            "description": "Assessment of occurrence frequency in this place. 60 = present, 50 = common, 40 = uncommon, 30 = irregular, 20 = doubtful, 10 = absent"
          },
          "establishment_means": {
            "type": "string",
            "enum": [
              "native",
              "endemic",
              "introduced"
            ],
            "description": "How this taxon became established in this place"
          },
          "observations_count": {
            "type": "integer"
          },
          "manually_added": {
            "type": "boolean",
            "nullable": true,
            "description": "Whether this taxon was added to this list by a person or not"
          },
          "primary_listing": {
            "type": "boolean",
            "description": "Whether or not this is the primary listing for this taxon in this place (places can have multiple checklists that contain the same taxa)"
          },
          "establishment_means_label": {
            "type": "string",
            "description": "Localized version of the establishment means"
          },
          "establishment_means_description": {
            "type": "string",
            "description": "Localized description of the establishment means"
          }
        },
        "required": [
          "id"
        ],
        "additionalProperties": false,
        "nullable": true
      },
      "Message": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique auto-increment integer identifier."
          },
          "user_id": {
            "type": "integer"
          },
          "thread_id": {
            "type": "integer"
          },
          "subject": {
            "type": "string"
          },
          "body": {
            "type": "string"
          },
          "read_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "comments_count": {
            "type": "integer"
          },
          "from_user": {
            "$ref": "#/components/schemas/User"
          },
          "to_user": {
            "$ref": "#/components/schemas/User"
          }
        },
        "required": [
          "id"
        ],
        "additionalProperties": false
      },
      "ObservationField": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique auto-increment integer identifier."
          },
          "allowed_values": {
            "type": "string",
            "nullable": true
          },
          "datatype": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "description_autocomplete": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string"
          },
          "name_autocomplete": {
            "type": "string"
          },
          "users_count": {
            "type": "integer",
            "nullable": true
          },
          "uuid": {
            "type": "string",
            "format": "uuid"
          },
          "values_count": {
            "type": "integer",
            "nullable": true
          }
        },
        "required": [
          "id"
        ],
        "additionalProperties": false
      },
      "Project": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique auto-increment integer identifier."
          },
          "admins": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "project_id": {
                  "type": "integer"
                },
                "role": {
                  "type": "string"
                },
                "user": {
                  "$ref": "#/components/schemas/User"
                },
                "user_id": {
                  "type": "integer"
                }
              },
              "additionalProperties": false
            }
          },
          "banner_color": {
            "type": "string",
            "nullable": true
          },
          "created_at": {
            "type": "string"
          },
          "delegated_project_id": {
            "type": "integer",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "flags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Flag"
            }
          },
          "header_image_contain": {
            "type": "boolean"
          },
          "header_image_file_name": {
            "type": "string",
            "nullable": true
          },
          "header_image_url": {
            "type": "string",
            "nullable": true
          },
          "hide_title": {
            "type": "boolean"
          },
          "hide_umbrella_map_flags": {
            "type": "boolean"
          },
          "icon": {
            "type": "string",
            "nullable": true
          },
          "icon_file_name": {
            "type": "string",
            "nullable": true
          },
          "is_delegated_umbrella": {
            "type": "boolean",
            "nullable": true
          },
          "is_umbrella": {
            "type": "boolean"
          },
          "latitude": {
            "type": "string"
          },
          "location": {
            "type": "string",
            "nullable": true
          },
          "longitude": {
            "type": "string"
          },
          "observation_requirements_updated_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "place_id": {
            "type": "integer",
            "nullable": true
          },
          "prefers_user_trust": {
            "type": "boolean",
            "nullable": true
          },
          "project_observation_fields": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "observation_field": {
                  "$ref": "#/components/schemas/ObservationField"
                },
                "position": {
                  "type": "integer"
                },
                "required": {
                  "type": "boolean",
                  "nullable": true
                }
              },
              "required": [
                "id"
              ],
              "additionalProperties": false
            }
          },
          "project_observation_rules": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "operand_id": {
                  "type": "integer",
                  "nullable": true
                },
                "operand_type": {
                  "type": "string",
                  "nullable": true
                },
                "operator": {
                  "type": "string"
                },
                "place": {
                  "$ref": "#/components/schemas/Place"
                },
                "project": {
                  "$ref": "#/components/schemas/Project"
                },
                "taxon": {
                  "$ref": "#/components/schemas/Taxon"
                },
                "user": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "required": [
                "id"
              ],
              "additionalProperties": false
            }
          },
          "project_type": {
            "type": "string",
            "nullable": true
          },
          "rule_preferences": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "field": {
                  "type": "string",
                  "description": "Observation attribute this rule assesses"
                },
                "value": {
                  "description": "Required observation attribute value(s)"
                }
              },
              "additionalProperties": false
            }
          },
          "search_parameters": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "field": {
                  "type": "string"
                },
                "value": {
                  "description": "TODO: values can be single values or arrays"
                },
                "value_bool": {
                  "type": "boolean"
                },
                "value_date": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "value_keyword": {
                  "description": "TODO: values can be single values or arrays"
                },
                "value_number": {
                  "anyOf": [
                    {
                      "type": "number",
                      "format": "float"
                    },
                    {
                      "type": "array",
                      "items": {
                        "type": "number",
                        "format": "float"
                      }
                    }
                  ]
                }
              },
              "additionalProperties": false
            }
          },
          "site_features": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "noteworthy": {
                  "type": "boolean"
                },
                "site_id": {
                  "type": "integer"
                },
                "featured_at": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "additionalProperties": false
            },
            "nullable": true,
            "description": "TODO: fix this"
          },
          "slug": {
            "type": "string"
          },
          "terms": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string"
          },
          "updated_at": {
            "type": "string"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "user_id": {
            "type": "integer"
          },
          "user_ids": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          }
        },
        "required": [
          "id"
        ],
        "additionalProperties": false,
        "nullable": true
      },
      "ObservationPhoto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique auto-increment integer identifier."
          },
          "photo": {
            "$ref": "#/components/schemas/Photo"
          },
          "position": {
            "type": "integer",
            "nullable": true
          },
          "uuid": {
            "type": "string",
            "format": "uuid"
          }
        },
        "required": [
          "id"
        ],
        "additionalProperties": false
      },
      "Sound": {
        "type": "object",
        "properties": {
          "attribution": {
            "type": "string"
          },
          "file_content_type": {
            "type": "string"
          },
          "file_url": {
            "type": "string"
          },
          "flags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Flag"
            }
          },
          "hidden": {
            "type": "boolean"
          },
          "id": {
            "type": "integer",
            "description": "Unique auto-increment integer identifier."
          },
          "license_code": {
            "type": "string",
            "nullable": true
          },
          "moderator_actions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ModeratorAction"
            }
          },
          "native_sound_id": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "id"
        ],
        "additionalProperties": false,
        "nullable": true
      },
      "ObservationSound": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique auto-increment integer identifier."
          },
          "sound": {
            "$ref": "#/components/schemas/Sound"
          },
          "position": {
            "type": "integer"
          },
          "uuid": {
            "type": "string",
            "format": "uuid"
          }
        },
        "required": [
          "id"
        ],
        "additionalProperties": false
      },
      "ObservationFieldValue": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique auto-increment integer identifier."
          },
          "datatype": {
            "type": "string"
          },
          "field_id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "name_ci": {
            "type": "string"
          },
          "observation_field": {
            "$ref": "#/components/schemas/ObservationField"
          },
          "taxon": {
            "$ref": "#/components/schemas/Taxon"
          },
          "taxon_id": {
            "type": "string"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "user_id": {
            "type": "integer"
          },
          "uuid": {
            "type": "string",
            "format": "uuid"
          },
          "value": {
            "type": "string"
          },
          "value_ci": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "ProjectUser": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique auto-increment integer identifier."
          },
          "observations_count": {
            "type": "integer"
          },
          "prefers_curator_coordinate_access_for": {
            "type": "string"
          },
          "project_id": {
            "type": "integer"
          },
          "role": {
            "type": "string",
            "nullable": true
          },
          "taxa_count": {
            "type": "integer"
          },
          "user_id": {
            "type": "integer"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_at_utc": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at_utc": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id"
        ],
        "additionalProperties": false
      },
      "ProjectObservation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique auto-increment integer identifier."
          },
          "preferences": {
            "type": "object",
            "properties": {
              "allows_curator_coordinate_access": {
                "type": "boolean"
              }
            },
            "additionalProperties": false
          },
          "project": {
            "$ref": "#/components/schemas/Project"
          },
          "project_id": {
            "type": "integer"
          },
          "project_user": {
            "$ref": "#/components/schemas/ProjectUser"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "user_id": {
            "type": "integer",
            "nullable": true
          },
          "uuid": {
            "type": "string",
            "format": "uuid"
          }
        },
        "required": [
          "id",
          "uuid"
        ],
        "additionalProperties": false
      },
      "QualityMetric": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique auto-increment integer identifier."
          },
          "agree": {
            "type": "boolean"
          },
          "metric": {
            "type": "string"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "user_id": {
            "type": "integer",
            "nullable": true
          }
        },
        "required": [
          "id"
        ],
        "additionalProperties": false
      },
      "Observation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "nullable": true,
            "description": "Unique auto-increment integer identifier."
          },
          "annotations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Annotation"
            }
          },
          "application": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              },
              "icon": {
                "type": "string",
                "nullable": true
              },
              "name": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            },
            "required": [
              "id"
            ],
            "additionalProperties": false
          },
          "cached_votes_total": {
            "type": "integer"
          },
          "captive": {
            "type": "boolean"
          },
          "comments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Comment"
            }
          },
          "comments_count": {
            "type": "integer"
          },
          "community_taxon": {
            "$ref": "#/components/schemas/Taxon"
          },
          "community_taxon_id": {
            "type": "integer",
            "nullable": true
          },
          "context_geoprivacy": {
            "type": "string",
            "nullable": true
          },
          "context_taxon_geoprivacy": {
            "type": "string",
            "nullable": true
          },
          "context_user_geoprivacy": {
            "type": "string",
            "nullable": true
          },
          "created_at": {
            "type": "string"
          },
          "created_at_details": {
            "$ref": "#/components/schemas/DateDetails"
          },
          "created_time_zone": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "faves": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Vote"
            }
          },
          "faves_count": {
            "type": "integer"
          },
          "flags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Flag"
            }
          },
          "geojson": {
            "$ref": "#/components/schemas/PointGeoJson"
          },
          "geoprivacy": {
            "type": "string",
            "nullable": true
          },
          "id_please": {
            "type": "boolean"
          },
          "ident_taxon_ids": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "identifications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Identification"
            }
          },
          "identifications_count": {
            "type": "integer"
          },
          "identifications_most_agree": {
            "type": "boolean"
          },
          "identifications_most_disagree": {
            "type": "boolean"
          },
          "identifications_some_agree": {
            "type": "boolean"
          },
          "license_code": {
            "type": "string",
            "nullable": true
          },
          "location": {
            "type": "string",
            "nullable": true
          },
          "map_scale": {
            "type": "integer",
            "nullable": true
          },
          "mappable": {
            "type": "boolean"
          },
          "non_owner_ids": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Identification"
            }
          },
          "non_traditional_projects": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "current_user_is_member": {
                  "type": "boolean"
                },
                "project": {
                  "$ref": "#/components/schemas/Project"
                },
                "projectUser": {
                  "type": "object",
                  "properties": {
                    "role": {
                      "type": "string"
                    },
                    "prefers_curator_coordinate_access_for": {
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            }
          },
          "num_identification_agreements": {
            "type": "integer"
          },
          "num_identification_disagreements": {
            "type": "integer"
          },
          "oauth_application_id": {
            "type": "integer",
            "nullable": true
          },
          "obscured": {
            "type": "boolean"
          },
          "observation_photos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObservationPhoto"
            }
          },
          "observation_sounds": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObservationSound"
            }
          },
          "observed_on": {
            "type": "string",
            "nullable": true
          },
          "observed_on_details": {
            "$ref": "#/components/schemas/DateDetails"
          },
          "observed_on_string": {
            "type": "string",
            "nullable": true
          },
          "observed_time_zone": {
            "type": "string",
            "nullable": true
          },
          "ofvs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObservationFieldValue"
            }
          },
          "out_of_range": {
            "type": "boolean",
            "nullable": true
          },
          "outlinks": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "source": {
                  "type": "string"
                },
                "url": {
                  "type": "string"
                }
              },
              "additionalProperties": false
            }
          },
          "owners_identification_from_vision": {
            "type": "boolean",
            "nullable": true
          },
          "photos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Photo"
            }
          },
          "place_guess": {
            "type": "string",
            "nullable": true
          },
          "place_ids": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "positional_accuracy": {
            "type": "integer",
            "nullable": true
          },
          "preferences": {
            "type": "object",
            "properties": {
              "auto_obscuration": {
                "type": "boolean"
              },
              "prefers_community_taxon": {
                "type": "boolean",
                "nullable": true
              }
            },
            "additionalProperties": false
          },
          "private_geojson": {
            "$ref": "#/components/schemas/PointGeoJson"
          },
          "private_location": {
            "type": "string",
            "nullable": true
          },
          "private_place_guess": {
            "type": "string",
            "nullable": true
          },
          "project_ids": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "project_ids_with_curator_id": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "project_ids_without_curator_id": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "project_observations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProjectObservation"
            }
          },
          "public_positional_accuracy": {
            "type": "integer",
            "nullable": true
          },
          "quality_grade": {
            "type": "string"
          },
          "quality_metrics": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/QualityMetric"
            }
          },
          "reviewed_by": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "site_id": {
            "type": "integer",
            "nullable": true
          },
          "sounds": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Sound"
            }
          },
          "spam": {
            "type": "boolean"
          },
          "species_guess": {
            "type": "string",
            "nullable": true
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "taxon": {
            "$ref": "#/components/schemas/Taxon"
          },
          "taxon_geoprivacy": {
            "type": "string",
            "nullable": true
          },
          "time_observed_at": {
            "type": "string",
            "nullable": true
          },
          "time_zone_offset": {
            "type": "string"
          },
          "updated_at": {
            "type": "string"
          },
          "uri": {
            "type": "string"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "uuid": {
            "type": "string",
            "format": "uuid"
          },
          "viewer_trusted_by_observer": {
            "type": "boolean",
            "nullable": true,
            "description": "Observer trusts the authenticated user with access to hidden coordinates"
          },
          "votes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Vote"
            }
          }
        },
        "required": [
          "uuid"
        ],
        "additionalProperties": false
      },
      "TaxonNamePriority": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "user_id": {
            "type": "integer"
          },
          "place_id": {
            "type": "integer",
            "nullable": true
          },
          "place": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              },
              "uuid": {
                "type": "string",
                "format": "uuid"
              },
              "display_name": {
                "type": "string",
                "nullable": true
              },
              "name": {
                "type": "string"
              }
            },
            "required": [
              "id"
            ],
            "additionalProperties": false
          },
          "lexicon": {
            "type": "string",
            "nullable": true
          },
          "position": {
            "type": "integer",
            "nullable": true
          }
        },
        "required": [
          "id",
          "user_id",
          "lexicon",
          "position"
        ],
        "additionalProperties": false
      },
      "PrivateUser": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique auto-increment integer identifier."
          },
          "uuid": {
            "type": "string",
            "format": "uuid"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "faved_project_ids": {
            "type": "array",
            "items": {
              "type": "number",
              "format": "float"
            },
            "description": "Ordered list of IDs of projects the user has faved"
          },
          "icon": {
            "type": "string",
            "nullable": true
          },
          "icon_url": {
            "type": "string",
            "nullable": true
          },
          "identifications_count": {
            "type": "integer"
          },
          "journal_posts_count": {
            "type": "integer"
          },
          "annotated_observations_count": {
            "type": "integer"
          },
          "last_active": {
            "type": "string",
            "format": "date-time"
          },
          "monthly_supporter": {
            "type": "boolean",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "observations_count": {
            "type": "integer"
          },
          "orcid": {
            "type": "string",
            "nullable": true
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "site": {
            "$ref": "#/components/schemas/Site"
          },
          "site_id": {
            "type": "integer",
            "nullable": true
          },
          "spam": {
            "type": "boolean"
          },
          "species_count": {
            "type": "integer"
          },
          "suspended": {
            "type": "boolean"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "activity_count": {
            "type": "integer"
          },
          "blocked_user_ids": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "nullable": true
          },
          "confirmed_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "confirmation_sent_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "data_transfer_consent": {
            "type": "boolean",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "locale": {
            "type": "string",
            "nullable": true
          },
          "login": {
            "type": "string"
          },
          "muted_user_ids": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "nullable": true
          },
          "pi_consent": {
            "type": "boolean",
            "nullable": true
          },
          "place_id": {
            "type": "integer",
            "nullable": true
          },
          "preferences": {
            "type": "object",
            "properties": {
              "prefers_community_taxa": {
                "type": "boolean"
              },
              "prefers_observation_fields_by": {
                "type": "string",
                "description": "Allows this kind of user to add observation field values to their observations"
              },
              "prefers_project_addition_by": {
                "type": "string",
                "description": "Allows this kind of user to add their observations to projects"
              },
              "prefers_common_names": {
                "type": "boolean",
                "description": "Prefers to view common names"
              },
              "prefers_scientific_name_first": {
                "type": "boolean",
                "description": "Prefers to view scientific names before common names"
              }
            },
            "additionalProperties": false
          },
          "preferred_observation_fields_by": {
            "type": "string",
            "nullable": true
          },
          "preferred_observation_license": {
            "type": "string",
            "nullable": true
          },
          "preferred_photo_license": {
            "type": "string",
            "nullable": true
          },
          "preferred_project_addition_by": {
            "type": "string",
            "nullable": true
          },
          "preferred_sound_license": {
            "type": "string",
            "nullable": true
          },
          "prefers_automatic_taxonomic_changes": {
            "type": "boolean",
            "nullable": true
          },
          "prefers_comment_email_notification": {
            "type": "boolean",
            "nullable": true
          },
          "prefers_common_names": {
            "type": "boolean",
            "nullable": true
          },
          "prefers_community_taxa": {
            "type": "boolean",
            "nullable": true
          },
          "prefers_identification_email_notification": {
            "type": "boolean",
            "nullable": true
          },
          "prefers_infraspecies_identification_notifications": {
            "type": "boolean",
            "nullable": true
          },
          "prefers_mention_email_notification": {
            "type": "boolean",
            "nullable": true
          },
          "prefers_message_email_notification": {
            "type": "boolean",
            "nullable": true
          },
          "prefers_monthly_supporter_badge": {
            "type": "boolean",
            "nullable": true
          },
          "prefers_no_email": {
            "type": "boolean",
            "nullable": true
          },
          "prefers_no_tracking": {
            "type": "boolean",
            "nullable": true
          },
          "prefers_non_disagreeing_identification_notifications": {
            "type": "boolean",
            "nullable": true
          },
          "prefers_project_added_your_observation_email_notification": {
            "type": "boolean",
            "nullable": true
          },
          "prefers_project_curator_change_email_notification": {
            "type": "boolean",
            "nullable": true
          },
          "prefers_project_journal_post_email_notification": {
            "type": "boolean",
            "nullable": true
          },
          "prefers_receive_mentions": {
            "type": "boolean",
            "nullable": true
          },
          "prefers_redundant_identification_notifications": {
            "type": "boolean",
            "nullable": true
          },
          "prefers_scientific_name_first": {
            "type": "boolean",
            "nullable": true
          },
          "prefers_taxon_change_email_notification": {
            "type": "boolean",
            "nullable": true
          },
          "prefers_taxon_or_place_observation_email_notification": {
            "type": "boolean",
            "nullable": true
          },
          "prefers_user_observation_email_notification": {
            "type": "boolean",
            "nullable": true
          },
          "privileges": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "search_place_id": {
            "type": "integer",
            "nullable": true
          },
          "taxon_name_priorities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxonNamePriority"
            }
          },
          "time_zone": {
            "type": "string",
            "nullable": true
          },
          "unconfirmed_email": {
            "type": "string",
            "nullable": true
          },
          "universal_search_rank": {
            "type": "integer"
          }
        },
        "required": [
          "id"
        ],
        "additionalProperties": false,
        "nullable": true
      },
      "ProjectMembership": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique auto-increment integer identifier."
          },
          "project_id": {
            "type": "integer"
          },
          "role": {
            "type": "string",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "prefers_curator_coordinate_access_for": {
            "type": "string",
            "nullable": true
          },
          "prefers_updates": {
            "type": "boolean",
            "nullable": true
          }
        },
        "required": [
          "id"
        ],
        "additionalProperties": false
      },
      "ProviderAuthorization": {
        "type": "object",
        "properties": {
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "integer"
          },
          "provider_name": {
            "type": "string",
            "enum": [
              "apple",
              "facebook",
              "flickr",
              "google_oauth2",
              "open_id",
              "orcid",
              "soundcloud",
              "twitter"
            ],
            "description": "Name of the provider from a controlled vocabulary. The `open_id` means Yahoo in this context",
            "example": "google_oauth2"
          },
          "provider_uid": {
            "type": "string",
            "nullable": true,
            "description": "Unique identifier for the user from the provider"
          },
          "scope": {
            "type": "string",
            "nullable": true,
            "description": "Comma-separated list of OAuth scopes granted by the provider",
            "example": "email,user_photos"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "user_id": {
            "type": "integer"
          }
        },
        "required": [
          "id"
        ],
        "additionalProperties": false
      },
      "Relationship": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique auto-increment integer identifier."
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "friend_user": {
            "$ref": "#/components/schemas/User"
          },
          "following": {
            "type": "boolean",
            "description": "Whether the user notifications about new content made by the friend"
          },
          "trust": {
            "type": "boolean",
            "description": "Whether the user trusts the friend with hidden coordinates"
          },
          "reciprocal_trust": {
            "type": "boolean",
            "description": "Whether the friend trusts the user with hidden coordinates"
          }
        },
        "required": [
          "id"
        ],
        "additionalProperties": false
      },
      "ResultsAnnotations": {
        "type": "object",
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          },
          "per_page": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Annotation"
            }
          }
        },
        "required": [
          "total_results",
          "page",
          "per_page",
          "results"
        ],
        "additionalProperties": false
      },
      "ResultsAnnouncements": {
        "type": "object",
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          },
          "per_page": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Announcement"
            }
          }
        },
        "required": [
          "total_results",
          "page",
          "per_page",
          "results"
        ],
        "additionalProperties": false
      },
      "ResultsAuthorizedApplications": {
        "type": "object",
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          },
          "per_page": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuthorizedApplication"
            }
          }
        },
        "required": [
          "total_results",
          "page",
          "per_page",
          "results"
        ],
        "additionalProperties": false
      },
      "ResultsComments": {
        "type": "object",
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          },
          "per_page": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Comment"
            }
          }
        },
        "required": [
          "total_results",
          "page",
          "per_page",
          "results"
        ],
        "additionalProperties": false
      },
      "ResultsControlledTerms": {
        "type": "object",
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          },
          "per_page": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ControlledTerm"
            }
          }
        },
        "required": [
          "total_results",
          "page",
          "per_page",
          "results"
        ],
        "additionalProperties": false
      },
      "ResultsEmailAvailable": {
        "type": "object",
        "properties": {
          "available": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ResultsFlags": {
        "type": "object",
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          },
          "per_page": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Flag"
            }
          }
        },
        "required": [
          "total_results",
          "page",
          "per_page",
          "results"
        ],
        "additionalProperties": false
      },
      "ResultsIdentifications": {
        "type": "object",
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          },
          "per_page": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Identification"
            }
          }
        },
        "required": [
          "total_results",
          "page",
          "per_page",
          "results"
        ],
        "additionalProperties": false
      },
      "ResultsIdentificationsRecentTaxa": {
        "type": "object",
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          },
          "per_page": {
            "type": "integer"
          },
          "all_results_available": {
            "type": "boolean"
          },
          "results": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "taxon": {
                  "$ref": "#/components/schemas/Taxon"
                },
                "identification": {
                  "$ref": "#/components/schemas/Identification"
                }
              },
              "required": [
                "taxon",
                "identification"
              ],
              "additionalProperties": false
            }
          }
        },
        "required": [
          "total_results",
          "page",
          "per_page",
          "results"
        ],
        "additionalProperties": false
      },
      "ResultsIdentifiers": {
        "type": "object",
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          },
          "per_page": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "user_id": {
                  "type": "integer"
                },
                "count": {
                  "type": "integer"
                },
                "user": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "required": [
                "count",
                "user"
              ],
              "additionalProperties": false
            }
          }
        },
        "required": [
          "total_results",
          "page",
          "per_page",
          "results"
        ],
        "additionalProperties": false
      },
      "ResultsMessages": {
        "type": "object",
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          },
          "per_page": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Message"
            }
          }
        },
        "required": [
          "total_results",
          "page",
          "per_page",
          "results"
        ],
        "additionalProperties": false
      },
      "ResultsMessagesThread": {
        "type": "object",
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          },
          "per_page": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Message"
            }
          },
          "thread_id": {
            "type": "integer"
          },
          "flaggable_message_id": {
            "type": "integer"
          },
          "reply_to_user": {
            "$ref": "#/components/schemas/User"
          }
        },
        "required": [
          "total_results",
          "page",
          "per_page",
          "results"
        ],
        "additionalProperties": false
      },
      "ResultsObservationFieldValues": {
        "type": "object",
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          },
          "per_page": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObservationFieldValue"
            }
          }
        },
        "required": [
          "total_results",
          "page",
          "per_page",
          "results"
        ],
        "additionalProperties": false
      },
      "ResultsObservationFields": {
        "type": "object",
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          },
          "per_page": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObservationField"
            }
          }
        },
        "required": [
          "total_results",
          "page",
          "per_page",
          "results"
        ],
        "additionalProperties": false
      },
      "ResultsObservationPhotos": {
        "type": "object",
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          },
          "per_page": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObservationPhoto"
            }
          }
        },
        "required": [
          "total_results",
          "page",
          "per_page",
          "results"
        ],
        "additionalProperties": false
      },
      "ResultsObservationSounds": {
        "type": "object",
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          },
          "per_page": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObservationPhoto"
            }
          }
        },
        "required": [
          "total_results",
          "page",
          "per_page",
          "results"
        ],
        "additionalProperties": false
      },
      "ResultsObservations": {
        "type": "object",
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "total_bounds": {
            "type": "object",
            "properties": {
              "swlat": {
                "type": "number",
                "format": "float"
              },
              "swlng": {
                "type": "number",
                "format": "float"
              },
              "nelat": {
                "type": "number",
                "format": "float"
              },
              "nelng": {
                "type": "number",
                "format": "float"
              }
            },
            "additionalProperties": false
          },
          "page": {
            "type": "integer"
          },
          "per_page": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Observation"
            }
          }
        },
        "required": [
          "total_results",
          "page",
          "per_page",
          "results"
        ],
        "additionalProperties": false
      },
      "ResultsObservationsDeleted": {
        "type": "object",
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          },
          "per_page": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          }
        },
        "required": [
          "total_results",
          "page",
          "per_page",
          "results"
        ],
        "additionalProperties": false
      },
      "ResultsObservationsHistogram": {
        "type": "object",
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          },
          "per_page": {
            "type": "integer"
          },
          "results": {
            "anyOf": [
              {
                "type": "object",
                "properties": {
                  "year": {
                    "type": "object",
                    "properties": {

                    },
                    "additionalProperties": {
                      "type": "integer"
                    }
                  },
                  "month": {
                    "type": "object",
                    "properties": {

                    },
                    "additionalProperties": {
                      "type": "integer"
                    }
                  },
                  "week": {
                    "type": "object",
                    "properties": {

                    },
                    "additionalProperties": {
                      "type": "integer"
                    }
                  },
                  "day": {
                    "type": "object",
                    "properties": {

                    },
                    "additionalProperties": {
                      "type": "integer"
                    }
                  },
                  "hour": {
                    "type": "object",
                    "properties": {

                    },
                    "additionalProperties": {
                      "type": "integer"
                    }
                  },
                  "month_of_year": {
                    "type": "object",
                    "properties": {

                    },
                    "additionalProperties": {
                      "type": "integer"
                    }
                  },
                  "week_of_year": {
                    "type": "object",
                    "properties": {

                    },
                    "additionalProperties": {
                      "type": "integer"
                    }
                  }
                },
                "additionalProperties": false
              }
            ]
          }
        },
        "required": [
          "total_results",
          "page",
          "per_page",
          "results"
        ],
        "additionalProperties": false
      },
      "ResultsObservationsIdentificationCategories": {
        "type": "object",
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          },
          "per_page": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "category": {
                  "type": "string"
                },
                "count": {
                  "type": "integer"
                }
              },
              "required": [
                "category",
                "count"
              ],
              "additionalProperties": false
            }
          }
        },
        "required": [
          "total_results",
          "page",
          "per_page",
          "results"
        ],
        "additionalProperties": false
      },
      "ResultsObservationsIdentifiers": {
        "type": "object",
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          },
          "per_page": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "user": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "required": [
                "count",
                "user"
              ],
              "additionalProperties": false
            }
          }
        },
        "required": [
          "total_results",
          "page",
          "per_page",
          "results"
        ],
        "additionalProperties": false
      },
      "ResultsObservationsObservers": {
        "type": "object",
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          },
          "per_page": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "observation_count": {
                  "type": "integer"
                },
                "species_count": {
                  "type": "integer"
                },
                "user": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "required": [
                "observation_count",
                "species_count",
                "user"
              ],
              "additionalProperties": false
            }
          }
        },
        "required": [
          "total_results",
          "page",
          "per_page",
          "results"
        ],
        "additionalProperties": false
      },
      "ResultsObservationsPopularFieldValues": {
        "type": "object",
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          },
          "per_page": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "week_of_year": {

                },
                "month_of_year": {

                },
                "controlled_attribute": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "ontology_uri": {
                      "type": "string"
                    },
                    "uri": {
                      "type": "string"
                    },
                    "is_value": {
                      "type": "boolean"
                    },
                    "multivalued": {
                      "type": "boolean"
                    },
                    "values": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "ontology_uri": {
                            "type": "string"
                          },
                          "uri": {
                            "type": "string"
                          },
                          "blocking": {
                            "type": "boolean"
                          },
                          "taxon_ids": {
                            "type": "array",
                            "items": {
                              "type": "integer"
                            }
                          },
                          "label": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "taxon_ids": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    },
                    "excepted_taxon_ids": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    },
                    "label": {
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "controlled_value": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "ontology_uri": {
                      "type": "string"
                    },
                    "uri": {
                      "type": "string"
                    },
                    "is_value": {
                      "type": "boolean"
                    },
                    "blocking": {
                      "type": "boolean"
                    },
                    "taxon_ids": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    },
                    "label": {
                      "type": "string"
                    },
                    "values": {
                      "type": "array",
                      "items": {

                      }
                    }
                  },
                  "additionalProperties": false
                }
              },
              "required": [
                "count"
              ],
              "additionalProperties": false
            }
          },
          "unannotated": {
            "type": "object",
            "properties": {

            },
            "additionalProperties": {
              "anyOf": [
                {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer"
                    },
                    "month_of_year": {
                      "type": "object",
                      "properties": {

                      },
                      "additionalProperties": {
                        "type": "integer"
                      }
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer"
                    },
                    "week_of_year": {
                      "type": "object",
                      "properties": {

                      },
                      "additionalProperties": {
                        "type": "integer"
                      }
                    }
                  },
                  "additionalProperties": false
                }
              ]
            }
          }
        },
        "required": [
          "total_results",
          "page",
          "per_page",
          "results"
        ],
        "additionalProperties": false
      },
      "ResultsObservationsQualityGrades": {
        "type": "object",
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          },
          "per_page": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "quality_grade": {
                  "type": "string"
                },
                "count": {
                  "type": "integer"
                }
              },
              "required": [
                "quality_grade",
                "count"
              ],
              "additionalProperties": false
            }
          }
        },
        "required": [
          "total_results",
          "page",
          "per_page",
          "results"
        ],
        "additionalProperties": false
      },
      "ResultsObservationsSpeciesCounts": {
        "type": "object",
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          },
          "per_page": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "taxon": {
                  "$ref": "#/components/schemas/Taxon"
                }
              },
              "required": [
                "count",
                "taxon"
              ],
              "additionalProperties": false
            }
          }
        },
        "required": [
          "total_results",
          "page",
          "per_page",
          "results"
        ],
        "additionalProperties": false
      },
      "ResultsObservationsUmbrellaProjectStats": {
        "type": "object",
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          },
          "per_page": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "observation_count": {
                  "type": "integer"
                },
                "species_count": {
                  "type": "integer"
                },
                "observers_count": {
                  "type": "integer"
                },
                "project": {
                  "$ref": "#/components/schemas/Project"
                }
              },
              "required": [
                "observation_count",
                "species_count",
                "observers_count",
                "project"
              ],
              "additionalProperties": false
            }
          }
        },
        "required": [
          "total_results",
          "page",
          "per_page",
          "results"
        ],
        "additionalProperties": false
      },
      "ResultsPhotos": {
        "type": "object",
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          },
          "per_page": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Photo"
            }
          }
        },
        "required": [
          "total_results",
          "page",
          "per_page",
          "results"
        ],
        "additionalProperties": false
      },
      "ResultsPlaces": {
        "type": "object",
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          },
          "per_page": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Place"
            }
          }
        },
        "required": [
          "total_results",
          "page",
          "per_page",
          "results"
        ],
        "additionalProperties": false
      },
      "ResultsPlacesNearby": {
        "type": "object",
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          },
          "per_page": {
            "type": "integer"
          },
          "results": {
            "type": "object",
            "properties": {
              "standard": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Place"
                }
              },
              "community": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Place"
                }
              }
            },
            "additionalProperties": false
          }
        },
        "required": [
          "total_results",
          "page",
          "per_page",
          "results"
        ],
        "additionalProperties": false
      },
      "ResultsProjectMembership": {
        "type": "object",
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          },
          "per_page": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProjectMembership"
            }
          }
        },
        "required": [
          "total_results",
          "page",
          "per_page",
          "results"
        ],
        "additionalProperties": false
      },
      "ResultsProjectObservations": {
        "type": "object",
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          },
          "per_page": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProjectObservation"
            }
          }
        },
        "required": [
          "total_results",
          "page",
          "per_page",
          "results"
        ],
        "additionalProperties": false
      },
      "ResultsProjects": {
        "type": "object",
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          },
          "per_page": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Project"
            }
          }
        },
        "required": [
          "total_results",
          "page",
          "per_page",
          "results"
        ],
        "additionalProperties": false
      },
      "ResultsProjectsMembers": {
        "type": "object",
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          },
          "per_page": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "project_id": {
                  "type": "integer"
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time"
                },
                "updated_at": {
                  "type": "string",
                  "format": "date-time"
                },
                "role": {
                  "type": "string",
                  "nullable": true
                },
                "observations_count": {
                  "type": "integer"
                },
                "taxa_count": {
                  "type": "integer"
                },
                "user": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string",
                      "nullable": true
                    },
                    "icon": {
                      "type": "string",
                      "nullable": true
                    },
                    "login": {
                      "type": "string"
                    },
                    "icon_url": {
                      "type": "string",
                      "nullable": true
                    },
                    "orcid": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "required": [
                    "id"
                  ],
                  "additionalProperties": false
                }
              },
              "required": [
                "id",
                "observations_count",
                "user"
              ],
              "additionalProperties": false
            }
          }
        },
        "required": [
          "total_results",
          "page",
          "per_page",
          "results"
        ],
        "additionalProperties": false
      },
      "ResultsProjectsPosts": {
        "type": "object",
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          },
          "per_page": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "parent_id": {
                  "type": "integer"
                },
                "parent_type": {
                  "type": "string",
                  "enum": [
                    "Project"
                  ]
                },
                "published_at": {
                  "type": "string",
                  "format": "date-time"
                },
                "title": {
                  "type": "string"
                },
                "body": {
                  "type": "string"
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time"
                },
                "updated_at": {
                  "type": "string",
                  "format": "date-time"
                },
                "type": {
                  "type": "string",
                  "nullable": true
                },
                "start_time": {
                  "type": "string",
                  "format": "date-time",
                  "nullable": true
                },
                "stop_time": {
                  "type": "string",
                  "format": "date-time",
                  "nullable": true
                },
                "place_id": {
                  "type": "integer",
                  "nullable": true
                },
                "latitude": {
                  "type": "number",
                  "format": "float",
                  "nullable": true
                },
                "longitude": {
                  "type": "number",
                  "format": "float",
                  "nullable": true
                },
                "radius": {
                  "type": "number",
                  "format": "float",
                  "nullable": true
                },
                "distance": {
                  "type": "number",
                  "format": "float",
                  "nullable": true
                },
                "uuid": {
                  "type": "string",
                  "format": "uuid",
                  "nullable": true
                },
                "user": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "additionalProperties": false
            }
          }
        },
        "required": [
          "total_results",
          "page",
          "per_page",
          "results"
        ],
        "additionalProperties": false
      },
      "ResultsProviderAuthorizations": {
        "type": "object",
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          },
          "per_page": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProviderAuthorization"
            }
          }
        },
        "required": [
          "total_results",
          "page",
          "per_page",
          "results"
        ],
        "additionalProperties": false
      },
      "ResultsQualityMetrics": {
        "type": "object",
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          },
          "per_page": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/QualityMetric"
            }
          }
        },
        "required": [
          "total_results",
          "page",
          "per_page",
          "results"
        ],
        "additionalProperties": false
      },
      "ResultsRelationships": {
        "type": "object",
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          },
          "per_page": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relationship"
            }
          }
        },
        "required": [
          "total_results",
          "page",
          "per_page",
          "results"
        ],
        "additionalProperties": false
      },
      "SavedLocation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique auto-increment integer identifier."
          },
          "user_id": {
            "type": "integer"
          },
          "latitude": {
            "type": "number",
            "format": "float"
          },
          "longitude": {
            "type": "number",
            "format": "float"
          },
          "title": {
            "type": "string"
          },
          "positional_accuracy": {
            "type": "integer"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "geoprivacy": {
            "type": "string",
            "enum": [
              "open",
              "obscured",
              "private"
            ],
            "nullable": true
          }
        },
        "required": [
          "id"
        ],
        "additionalProperties": false
      },
      "ResultsSavedLocations": {
        "type": "object",
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          },
          "per_page": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SavedLocation"
            }
          }
        },
        "required": [
          "total_results",
          "page",
          "per_page",
          "results"
        ],
        "additionalProperties": false
      },
      "ResultsSearch": {
        "type": "object",
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          },
          "per_page": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "score": {
                  "type": "number",
                  "format": "float",
                  "description": "Search score; can be used to sort search results"
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "place",
                    "project",
                    "taxon",
                    "user"
                  ],
                  "description": "Type of record for this search result",
                  "example": "place"
                },
                "matches": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Array of text field values that matched the search query"
                },
                "place": {
                  "$ref": "#/components/schemas/Place"
                },
                "project": {
                  "$ref": "#/components/schemas/Project"
                },
                "taxon": {
                  "$ref": "#/components/schemas/Taxon"
                },
                "user": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "required": [
                "type"
              ]
            }
          }
        },
        "required": [
          "total_results",
          "page",
          "per_page",
          "results"
        ],
        "additionalProperties": false
      },
      "ResultsSites": {
        "type": "object",
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          },
          "per_page": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Site"
            }
          }
        },
        "required": [
          "total_results",
          "page",
          "per_page",
          "results"
        ],
        "additionalProperties": false
      },
      "ResultsSounds": {
        "type": "object",
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          },
          "per_page": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Sound"
            }
          }
        },
        "required": [
          "total_results",
          "page",
          "per_page",
          "results"
        ],
        "additionalProperties": false
      },
      "Subscription": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique auto-increment integer identifier."
          },
          "user_id": {
            "type": "integer"
          },
          "resource_type": {
            "type": "string"
          },
          "resource_id": {
            "type": "integer"
          },
          "created_at": {
            "type": "string"
          },
          "updated_at": {
            "type": "string"
          },
          "taxon_id": {
            "type": "integer"
          }
        },
        "required": [
          "id"
        ],
        "additionalProperties": false
      },
      "ResultsSubscriptions": {
        "type": "object",
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          },
          "per_page": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Subscription"
            }
          }
        },
        "required": [
          "total_results",
          "page",
          "per_page",
          "results"
        ],
        "additionalProperties": false
      },
      "ResultsTaxa": {
        "type": "object",
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          },
          "per_page": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Taxon"
            }
          }
        },
        "required": [
          "total_results",
          "page",
          "per_page",
          "results"
        ],
        "additionalProperties": false
      },
      "TaxonCount": {
        "type": "object",
        "properties": {
          "taxon": {
            "$ref": "#/components/schemas/Taxon"
          },
          "count": {
            "type": "integer"
          }
        },
        "required": [
          "taxon",
          "count"
        ],
        "additionalProperties": false
      },
      "ResultsTaxaCounts": {
        "type": "object",
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          },
          "per_page": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxonCount"
            }
          }
        },
        "required": [
          "total_results",
          "page",
          "per_page",
          "results"
        ],
        "additionalProperties": false
      },
      "ResultsTaxaSuggest": {
        "type": "object",
        "properties": {
          "comprehensiveness": {
            "type": "object",
            "properties": {
              "list": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "Unique auto-increment integer identifier."
                  },
                  "title": {
                    "type": "string"
                  },
                  "source": {
                    "type": "object",
                    "properties": {
                      "url": {
                        "type": "string"
                      },
                      "in_text": {
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "required": [
                  "id"
                ],
                "additionalProperties": false,
                "description": "Source of these comprehensive suggestions"
              }
            },
            "additionalProperties": false,
            "description": " Set when the suggestions are believed to be comprehensive given the search\n      parameters, e.g. if retrieving suggestions for squirrels in California,\n      these should represent *all* the squirrels known to occur in California.\n      If blank or absent, that means the suggestions may or may not be\n      comprehensive. Currently only set when `source` is `checklist`\n    "
          },
          "common_ancestor": {
            "$ref": "#/components/schemas/CommonAncestor"
          },
          "results": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "source_type": {
                  "type": "string"
                },
                "score": {
                  "type": "number",
                  "format": "float"
                },
                "source_details": {
                  "type": "object",
                  "properties": {
                    "combined_score": {
                      "type": "number",
                      "format": "float"
                    },
                    "frequency_score": {
                      "type": "number",
                      "format": "float"
                    },
                    "listed_taxon": {
                      "$ref": "#/components/schemas/ListedTaxon"
                    },
                    "observations_count": {
                      "type": "integer"
                    },
                    "vision_score": {
                      "type": "number",
                      "format": "float"
                    }
                  },
                  "additionalProperties": false
                },
                "taxon": {
                  "$ref": "#/components/schemas/Taxon"
                }
              },
              "required": [
                "source_type",
                "score",
                "taxon"
              ],
              "additionalProperties": false
            }
          },
          "query": {
            "type": "object",
            "properties": {
              "featured_observation_id": {
                "type": "string",
                "format": "uuid",
                "description": "When `source` is `observations`, ignore this observation"
              },
              "fields": {

              },
              "image_url": {
                "type": "string",
                "description": "URL for image to use when `source` is `visual`",
                "title": "image_url"
              },
              "include_representative_photos": {
                "anyOf": [
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "string"
                  }
                ]
              },
              "limit": {
                "type": "number",
                "format": "float",
                "minimum": 0,
                "description": "Number of results to return"
              },
              "lat": {
                "type": "number",
                "format": "float",
                "minimum": -90,
                "maximum": 90,
                "description": "Coordinate used when fetching nearby results `source` is `visual` or `*observations`"
              },
              "lng": {
                "type": "number",
                "format": "float",
                "minimum": -180,
                "maximum": 180,
                "description": "Coordinate used when fetching nearby results `source` is `visual` or `*observations`"
              },
              "locale": {
                "type": "string"
              },
              "months": {
                "type": "string"
              },
              "observation_id": {
                "type": "string",
                "format": "uuid",
                "description": " Automatically set place and taxon filters based on this observation; this\n      will override the values of `place_id` and `taxon_id` if these values\n      can be derived from the observation\n    "
              },
              "observed_on": {
                "type": "string",
                "description": " Date the subject was observed (YYYY-MM-DD), used to refine suggestions to\n      those observed at a similar time of year\n    "
              },
              "order_by": {
                "type": "string",
                "enum": [
                  "taxonomy",
                  "default",
                  "sciname"
                ],
                "description": " How the suggestions will be ordered. The default is to order by whatever default\n      a source uses, e.g. the score when `source` is `visual`, or the number of\n      observations (frequency) when the `source` is `*observations`. Ordering by\n      `taxonomy` will group the results by their closeness in the taxonomic\n      tree, but continue to use default ordering for siblings (e.g. species in the\n      same genus).\n    "
              },
              "place_id": {
                "type": "integer",
                "description": " Only retrieve suggestions from this place when `source` is `checklist`\n      or `*observations`\n    "
              },
              "place_lat": {
                "type": "number",
                "format": "float",
                "minimum": -90,
                "maximum": 90,
                "description": " Coordinate used to set a place filter when source is `*observations` by\n      choosing the place whose boundary contains the coordinate. Only chooses\n      from places curated by staff (aka \"standard\" places) and only sets the\n      place when lat, lng, and place_id are blank\n    "
              },
              "place_lng": {
                "type": "number",
                "format": "float",
                "minimum": -180,
                "maximum": 180,
                "description": "See `place_lat`"
              },
              "source": {
                "type": "string",
                "enum": [
                  "captive_observations",
                  "checklist",
                  "misidentifications",
                  "observations",
                  "rg_observations",
                  "visual"
                ],
                "nullable": true,
                "description": " Source of the suggestions. Note that different sources support different\n      search parameters. See each parameter for details\n    "
              },
              "taxon_id": {
                "type": "integer",
                "description": " Only retrieve suggestions in this taxon. If taxon is below genus level it\n      will be replaced with the genus that contains it. When `source` is\n      `misidentifications`, suggestions will be species commonly misidentified\n      as this taxon\n    "
              }
            },
            "additionalProperties": false,
            "description": " Query parameters used to generate these results. When `source` is\n      `*observations` this may have some additional parameters used to set\n      defaults for the observations query.\n    "
          },
          "queryTaxon": {
            "$ref": "#/components/schemas/Taxon"
          },
          "queryPlace": {
            "$ref": "#/components/schemas/Place"
          }
        },
        "required": [
          "results"
        ],
        "additionalProperties": false
      },
      "ResultsTaxonNamePriorities": {
        "type": "object",
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          },
          "per_page": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxonNamePriority"
            }
          }
        },
        "required": [
          "total_results",
          "page",
          "per_page",
          "results"
        ],
        "additionalProperties": false
      },
      "ResultsTaxonSummary": {
        "type": "object",
        "properties": {
          "conservation_status": {
            "$ref": "#/components/schemas/ConservationStatus"
          },
          "listed_taxon": {
            "$ref": "#/components/schemas/ListedTaxon"
          },
          "wikipedia_summary": {
            "type": "string",
            "nullable": true,
            "description": "Summary description of this taxon from Wikipedia"
          }
        },
        "additionalProperties": false
      },
      "ResultsTranslationsLocales": {
        "type": "object",
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          },
          "per_page": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "locale": {
                  "type": "string"
                },
                "language_in_locale": {
                  "type": "string"
                }
              },
              "required": [
                "locale"
              ],
              "additionalProperties": false
            }
          }
        },
        "required": [
          "total_results",
          "page",
          "per_page",
          "results"
        ],
        "additionalProperties": false
      },
      "Update": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique auto-increment integer identifier."
          },
          "comment": {
            "$ref": "#/components/schemas/Comment"
          },
          "comment_id": {
            "type": "integer",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "identification": {
            "$ref": "#/components/schemas/Identification"
          },
          "identification_id": {
            "type": "integer",
            "nullable": true
          },
          "notifier_id": {
            "type": "integer"
          },
          "notifier_type": {
            "type": "string"
          },
          "notification": {
            "type": "string"
          },
          "resource_owner_id": {
            "type": "integer"
          },
          "resource_type": {
            "type": "string"
          },
          "resource_id": {
            "type": "integer"
          },
          "resource_uuid": {
            "type": "string",
            "format": "uuid"
          },
          "viewed": {
            "type": "boolean"
          }
        },
        "required": [
          "id"
        ],
        "additionalProperties": false
      },
      "ResultsUpdates": {
        "type": "object",
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          },
          "per_page": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Update"
            }
          }
        },
        "required": [
          "total_results",
          "page",
          "per_page",
          "results"
        ],
        "additionalProperties": false
      },
      "ResultsUsers": {
        "type": "object",
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          },
          "per_page": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/User"
            }
          }
        },
        "required": [
          "total_results",
          "page",
          "per_page",
          "results"
        ],
        "additionalProperties": false
      },
      "ResultsUsersMe": {
        "type": "object",
        "properties": {
          "total_results": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          },
          "per_page": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PrivateUser"
            }
          }
        },
        "required": [
          "total_results",
          "page",
          "per_page",
          "results"
        ],
        "additionalProperties": false
      },
      "ResultsUsersNotificationCounts": {
        "type": "object",
        "properties": {
          "updates_count": {
            "type": "integer"
          },
          "messages_count": {
            "type": "integer"
          }
        },
        "required": [
          "updates_count",
          "messages_count"
        ],
        "additionalProperties": false
      },
      "Search": {
        "type": "object",
        "properties": {
          "score": {
            "type": "number",
            "format": "float",
            "description": "Search score; can be used to sort search results"
          },
          "type": {
            "type": "string",
            "enum": [
              "place",
              "project",
              "taxon",
              "user"
            ],
            "description": "Type of record for this search result",
            "example": "place"
          },
          "matches": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of text field values that matched the search query"
          },
          "place": {
            "$ref": "#/components/schemas/Place"
          },
          "project": {
            "$ref": "#/components/schemas/Project"
          },
          "taxon": {
            "$ref": "#/components/schemas/Taxon"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          }
        },
        "required": [
          "type"
        ]
      },
      "UtfGrid": {
        "type": "object",
        "properties": {
          "grid": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "keys": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "data": {
            "type": "object",
            "properties": {

            }
          }
        },
        "required": [
          "grid",
          "keys",
          "data"
        ],
        "additionalProperties": false
      },
      "AnnotationsCreate": {
        "type": "object",
        "properties": {
          "resource_type": {
            "type": "string"
          },
          "resource_id": {
            "type": "string",
            "format": "uuid"
          },
          "controlled_attribute_id": {
            "type": "integer"
          },
          "controlled_value_id": {
            "type": "integer"
          }
        },
        "required": [
          "resource_type",
          "resource_id",
          "controlled_attribute_id",
          "controlled_value_id"
        ],
        "additionalProperties": false
      },
      "AnnouncementsSearch": {
        "type": "object",
        "properties": {
          "placement": {
            "type": "string",
            "enum": [
              "users/dashboard#sidebar",
              "users/dashboard",
              "welcome/index",
              "mobile/home",
              "mobile"
            ]
          },
          "client": {
            "type": "string",
            "enum": [
              "inat-ios",
              "inat-android",
              "seek",
              "inatrn"
            ]
          },
          "locale": {
            "type": "string"
          },
          "fields": {

          }
        },
        "additionalProperties": false
      },
      "CommentsCreate": {
        "type": "object",
        "properties": {
          "fields": {

          },
          "comment": {
            "type": "object",
            "properties": {
              "parent_type": {
                "type": "string",
                "enum": [
                  "Observation",
                  "Post"
                ],
                "description": "Type of record being commented on"
              },
              "parent_id": {
                "type": "string",
                "format": "uuid",
                "description": "UUID of record being commented on"
              },
              "body": {
                "type": "string"
              }
            },
            "required": [
              "parent_type",
              "parent_id",
              "body"
            ],
            "additionalProperties": false
          }
        },
        "required": [
          "comment"
        ],
        "additionalProperties": false
      },
      "CommentsUpdate": {
        "type": "object",
        "properties": {
          "fields": {

          },
          "comment": {
            "type": "object",
            "properties": {
              "body": {
                "type": "string"
              }
            },
            "required": [
              "body"
            ],
            "additionalProperties": false
          }
        },
        "required": [
          "comment"
        ],
        "additionalProperties": false
      },
      "FlagsCreate": {
        "type": "object",
        "properties": {
          "flag": {
            "type": "object",
            "properties": {
              "flaggable_type": {
                "type": "string"
              },
              "flaggable_id": {
                "type": "integer"
              },
              "flag": {
                "type": "string"
              }
            },
            "additionalProperties": false
          },
          "flag_explanation": {
            "type": "string",
            "nullable": true
          },
          "fields": {

          }
        },
        "additionalProperties": false
      },
      "FlagsUpdate": {
        "type": "object",
        "properties": {
          "flag": {
            "type": "object",
            "properties": {
              "resolved": {
                "type": "boolean"
              }
            },
            "additionalProperties": false
          },
          "fields": {

          }
        },
        "additionalProperties": false
      },
      "IdentificationsCreate": {
        "type": "object",
        "properties": {
          "fields": {

          },
          "identification": {
            "type": "object",
            "properties": {
              "body": {
                "type": "string"
              },
              "observation_id": {
                "type": "string",
                "format": "uuid"
              },
              "taxon_id": {
                "type": "integer"
              },
              "vision": {
                "type": "boolean"
              },
              "disagreement": {
                "type": "boolean"
              }
            },
            "required": [
              "observation_id",
              "taxon_id"
            ],
            "additionalProperties": false
          }
        },
        "required": [
          "identification"
        ],
        "additionalProperties": false
      },
      "IdentificationsRecentTaxa": {
        "type": "object",
        "properties": {
          "page": {
            "type": "integer"
          },
          "per_page": {
            "type": "integer"
          },
          "fields": {
            "type": "string",
            "title": "fields"
          },
          "verifiable": {
            "type": "boolean"
          },
          "taxon_id": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "description": "ID taxa must match the given taxa or their descendants"
          },
          "quality_grade": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "research",
                "needs_id",
                "casual"
              ]
            },
            "description": "Observation must have this quality grade"
          },
          "rank": {
            "type": "string"
          },
          "category": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "locale": {
            "type": "string"
          }
        },
        "required": [
          "taxon_id"
        ],
        "additionalProperties": false
      },
      "IdentificationsSearch": {
        "type": "object",
        "properties": {
          "page": {
            "type": "integer"
          },
          "per_page": {
            "type": "integer"
          },
          "fields": {
            "type": "string",
            "title": "fields"
          },
          "taxon_id": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "ID taxa must match the given taxa or their descendants"
          },
          "quality_grade": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "research",
                "needs_id",
                "casual"
              ]
            },
            "description": "Observation must have this quality grade"
          }
        },
        "additionalProperties": false
      },
      "IdentificationsSimilarSpecies": {
        "type": "object",
        "properties": {
          "page": {
            "type": "integer"
          },
          "per_page": {
            "type": "integer"
          },
          "fields": {
            "type": "string",
            "title": "fields"
          },
          "taxon_id": {
            "type": "integer"
          },
          "quality_grade": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "research",
                "needs_id",
                "casual"
              ]
            },
            "description": "Observation must have this quality grade"
          }
        },
        "required": [
          "taxon_id"
        ],
        "additionalProperties": false
      },
      "IdentificationsUpdate": {
        "type": "object",
        "properties": {
          "fields": {

          },
          "identification": {
            "type": "object",
            "properties": {
              "body": {
                "type": "string"
              },
              "current": {
                "type": "boolean",
                "description": "Setting to false means the identification is withdrawn"
              }
            },
            "additionalProperties": false
          }
        },
        "required": [
          "identification"
        ],
        "additionalProperties": false
      },
      "Messages": {
        "type": "object",
        "properties": {
          "page": {
            "type": "integer"
          },
          "fields": {

          }
        },
        "additionalProperties": false
      },
      "MessagesCreate": {
        "type": "object",
        "properties": {
          "message": {
            "type": "object",
            "properties": {
              "to_user_id": {
                "type": "integer"
              },
              "thread_id": {
                "type": "integer"
              },
              "subject": {
                "type": "string"
              },
              "body": {
                "type": "string"
              }
            },
            "required": [
              "body"
            ],
            "additionalProperties": false
          },
          "fields": {

          }
        },
        "additionalProperties": false
      },
      "ObservationFieldValuesCreate": {
        "type": "object",
        "properties": {
          "fields": {

          },
          "observation_field_value": {
            "type": "object",
            "properties": {
              "observation_id": {
                "type": "string",
                "format": "uuid"
              },
              "observation_field_id": {
                "type": "integer"
              },
              "value": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number",
                    "format": "float"
                  }
                ]
              }
            },
            "required": [
              "observation_id"
            ],
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      "ObservationPhotosCreate": {
        "type": "object",
        "properties": {
          "fields": {

          },
          "observation_photo": {
            "type": "object",
            "properties": {
              "observation_id": {
                "type": "string",
                "format": "uuid",
                "description": "UUID for the existing observation"
              },
              "photo_id": {
                "type": "integer",
                "description": "Sequential ID for the existing photo"
              },
              "position": {
                "type": "integer"
              },
              "uuid": {
                "type": "string",
                "format": "uuid",
                "description": "New UUID for the photo, helps prevent duplication in poor network conditions"
              }
            },
            "required": [
              "observation_id"
            ],
            "additionalProperties": false
          }
        },
        "description": "description inside of schema file"
      },
      "ObservationPhotosCreateMultipart": {
        "type": "object",
        "properties": {
          "fields": {

          },
          "observation_photo[observation_id]": {
            "type": "string",
            "format": "uuid",
            "description": "UUID for the existing observation"
          },
          "observation_photo[uuid]": {
            "type": "string",
            "format": "uuid",
            "description": "New UUID for the photo, helps prevent duplication in poor network conditions"
          },
          "observation_photo[position]": {
            "type": "integer"
          },
          "file": {
            "type": "string",
            "format": "binary"
          }
        },
        "required": [
          "observation_photo[observation_id]",
          "file"
        ]
      },
      "ObservationPhotosUpdate": {
        "type": "object",
        "properties": {
          "fields": {

          },
          "observation_photo": {
            "type": "object",
            "properties": {
              "observation_id": {
                "type": "string",
                "format": "uuid"
              },
              "position": {
                "type": "integer"
              }
            },
            "required": [
              "observation_id"
            ]
          }
        },
        "additionalProperties": false
      },
      "ObservationSoundsCreate": {
        "type": "object",
        "properties": {
          "fields": {

          },
          "observation_sound": {
            "type": "object",
            "properties": {
              "observation_id": {
                "type": "string",
                "format": "uuid"
              },
              "sound_id": {
                "type": "integer"
              }
            },
            "required": [
              "observation_id"
            ],
            "additionalProperties": false
          }
        }
      },
      "ObservationSoundsCreateMultipart": {
        "type": "object",
        "properties": {
          "fields": {

          },
          "observation_sound[observation_id]": {
            "type": "string",
            "format": "uuid"
          },
          "file": {
            "type": "string",
            "format": "binary"
          }
        },
        "required": [
          "observation_sound[observation_id]",
          "file"
        ]
      },
      "ObservationSoundsUpdate": {
        "type": "object",
        "properties": {
          "fields": {

          },
          "observation_sound": {
            "type": "object",
            "properties": {
              "observation_id": {
                "type": "string",
                "format": "uuid"
              }
            },
            "required": [
              "observation_id"
            ]
          }
        },
        "additionalProperties": false
      },
      "ObservationsCreate": {
        "type": "object",
        "properties": {
          "fields": {

          },
          "observation": {
            "type": "object",
            "properties": {
              "uuid": {
                "type": "string",
                "format": "uuid"
              },
              "captive_flag": {
                "type": "boolean"
              },
              "coordinate_system": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "geo_x": {
                "type": "number",
                "format": "float"
              },
              "geo_y": {
                "type": "number",
                "format": "float"
              },
              "geoprivacy": {
                "type": "string"
              },
              "latitude": {
                "type": "number",
                "format": "float"
              },
              "license": {
                "type": "string"
              },
              "location_is_exact": {
                "type": "boolean"
              },
              "longitude": {
                "type": "number",
                "format": "float"
              },
              "make_license_default": {
                "type": "boolean"
              },
              "make_licenses_same": {
                "type": "boolean"
              },
              "map_scale": {
                "type": "integer"
              },
              "observation_field_values_attributes": {
                "type": "object",
                "properties": {
                  "observation_field_id": {
                    "type": "integer"
                  },
                  "value": {

                  }
                },
                "required": [
                  "observation_field_id",
                  "value"
                ],
                "additionalProperties": false
              },
              "observed_on_string": {
                "type": "string"
              },
              "owners_identification_from_vision": {
                "type": "boolean"
              },
              "place_guess": {
                "type": "string"
              },
              "positional_accuracy": {
                "type": "number",
                "format": "float"
              },
              "positioning_device": {
                "type": "string"
              },
              "positioning_method": {
                "type": "string"
              },
              "project_id": {
                "type": "integer"
              },
              "prefers_community_taxon": {
                "type": "boolean"
              },
              "site_id": {
                "type": "integer"
              },
              "species_guess": {
                "type": "string",
                "description": "The name of the organism observed. If the taxon ID is absent, iNat will try to choose a single taxon based on this string, but it may fail if there's some taxonomic amgiguity."
              },
              "tag_list": {
                "type": "string"
              },
              "taxon_id": {
                "type": "number",
                "format": "float"
              },
              "taxon_name": {
                "type": "number",
                "format": "float"
              },
              "time_zone": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      "ObservationsDeleted": {
        "type": "object",
        "properties": {
          "fields": {

          },
          "since": {
            "type": "string",
            "format": "date"
          }
        },
        "required": [
          "since"
        ],
        "additionalProperties": false
      },
      "ObservationsHistogram": {
        "type": "object",
        "properties": {
          "acc": {
            "type": "boolean",
            "description": "Filter by whether `positional_accuracy` is set or not"
          },
          "captive": {
            "type": "boolean",
            "description": "Filter by captive / cultivated status"
          },
          "endemic": {
            "type": "boolean",
            "description": "Filter by whether the observation is in a place with a check list entry indicating the establishment means is `endemic`"
          },
          "geo": {
            "type": "boolean"
          },
          "id_please": {
            "type": "boolean"
          },
          "identified": {
            "type": "boolean"
          },
          "introduced": {
            "type": "boolean"
          },
          "mappable": {
            "type": "boolean"
          },
          "native": {
            "type": "boolean"
          },
          "out_of_range": {
            "type": "boolean"
          },
          "pcid": {
            "type": "boolean"
          },
          "photos": {
            "type": "boolean"
          },
          "popular": {
            "type": "boolean"
          },
          "sounds": {
            "type": "boolean"
          },
          "taxon_is_active": {
            "type": "boolean"
          },
          "threatened": {
            "type": "boolean",
            "description": "Filter by whether the observed taxon has a conservation status of \"threatened\" or worse"
          },
          "verifiable": {
            "type": "boolean",
            "description": "Filter by whether observations are 'verifiable' (have quality grades `research` or `needs_id`)"
          },
          "id": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "integer"
                },
                {
                  "type": "string"
                }
              ]
            }
          },
          "not_id": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "license": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "cc-by",
                "cc-by-nc",
                "cc-by-nd",
                "cc-by-sa",
                "cc-by-nc-nd",
                "cc-by-nc-sa",
                "cc0"
              ]
            }
          },
          "photo_license": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "cc-by",
                "cc-by-nc",
                "cc-by-nd",
                "cc-by-sa",
                "cc-by-nc-nd",
                "cc-by-nc-sa",
                "cc0"
              ]
            }
          },
          "licensed": {
            "type": "boolean",
            "description": "Filter by observations where the license attribute is not null, i.e. it is licensed"
          },
          "photo_licensed": {
            "type": "boolean",
            "description": "Filter by observations where the license attribute of at least one photo is not null"
          },
          "place_id": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "integer"
                },
                {
                  "type": "string"
                }
              ]
            }
          },
          "project_id": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "string"
                }
              ]
            }
          },
          "coords_viewable_for_proj": {
            "type": "boolean",
            "description": "Filter by observers who trust the project(s) specified in `project_id` OR trust the authenticated viewer"
          },
          "rank": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "kingdom",
                "phylum",
                "subphylum",
                "superclass",
                "class",
                "subclass",
                "infraclass",
                "subterclass",
                "superorder",
                "order",
                "suborder",
                "infraorder",
                "parvorder",
                "zoosection",
                "zoosubsection",
                "superfamily",
                "epifamily",
                "family",
                "subfamily",
                "supertribe",
                "tribe",
                "subtribe",
                "genus",
                "genushybrid",
                "subgenus",
                "section",
                "subsection",
                "complex",
                "species",
                "hybrid",
                "subspecies",
                "variety",
                "form",
                "infrahybrid"
              ]
            }
          },
          "site_id": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "sound_license": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "cc-by",
                "cc-by-nc",
                "cc-by-nd",
                "cc-by-sa",
                "cc-by-nc-nd",
                "cc-by-nc-sa",
                "cc0"
              ]
            }
          },
          "taxon_id": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "without_taxon_id": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "taxon_name": {
            "type": "string"
          },
          "user_id": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "user_login": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hour": {
            "type": "array",
            "items": {
              "type": "integer",
              "minimum": 0,
              "maximum": 23
            }
          },
          "day": {
            "type": "array",
            "items": {
              "type": "integer",
              "minimum": 1,
              "maximum": 31
            }
          },
          "month": {
            "type": "array",
            "items": {
              "type": "integer",
              "minimum": 1,
              "maximum": 12
            }
          },
          "year": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "created_day": {
            "type": "array",
            "items": {
              "type": "integer",
              "minimum": 1,
              "maximum": 31
            }
          },
          "created_month": {
            "type": "array",
            "items": {
              "type": "integer",
              "minimum": 1,
              "maximum": 12
            }
          },
          "created_year": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "term_id": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "term_value_id": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "without_term_value_id": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "term_id_or_unknown": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "annotation_user_id": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "acc_above": {
            "type": "integer"
          },
          "acc_below": {
            "type": "integer"
          },
          "acc_below_or_unknown": {
            "type": "integer"
          },
          "d1": {
            "type": "string"
          },
          "d2": {
            "type": "string"
          },
          "created_d1": {
            "type": "string"
          },
          "created_d2": {
            "type": "string"
          },
          "created_on": {
            "type": "string"
          },
          "observed_on": {
            "type": "string"
          },
          "unobserved_by_user_id": {
            "type": "string"
          },
          "apply_project_rules_for": {
            "type": "string"
          },
          "observation_accuracy_experiment_id": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "cs": {
            "type": "string"
          },
          "csa": {
            "type": "string"
          },
          "csi": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "LC",
                "NT",
                "VU",
                "EN",
                "CR",
                "EW",
                "EX"
              ]
            }
          },
          "geoprivacy": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "obscured",
                "obscured_private",
                "open",
                "private"
              ]
            }
          },
          "taxon_geoprivacy": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "obscured",
                "obscured_private",
                "open",
                "private"
              ]
            }
          },
          "obscuration": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "obscured",
                "private",
                "none"
              ]
            },
            "description": "Filter by observations where the `geoprivacy` or `taxon_geoprivacy` match these values"
          },
          "hrank": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "kingdom",
                "phylum",
                "subphylum",
                "superclass",
                "class",
                "subclass",
                "infraclass",
                "subterclass",
                "superorder",
                "order",
                "suborder",
                "infraorder",
                "parvorder",
                "zoosection",
                "zoosubsection",
                "superfamily",
                "epifamily",
                "family",
                "subfamily",
                "supertribe",
                "tribe",
                "subtribe",
                "genus",
                "genushybrid",
                "subgenus",
                "section",
                "subsection",
                "complex",
                "species",
                "hybrid",
                "subspecies",
                "variety",
                "form",
                "infrahybrid"
              ]
            }
          },
          "lrank": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "kingdom",
                "phylum",
                "subphylum",
                "superclass",
                "class",
                "subclass",
                "infraclass",
                "subterclass",
                "superorder",
                "order",
                "suborder",
                "infraorder",
                "parvorder",
                "zoosection",
                "zoosubsection",
                "superfamily",
                "epifamily",
                "family",
                "subfamily",
                "supertribe",
                "tribe",
                "subtribe",
                "genus",
                "genushybrid",
                "subgenus",
                "section",
                "subsection",
                "complex",
                "species",
                "hybrid",
                "subspecies",
                "variety",
                "form",
                "infrahybrid"
              ]
            }
          },
          "iconic_taxa": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "Actinopterygii",
                "Animalia",
                "Amphibia",
                "Arachnida",
                "Aves",
                "Chromista",
                "Fungi",
                "Insecta",
                "Mammalia",
                "Mollusca",
                "Reptilia",
                "Plantae",
                "Protozoa",
                "unknown"
              ]
            }
          },
          "id_above": {
            "type": "integer"
          },
          "id_below": {
            "type": "integer"
          },
          "identifications": {
            "type": "string",
            "enum": [
              "most_agree",
              "most_disagree",
              "some_agree"
            ],
            "description": "Filter by level of agreement among identifications:\n\n* **most_agree:** returns observations where there are more active identifications of taxa that agree with the Observation Taxon than active identifications that disagree with the Observation Taxon\n* **some_agree:** returns observations where there are some active identifications of taxa that agree with the Observation Taxon\n* **most_disagree:** returns observations where there are more active identifications of taxa that disagree with the Observation Taxon than active identifications that agree with the Observation Taxon"
          },
          "disagreements": {
            "type": "boolean",
            "description": "Whether there is disagreement among active identifications"
          },
          "lat": {
            "type": "number",
            "format": "float",
            "minimum": -90,
            "maximum": 90
          },
          "lng": {
            "type": "number",
            "format": "float",
            "minimum": -180,
            "maximum": 180
          },
          "radius": {
            "type": "number",
            "format": "float"
          },
          "nelat": {
            "type": "number",
            "format": "float",
            "minimum": -90,
            "maximum": 90
          },
          "nelng": {
            "type": "number",
            "format": "float",
            "minimum": -180,
            "maximum": 180
          },
          "swlat": {
            "type": "number",
            "format": "float",
            "minimum": -90,
            "maximum": 90
          },
          "swlng": {
            "type": "number",
            "format": "float",
            "minimum": -180,
            "maximum": 180
          },
          "list_id": {
            "type": "integer"
          },
          "not_in_project": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "not_matching_project_rules_for": {
            "type": "string"
          },
          "q": {
            "type": "string"
          },
          "search_on": {
            "type": "string",
            "enum": [
              "names",
              "tags",
              "description",
              "place",
              "taxon_page_obs_photos"
            ]
          },
          "quality_grade": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "casual",
                "needs_id",
                "research"
              ]
            }
          },
          "without_field": {
            "type": "string"
          },
          "outlink_source": {
            "type": "string"
          },
          "updated_since": {
            "type": "string"
          },
          "viewer_id": {
            "type": "integer"
          },
          "reviewed": {
            "type": "boolean"
          },
          "expected_nearby": {
            "type": "boolean"
          },
          "locale": {
            "type": "string"
          },
          "preferred_place_id": {
            "type": "integer"
          },
          "ttl": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          },
          "per_page": {
            "type": "integer"
          },
          "order": {
            "type": "string",
            "enum": [
              "desc",
              "asc"
            ],
            "default": "desc"
          },
          "order_by": {
            "type": "string",
            "enum": [
              "created_at",
              "geo_score",
              "id",
              "observed_on",
              "random",
              "species_guess",
              "updated_at",
              "votes"
            ],
            "default": "created_at"
          },
          "only_id": {
            "type": "boolean"
          },
          "fields": {
            "description": "Attribute fields to return in the response",
            "example": "species_guess,observed_on"
          },
          "date_field": {
            "type": "string",
            "enum": [
              "observed",
              "created"
            ],
            "default": "observed"
          },
          "interval": {
            "type": "string",
            "enum": [
              "year",
              "month",
              "week",
              "day",
              "hour",
              "month_of_year",
              "week_of_year"
            ],
            "default": "month_of_year"
          }
        },
        "additionalProperties": false
      },
      "ObservationsObservers": {
        "type": "object",
        "properties": {
          "acc": {
            "type": "boolean",
            "description": "Filter by whether `positional_accuracy` is set or not"
          },
          "captive": {
            "type": "boolean",
            "description": "Filter by captive / cultivated status"
          },
          "endemic": {
            "type": "boolean",
            "description": "Filter by whether the observation is in a place with a check list entry indicating the establishment means is `endemic`"
          },
          "geo": {
            "type": "boolean"
          },
          "id_please": {
            "type": "boolean"
          },
          "identified": {
            "type": "boolean"
          },
          "introduced": {
            "type": "boolean"
          },
          "mappable": {
            "type": "boolean"
          },
          "native": {
            "type": "boolean"
          },
          "out_of_range": {
            "type": "boolean"
          },
          "pcid": {
            "type": "boolean"
          },
          "photos": {
            "type": "boolean"
          },
          "popular": {
            "type": "boolean"
          },
          "sounds": {
            "type": "boolean"
          },
          "taxon_is_active": {
            "type": "boolean"
          },
          "threatened": {
            "type": "boolean",
            "description": "Filter by whether the observed taxon has a conservation status of \"threatened\" or worse"
          },
          "verifiable": {
            "type": "boolean",
            "description": "Filter by whether observations are 'verifiable' (have quality grades `research` or `needs_id`)"
          },
          "id": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "integer"
                },
                {
                  "type": "string"
                }
              ]
            }
          },
          "not_id": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "license": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "cc-by",
                "cc-by-nc",
                "cc-by-nd",
                "cc-by-sa",
                "cc-by-nc-nd",
                "cc-by-nc-sa",
                "cc0"
              ]
            }
          },
          "photo_license": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "cc-by",
                "cc-by-nc",
                "cc-by-nd",
                "cc-by-sa",
                "cc-by-nc-nd",
                "cc-by-nc-sa",
                "cc0"
              ]
            }
          },
          "licensed": {
            "type": "boolean",
            "description": "Filter by observations where the license attribute is not null, i.e. it is licensed"
          },
          "photo_licensed": {
            "type": "boolean",
            "description": "Filter by observations where the license attribute of at least one photo is not null"
          },
          "place_id": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "integer"
                },
                {
                  "type": "string"
                }
              ]
            }
          },
          "project_id": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "string"
                }
              ]
            }
          },
          "coords_viewable_for_proj": {
            "type": "boolean",
            "description": "Filter by observers who trust the project(s) specified in `project_id` OR trust the authenticated viewer"
          },
          "rank": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "kingdom",
                "phylum",
                "subphylum",
                "superclass",
                "class",
                "subclass",
                "infraclass",
                "subterclass",
                "superorder",
                "order",
                "suborder",
                "infraorder",
                "parvorder",
                "zoosection",
                "zoosubsection",
                "superfamily",
                "epifamily",
                "family",
                "subfamily",
                "supertribe",
                "tribe",
                "subtribe",
                "genus",
                "genushybrid",
                "subgenus",
                "section",
                "subsection",
                "complex",
                "species",
                "hybrid",
                "subspecies",
                "variety",
                "form",
                "infrahybrid"
              ]
            }
          },
          "site_id": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "sound_license": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "cc-by",
                "cc-by-nc",
                "cc-by-nd",
                "cc-by-sa",
                "cc-by-nc-nd",
                "cc-by-nc-sa",
                "cc0"
              ]
            }
          },
          "taxon_id": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "without_taxon_id": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "taxon_name": {
            "type": "string"
          },
          "user_id": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "user_login": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hour": {
            "type": "array",
            "items": {
              "type": "integer",
              "minimum": 0,
              "maximum": 23
            }
          },
          "day": {
            "type": "array",
            "items": {
              "type": "integer",
              "minimum": 1,
              "maximum": 31
            }
          },
          "month": {
            "type": "array",
            "items": {
              "type": "integer",
              "minimum": 1,
              "maximum": 12
            }
          },
          "year": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "created_day": {
            "type": "array",
            "items": {
              "type": "integer",
              "minimum": 1,
              "maximum": 31
            }
          },
          "created_month": {
            "type": "array",
            "items": {
              "type": "integer",
              "minimum": 1,
              "maximum": 12
            }
          },
          "created_year": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "term_id": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "term_value_id": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "without_term_value_id": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "term_id_or_unknown": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "annotation_user_id": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "acc_above": {
            "type": "integer"
          },
          "acc_below": {
            "type": "integer"
          },
          "acc_below_or_unknown": {
            "type": "integer"
          },
          "d1": {
            "type": "string"
          },
          "d2": {
            "type": "string"
          },
          "created_d1": {
            "type": "string"
          },
          "created_d2": {
            "type": "string"
          },
          "created_on": {
            "type": "string"
          },
          "observed_on": {
            "type": "string"
          },
          "unobserved_by_user_id": {
            "type": "string"
          },
          "apply_project_rules_for": {
            "type": "string"
          },
          "observation_accuracy_experiment_id": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "cs": {
            "type": "string"
          },
          "csa": {
            "type": "string"
          },
          "csi": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "LC",
                "NT",
                "VU",
                "EN",
                "CR",
                "EW",
                "EX"
              ]
            }
          },
          "geoprivacy": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "obscured",
                "obscured_private",
                "open",
                "private"
              ]
            }
          },
          "taxon_geoprivacy": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "obscured",
                "obscured_private",
                "open",
                "private"
              ]
            }
          },
          "obscuration": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "obscured",
                "private",
                "none"
              ]
            },
            "description": "Filter by observations where the `geoprivacy` or `taxon_geoprivacy` match these values"
          },
          "hrank": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "kingdom",
                "phylum",
                "subphylum",
                "superclass",
                "class",
                "subclass",
                "infraclass",
                "subterclass",
                "superorder",
                "order",
                "suborder",
                "infraorder",
                "parvorder",
                "zoosection",
                "zoosubsection",
                "superfamily",
                "epifamily",
                "family",
                "subfamily",
                "supertribe",
                "tribe",
                "subtribe",
                "genus",
                "genushybrid",
                "subgenus",
                "section",
                "subsection",
                "complex",
                "species",
                "hybrid",
                "subspecies",
                "variety",
                "form",
                "infrahybrid"
              ]
            }
          },
          "lrank": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "kingdom",
                "phylum",
                "subphylum",
                "superclass",
                "class",
                "subclass",
                "infraclass",
                "subterclass",
                "superorder",
                "order",
                "suborder",
                "infraorder",
                "parvorder",
                "zoosection",
                "zoosubsection",
                "superfamily",
                "epifamily",
                "family",
                "subfamily",
                "supertribe",
                "tribe",
                "subtribe",
                "genus",
                "genushybrid",
                "subgenus",
                "section",
                "subsection",
                "complex",
                "species",
                "hybrid",
                "subspecies",
                "variety",
                "form",
                "infrahybrid"
              ]
            }
          },
          "iconic_taxa": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "Actinopterygii",
                "Animalia",
                "Amphibia",
                "Arachnida",
                "Aves",
                "Chromista",
                "Fungi",
                "Insecta",
                "Mammalia",
                "Mollusca",
                "Reptilia",
                "Plantae",
                "Protozoa",
                "unknown"
              ]
            }
          },
          "id_above": {
            "type": "integer"
          },
          "id_below": {
            "type": "integer"
          },
          "identifications": {
            "type": "string",
            "enum": [
              "most_agree",
              "most_disagree",
              "some_agree"
            ],
            "description": "Filter by level of agreement among identifications:\n\n* **most_agree:** returns observations where there are more active identifications of taxa that agree with the Observation Taxon than active identifications that disagree with the Observation Taxon\n* **some_agree:** returns observations where there are some active identifications of taxa that agree with the Observation Taxon\n* **most_disagree:** returns observations where there are more active identifications of taxa that disagree with the Observation Taxon than active identifications that agree with the Observation Taxon"
          },
          "disagreements": {
            "type": "boolean",
            "description": "Whether there is disagreement among active identifications"
          },
          "lat": {
            "type": "number",
            "format": "float",
            "minimum": -90,
            "maximum": 90
          },
          "lng": {
            "type": "number",
            "format": "float",
            "minimum": -180,
            "maximum": 180
          },
          "radius": {
            "type": "number",
            "format": "float"
          },
          "nelat": {
            "type": "number",
            "format": "float",
            "minimum": -90,
            "maximum": 90
          },
          "nelng": {
            "type": "number",
            "format": "float",
            "minimum": -180,
            "maximum": 180
          },
          "swlat": {
            "type": "number",
            "format": "float",
            "minimum": -90,
            "maximum": 90
          },
          "swlng": {
            "type": "number",
            "format": "float",
            "minimum": -180,
            "maximum": 180
          },
          "list_id": {
            "type": "integer"
          },
          "not_in_project": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "not_matching_project_rules_for": {
            "type": "string"
          },
          "q": {
            "type": "string"
          },
          "search_on": {
            "type": "string",
            "enum": [
              "names",
              "tags",
              "description",
              "place",
              "taxon_page_obs_photos"
            ]
          },
          "quality_grade": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "casual",
                "needs_id",
                "research"
              ]
            }
          },
          "without_field": {
            "type": "string"
          },
          "outlink_source": {
            "type": "string"
          },
          "updated_since": {
            "type": "string"
          },
          "viewer_id": {
            "type": "integer"
          },
          "reviewed": {
            "type": "boolean"
          },
          "expected_nearby": {
            "type": "boolean"
          },
          "locale": {
            "type": "string"
          },
          "preferred_place_id": {
            "type": "integer"
          },
          "ttl": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          },
          "per_page": {
            "type": "integer"
          },
          "order": {
            "type": "string",
            "enum": [
              "desc",
              "asc"
            ],
            "default": "desc"
          },
          "only_id": {
            "type": "boolean"
          },
          "fields": {
            "description": "Attribute fields to return in the response",
            "example": "species_guess,observed_on"
          },
          "order_by": {
            "type": "string",
            "enum": [
              "observation_count",
              "species_count"
            ],
            "default": "observation_count"
          }
        },
        "additionalProperties": false
      },
      "ObservationsPopularFieldValues": {
        "type": "object",
        "properties": {
          "acc": {
            "type": "boolean",
            "description": "Filter by whether `positional_accuracy` is set or not"
          },
          "captive": {
            "type": "boolean",
            "description": "Filter by captive / cultivated status"
          },
          "endemic": {
            "type": "boolean",
            "description": "Filter by whether the observation is in a place with a check list entry indicating the establishment means is `endemic`"
          },
          "geo": {
            "type": "boolean"
          },
          "id_please": {
            "type": "boolean"
          },
          "identified": {
            "type": "boolean"
          },
          "introduced": {
            "type": "boolean"
          },
          "mappable": {
            "type": "boolean"
          },
          "native": {
            "type": "boolean"
          },
          "out_of_range": {
            "type": "boolean"
          },
          "pcid": {
            "type": "boolean"
          },
          "photos": {
            "type": "boolean"
          },
          "popular": {
            "type": "boolean"
          },
          "sounds": {
            "type": "boolean"
          },
          "taxon_is_active": {
            "type": "boolean"
          },
          "threatened": {
            "type": "boolean",
            "description": "Filter by whether the observed taxon has a conservation status of \"threatened\" or worse"
          },
          "verifiable": {
            "type": "boolean",
            "description": "Filter by whether observations are 'verifiable' (have quality grades `research` or `needs_id`)"
          },
          "id": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "integer"
                },
                {
                  "type": "string"
                }
              ]
            }
          },
          "not_id": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "license": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "cc-by",
                "cc-by-nc",
                "cc-by-nd",
                "cc-by-sa",
                "cc-by-nc-nd",
                "cc-by-nc-sa",
                "cc0"
              ]
            }
          },
          "photo_license": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "cc-by",
                "cc-by-nc",
                "cc-by-nd",
                "cc-by-sa",
                "cc-by-nc-nd",
                "cc-by-nc-sa",
                "cc0"
              ]
            }
          },
          "licensed": {
            "type": "boolean",
            "description": "Filter by observations where the license attribute is not null, i.e. it is licensed"
          },
          "photo_licensed": {
            "type": "boolean",
            "description": "Filter by observations where the license attribute of at least one photo is not null"
          },
          "place_id": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "integer"
                },
                {
                  "type": "string"
                }
              ]
            }
          },
          "project_id": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "string"
                }
              ]
            }
          },
          "coords_viewable_for_proj": {
            "type": "boolean",
            "description": "Filter by observers who trust the project(s) specified in `project_id` OR trust the authenticated viewer"
          },
          "rank": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "kingdom",
                "phylum",
                "subphylum",
                "superclass",
                "class",
                "subclass",
                "infraclass",
                "subterclass",
                "superorder",
                "order",
                "suborder",
                "infraorder",
                "parvorder",
                "zoosection",
                "zoosubsection",
                "superfamily",
                "epifamily",
                "family",
                "subfamily",
                "supertribe",
                "tribe",
                "subtribe",
                "genus",
                "genushybrid",
                "subgenus",
                "section",
                "subsection",
                "complex",
                "species",
                "hybrid",
                "subspecies",
                "variety",
                "form",
                "infrahybrid"
              ]
            }
          },
          "site_id": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "sound_license": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "cc-by",
                "cc-by-nc",
                "cc-by-nd",
                "cc-by-sa",
                "cc-by-nc-nd",
                "cc-by-nc-sa",
                "cc0"
              ]
            }
          },
          "taxon_id": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "without_taxon_id": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "taxon_name": {
            "type": "string"
          },
          "user_id": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "user_login": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hour": {
            "type": "array",
            "items": {
              "type": "integer",
              "minimum": 0,
              "maximum": 23
            }
          },
          "day": {
            "type": "array",
            "items": {
              "type": "integer",
              "minimum": 1,
              "maximum": 31
            }
          },
          "month": {
            "type": "array",
            "items": {
              "type": "integer",
              "minimum": 1,
              "maximum": 12
            }
          },
          "year": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "created_day": {
            "type": "array",
            "items": {
              "type": "integer",
              "minimum": 1,
              "maximum": 31
            }
          },
          "created_month": {
            "type": "array",
            "items": {
              "type": "integer",
              "minimum": 1,
              "maximum": 12
            }
          },
          "created_year": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "term_id": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "term_value_id": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "without_term_value_id": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "term_id_or_unknown": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "annotation_user_id": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "acc_above": {
            "type": "integer"
          },
          "acc_below": {
            "type": "integer"
          },
          "acc_below_or_unknown": {
            "type": "integer"
          },
          "d1": {
            "type": "string"
          },
          "d2": {
            "type": "string"
          },
          "created_d1": {
            "type": "string"
          },
          "created_d2": {
            "type": "string"
          },
          "created_on": {
            "type": "string"
          },
          "observed_on": {
            "type": "string"
          },
          "unobserved_by_user_id": {
            "type": "string"
          },
          "apply_project_rules_for": {
            "type": "string"
          },
          "observation_accuracy_experiment_id": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "cs": {
            "type": "string"
          },
          "csa": {
            "type": "string"
          },
          "csi": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "LC",
                "NT",
                "VU",
                "EN",
                "CR",
                "EW",
                "EX"
              ]
            }
          },
          "geoprivacy": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "obscured",
                "obscured_private",
                "open",
                "private"
              ]
            }
          },
          "taxon_geoprivacy": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "obscured",
                "obscured_private",
                "open",
                "private"
              ]
            }
          },
          "obscuration": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "obscured",
                "private",
                "none"
              ]
            },
            "description": "Filter by observations where the `geoprivacy` or `taxon_geoprivacy` match these values"
          },
          "hrank": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "kingdom",
                "phylum",
                "subphylum",
                "superclass",
                "class",
                "subclass",
                "infraclass",
                "subterclass",
                "superorder",
                "order",
                "suborder",
                "infraorder",
                "parvorder",
                "zoosection",
                "zoosubsection",
                "superfamily",
                "epifamily",
                "family",
                "subfamily",
                "supertribe",
                "tribe",
                "subtribe",
                "genus",
                "genushybrid",
                "subgenus",
                "section",
                "subsection",
                "complex",
                "species",
                "hybrid",
                "subspecies",
                "variety",
                "form",
                "infrahybrid"
              ]
            }
          },
          "lrank": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "kingdom",
                "phylum",
                "subphylum",
                "superclass",
                "class",
                "subclass",
                "infraclass",
                "subterclass",
                "superorder",
                "order",
                "suborder",
                "infraorder",
                "parvorder",
                "zoosection",
                "zoosubsection",
                "superfamily",
                "epifamily",
                "family",
                "subfamily",
                "supertribe",
                "tribe",
                "subtribe",
                "genus",
                "genushybrid",
                "subgenus",
                "section",
                "subsection",
                "complex",
                "species",
                "hybrid",
                "subspecies",
                "variety",
                "form",
                "infrahybrid"
              ]
            }
          },
          "iconic_taxa": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "Actinopterygii",
                "Animalia",
                "Amphibia",
                "Arachnida",
                "Aves",
                "Chromista",
                "Fungi",
                "Insecta",
                "Mammalia",
                "Mollusca",
                "Reptilia",
                "Plantae",
                "Protozoa",
                "unknown"
              ]
            }
          },
          "id_above": {
            "type": "integer"
          },
          "id_below": {
            "type": "integer"
          },
          "identifications": {
            "type": "string",
            "enum": [
              "most_agree",
              "most_disagree",
              "some_agree"
            ],
            "description": "Filter by level of agreement among identifications:\n\n* **most_agree:** returns observations where there are more active identifications of taxa that agree with the Observation Taxon than active identifications that disagree with the Observation Taxon\n* **some_agree:** returns observations where there are some active identifications of taxa that agree with the Observation Taxon\n* **most_disagree:** returns observations where there are more active identifications of taxa that disagree with the Observation Taxon than active identifications that agree with the Observation Taxon"
          },
          "disagreements": {
            "type": "boolean",
            "description": "Whether there is disagreement among active identifications"
          },
          "lat": {
            "type": "number",
            "format": "float",
            "minimum": -90,
            "maximum": 90
          },
          "lng": {
            "type": "number",
            "format": "float",
            "minimum": -180,
            "maximum": 180
          },
          "radius": {
            "type": "number",
            "format": "float"
          },
          "nelat": {
            "type": "number",
            "format": "float",
            "minimum": -90,
            "maximum": 90
          },
          "nelng": {
            "type": "number",
            "format": "float",
            "minimum": -180,
            "maximum": 180
          },
          "swlat": {
            "type": "number",
            "format": "float",
            "minimum": -90,
            "maximum": 90
          },
          "swlng": {
            "type": "number",
            "format": "float",
            "minimum": -180,
            "maximum": 180
          },
          "list_id": {
            "type": "integer"
          },
          "not_in_project": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "not_matching_project_rules_for": {
            "type": "string"
          },
          "q": {
            "type": "string"
          },
          "search_on": {
            "type": "string",
            "enum": [
              "names",
              "tags",
              "description",
              "place",
              "taxon_page_obs_photos"
            ]
          },
          "quality_grade": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "casual",
                "needs_id",
                "research"
              ]
            }
          },
          "without_field": {
            "type": "string"
          },
          "outlink_source": {
            "type": "string"
          },
          "updated_since": {
            "type": "string"
          },
          "viewer_id": {
            "type": "integer"
          },
          "reviewed": {
            "type": "boolean"
          },
          "expected_nearby": {
            "type": "boolean"
          },
          "locale": {
            "type": "string"
          },
          "preferred_place_id": {
            "type": "integer"
          },
          "ttl": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          },
          "per_page": {
            "type": "integer"
          },
          "order": {
            "type": "string",
            "enum": [
              "desc",
              "asc"
            ],
            "default": "desc"
          },
          "order_by": {
            "type": "string",
            "enum": [
              "created_at",
              "geo_score",
              "id",
              "observed_on",
              "random",
              "species_guess",
              "updated_at",
              "votes"
            ],
            "default": "created_at"
          },
          "only_id": {
            "type": "boolean"
          },
          "fields": {
            "description": "Attribute fields to return in the response",
            "example": "species_guess,observed_on"
          },
          "no_histograms": {
            "type": "boolean"
          },
          "unannotated": {
            "type": "boolean"
          },
          "date_field": {
            "type": "string",
            "enum": [
              "observed",
              "created"
            ],
            "default": "observed"
          },
          "interval": {
            "type": "string",
            "enum": [
              "month_of_year",
              "week_of_year"
            ],
            "default": "month_of_year"
          }
        },
        "additionalProperties": false
      },
      "ObservationsSearch": {
        "type": "object",
        "properties": {
          "acc": {
            "type": "boolean",
            "description": "Filter by whether `positional_accuracy` is set or not"
          },
          "captive": {
            "type": "boolean",
            "description": "Filter by captive / cultivated status"
          },
          "endemic": {
            "type": "boolean",
            "description": "Filter by whether the observation is in a place with a check list entry indicating the establishment means is `endemic`"
          },
          "geo": {
            "type": "boolean"
          },
          "id_please": {
            "type": "boolean"
          },
          "identified": {
            "type": "boolean"
          },
          "introduced": {
            "type": "boolean"
          },
          "mappable": {
            "type": "boolean"
          },
          "native": {
            "type": "boolean"
          },
          "out_of_range": {
            "type": "boolean"
          },
          "pcid": {
            "type": "boolean"
          },
          "photos": {
            "type": "boolean"
          },
          "popular": {
            "type": "boolean"
          },
          "sounds": {
            "type": "boolean"
          },
          "taxon_is_active": {
            "type": "boolean"
          },
          "threatened": {
            "type": "boolean",
            "description": "Filter by whether the observed taxon has a conservation status of \"threatened\" or worse"
          },
          "verifiable": {
            "type": "boolean",
            "description": "Filter by whether observations are 'verifiable' (have quality grades `research` or `needs_id`)"
          },
          "id": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "integer"
                },
                {
                  "type": "string"
                }
              ]
            }
          },
          "not_id": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "license": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "cc-by",
                "cc-by-nc",
                "cc-by-nd",
                "cc-by-sa",
                "cc-by-nc-nd",
                "cc-by-nc-sa",
                "cc0"
              ]
            }
          },
          "photo_license": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "cc-by",
                "cc-by-nc",
                "cc-by-nd",
                "cc-by-sa",
                "cc-by-nc-nd",
                "cc-by-nc-sa",
                "cc0"
              ]
            }
          },
          "licensed": {
            "type": "boolean",
            "description": "Filter by observations where the license attribute is not null, i.e. it is licensed"
          },
          "photo_licensed": {
            "type": "boolean",
            "description": "Filter by observations where the license attribute of at least one photo is not null"
          },
          "place_id": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "integer"
                },
                {
                  "type": "string"
                }
              ]
            }
          },
          "project_id": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "string"
                }
              ]
            }
          },
          "coords_viewable_for_proj": {
            "type": "boolean",
            "description": "Filter by observers who trust the project(s) specified in `project_id` OR trust the authenticated viewer"
          },
          "rank": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "kingdom",
                "phylum",
                "subphylum",
                "superclass",
                "class",
                "subclass",
                "infraclass",
                "subterclass",
                "superorder",
                "order",
                "suborder",
                "infraorder",
                "parvorder",
                "zoosection",
                "zoosubsection",
                "superfamily",
                "epifamily",
                "family",
                "subfamily",
                "supertribe",
                "tribe",
                "subtribe",
                "genus",
                "genushybrid",
                "subgenus",
                "section",
                "subsection",
                "complex",
                "species",
                "hybrid",
                "subspecies",
                "variety",
                "form",
                "infrahybrid"
              ]
            }
          },
          "site_id": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "sound_license": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "cc-by",
                "cc-by-nc",
                "cc-by-nd",
                "cc-by-sa",
                "cc-by-nc-nd",
                "cc-by-nc-sa",
                "cc0"
              ]
            }
          },
          "taxon_id": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "without_taxon_id": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "taxon_name": {
            "type": "string"
          },
          "user_id": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "user_login": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hour": {
            "type": "array",
            "items": {
              "type": "integer",
              "minimum": 0,
              "maximum": 23
            }
          },
          "day": {
            "type": "array",
            "items": {
              "type": "integer",
              "minimum": 1,
              "maximum": 31
            }
          },
          "month": {
            "type": "array",
            "items": {
              "type": "integer",
              "minimum": 1,
              "maximum": 12
            }
          },
          "year": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "created_day": {
            "type": "array",
            "items": {
              "type": "integer",
              "minimum": 1,
              "maximum": 31
            }
          },
          "created_month": {
            "type": "array",
            "items": {
              "type": "integer",
              "minimum": 1,
              "maximum": 12
            }
          },
          "created_year": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "term_id": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "term_value_id": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "without_term_value_id": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "term_id_or_unknown": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "annotation_user_id": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "acc_above": {
            "type": "integer"
          },
          "acc_below": {
            "type": "integer"
          },
          "acc_below_or_unknown": {
            "type": "integer"
          },
          "d1": {
            "type": "string"
          },
          "d2": {
            "type": "string"
          },
          "created_d1": {
            "type": "string"
          },
          "created_d2": {
            "type": "string"
          },
          "created_on": {
            "type": "string"
          },
          "observed_on": {
            "type": "string"
          },
          "unobserved_by_user_id": {
            "type": "string"
          },
          "apply_project_rules_for": {
            "type": "string"
          },
          "observation_accuracy_experiment_id": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "cs": {
            "type": "string"
          },
          "csa": {
            "type": "string"
          },
          "csi": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "LC",
                "NT",
                "VU",
                "EN",
                "CR",
                "EW",
                "EX"
              ]
            }
          },
          "geoprivacy": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "obscured",
                "obscured_private",
                "open",
                "private"
              ]
            }
          },
          "taxon_geoprivacy": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "obscured",
                "obscured_private",
                "open",
                "private"
              ]
            }
          },
          "obscuration": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "obscured",
                "private",
                "none"
              ]
            },
            "description": "Filter by observations where the `geoprivacy` or `taxon_geoprivacy` match these values"
          },
          "hrank": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "kingdom",
                "phylum",
                "subphylum",
                "superclass",
                "class",
                "subclass",
                "infraclass",
                "subterclass",
                "superorder",
                "order",
                "suborder",
                "infraorder",
                "parvorder",
                "zoosection",
                "zoosubsection",
                "superfamily",
                "epifamily",
                "family",
                "subfamily",
                "supertribe",
                "tribe",
                "subtribe",
                "genus",
                "genushybrid",
                "subgenus",
                "section",
                "subsection",
                "complex",
                "species",
                "hybrid",
                "subspecies",
                "variety",
                "form",
                "infrahybrid"
              ]
            }
          },
          "lrank": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "kingdom",
                "phylum",
                "subphylum",
                "superclass",
                "class",
                "subclass",
                "infraclass",
                "subterclass",
                "superorder",
                "order",
                "suborder",
                "infraorder",
                "parvorder",
                "zoosection",
                "zoosubsection",
                "superfamily",
                "epifamily",
                "family",
                "subfamily",
                "supertribe",
                "tribe",
                "subtribe",
                "genus",
                "genushybrid",
                "subgenus",
                "section",
                "subsection",
                "complex",
                "species",
                "hybrid",
                "subspecies",
                "variety",
                "form",
                "infrahybrid"
              ]
            }
          },
          "iconic_taxa": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "Actinopterygii",
                "Animalia",
                "Amphibia",
                "Arachnida",
                "Aves",
                "Chromista",
                "Fungi",
                "Insecta",
                "Mammalia",
                "Mollusca",
                "Reptilia",
                "Plantae",
                "Protozoa",
                "unknown"
              ]
            }
          },
          "id_above": {
            "type": "integer"
          },
          "id_below": {
            "type": "integer"
          },
          "identifications": {
            "type": "string",
            "enum": [
              "most_agree",
              "most_disagree",
              "some_agree"
            ],
            "description": "Filter by level of agreement among identifications:\n\n* **most_agree:** returns observations where there are more active identifications of taxa that agree with the Observation Taxon than active identifications that disagree with the Observation Taxon\n* **some_agree:** returns observations where there are some active identifications of taxa that agree with the Observation Taxon\n* **most_disagree:** returns observations where there are more active identifications of taxa that disagree with the Observation Taxon than active identifications that agree with the Observation Taxon"
          },
          "disagreements": {
            "type": "boolean",
            "description": "Whether there is disagreement among active identifications"
          },
          "lat": {
            "type": "number",
            "format": "float",
            "minimum": -90,
            "maximum": 90
          },
          "lng": {
            "type": "number",
            "format": "float",
            "minimum": -180,
            "maximum": 180
          },
          "radius": {
            "type": "number",
            "format": "float"
          },
          "nelat": {
            "type": "number",
            "format": "float",
            "minimum": -90,
            "maximum": 90
          },
          "nelng": {
            "type": "number",
            "format": "float",
            "minimum": -180,
            "maximum": 180
          },
          "swlat": {
            "type": "number",
            "format": "float",
            "minimum": -90,
            "maximum": 90
          },
          "swlng": {
            "type": "number",
            "format": "float",
            "minimum": -180,
            "maximum": 180
          },
          "list_id": {
            "type": "integer"
          },
          "not_in_project": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "not_matching_project_rules_for": {
            "type": "string"
          },
          "q": {
            "type": "string"
          },
          "search_on": {
            "type": "string",
            "enum": [
              "names",
              "tags",
              "description",
              "place",
              "taxon_page_obs_photos"
            ]
          },
          "quality_grade": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "casual",
                "needs_id",
                "research"
              ]
            }
          },
          "without_field": {
            "type": "string"
          },
          "outlink_source": {
            "type": "string"
          },
          "updated_since": {
            "type": "string"
          },
          "viewer_id": {
            "type": "integer"
          },
          "reviewed": {
            "type": "boolean"
          },
          "expected_nearby": {
            "type": "boolean"
          },
          "locale": {
            "type": "string"
          },
          "preferred_place_id": {
            "type": "integer"
          },
          "ttl": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          },
          "per_page": {
            "type": "integer"
          },
          "order": {
            "type": "string",
            "enum": [
              "desc",
              "asc"
            ],
            "default": "desc"
          },
          "order_by": {
            "type": "string",
            "enum": [
              "created_at",
              "geo_score",
              "id",
              "observed_on",
              "random",
              "species_guess",
              "updated_at",
              "votes"
            ],
            "default": "created_at"
          },
          "only_id": {
            "type": "boolean"
          },
          "fields": {
            "description": "Attribute fields to return in the response",
            "example": "species_guess,observed_on"
          }
        },
        "additionalProperties": false
      },
      "ObservationsUpdate": {
        "type": "object",
        "properties": {
          "fields": {

          },
          "ignore_photos": {
            "type": "boolean"
          },
          "observation": {
            "type": "object",
            "properties": {
              "uuid": {
                "type": "string",
                "format": "uuid"
              },
              "captive_flag": {
                "type": "boolean"
              },
              "coordinate_system": {
                "type": "string"
              },
              "description": {
                "type": "string",
                "nullable": true
              },
              "geo_x": {
                "type": "number",
                "format": "float",
                "nullable": true
              },
              "geo_y": {
                "type": "number",
                "format": "float",
                "nullable": true
              },
              "geoprivacy": {
                "type": "string"
              },
              "latitude": {
                "type": "number",
                "format": "float",
                "nullable": true
              },
              "license": {
                "type": "string"
              },
              "location_is_exact": {
                "type": "boolean"
              },
              "longitude": {
                "type": "number",
                "format": "float",
                "nullable": true
              },
              "make_license_default": {
                "type": "boolean"
              },
              "make_licenses_same": {
                "type": "boolean"
              },
              "map_scale": {
                "type": "integer"
              },
              "observation_field_values_attributes": {
                "type": "object",
                "properties": {
                  "observation_field_id": {
                    "type": "integer"
                  },
                  "value": {

                  }
                },
                "required": [
                  "observation_field_id",
                  "value"
                ],
                "additionalProperties": false
              },
              "observed_on_string": {
                "type": "string",
                "nullable": true
              },
              "owners_identification_from_vision": {
                "type": "boolean"
              },
              "place_guess": {
                "type": "string",
                "nullable": true
              },
              "positional_accuracy": {
                "type": "number",
                "format": "float",
                "nullable": true
              },
              "positioning_device": {
                "type": "string",
                "nullable": true
              },
              "positioning_method": {
                "type": "string",
                "nullable": true
              },
              "project_id": {
                "type": "integer"
              },
              "prefers_community_taxon": {
                "type": "boolean"
              },
              "site_id": {
                "type": "integer"
              },
              "species_guess": {
                "type": "string",
                "nullable": true,
                "description": "The name of the organism observed. If the taxon ID is absent, iNat will try to choose a single taxon based on this string, but it may fail if there's some taxonomic amgiguity."
              },
              "tag_list": {
                "type": "string",
                "nullable": true
              },
              "taxon_id": {
                "type": "number",
                "format": "float"
              },
              "taxon_name": {
                "type": "number",
                "format": "float"
              },
              "time_zone": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      "ObservationsUpdates": {
        "type": "object",
        "properties": {
          "created_after": {
            "type": "string",
            "description": "ISO8601 datetime after which the update was created"
          },
          "viewed": {
            "type": "boolean",
            "description": "When false this only returns updates that have not been viewed by the authenticated user. When true it returns all updates.",
            "default": true
          },
          "observations_by": {
            "type": "string",
            "enum": [
              "owner",
              "following"
            ],
            "description": "Restrict to updates on observations by the authenticated user (owner) or on observations the authenticated user is following"
          },
          "page": {
            "type": "integer"
          },
          "per_page": {
            "type": "integer"
          },
          "fields": {

          }
        },
        "additionalProperties": false
      },
      "PhotosCreate": {
        "type": "object",
        "properties": {
          "file": {
            "type": "string",
            "format": "binary"
          },
          "fields": {

          },
          "uuid": {
            "type": "string",
            "format": "uuid"
          }
        },
        "required": [
          "file"
        ]
      },
      "PlacesNearby": {
        "type": "object",
        "properties": {
          "nelat": {
            "type": "number",
            "format": "float"
          },
          "nelng": {
            "type": "number",
            "format": "float"
          },
          "swlat": {
            "type": "number",
            "format": "float"
          },
          "swlng": {
            "type": "number",
            "format": "float"
          },
          "name": {
            "type": "string"
          },
          "per_page": {
            "type": "number",
            "format": "float"
          },
          "fields": {

          }
        },
        "required": [
          "nelat",
          "nelng",
          "swlat",
          "swlng"
        ],
        "additionalProperties": false
      },
      "PlacesSearch": {
        "type": "object",
        "properties": {
          "q": {
            "type": "string"
          },
          "order_by": {
            "type": "string",
            "enum": [
              "area"
            ]
          },
          "geo": {
            "type": "boolean"
          },
          "per_page": {
            "type": "integer"
          },
          "fields": {

          }
        },
        "additionalProperties": false
      },
      "ProjectObservationsCreate": {
        "type": "object",
        "properties": {
          "fields": {

          },
          "project_observation": {
            "type": "object",
            "properties": {
              "project_id": {
                "type": "integer",
                "minimum": 1
              },
              "observation_id": {
                "type": "string",
                "format": "uuid"
              }
            },
            "required": [
              "project_id",
              "observation_id"
            ],
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      "ProjectObservationsUpdate": {
        "type": "object",
        "properties": {
          "fields": {

          },
          "project_observation": {
            "type": "object",
            "properties": {
              "prefers_curator_coordinate_access": {
                "type": "boolean",
                "description": "Whether the observer allows project curators to view the coordinates of this observation"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      "ProjectUsersUpdate": {
        "type": "object",
        "properties": {
          "project_user": {
            "type": "object",
            "properties": {
              "prefers_curator_coordinate_access_for": {
                "type": "string",
                "enum": [
                  "none",
                  "any",
                  "taxon"
                ]
              },
              "prefers_updates": {
                "type": "boolean"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      "ProjectsFeature": {
        "type": "object",
        "properties": {
          "inat_site_id": {
            "type": "integer",
            "minimum": 1
          },
          "noteworthy": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ProjectsMembers": {
        "type": "object",
        "properties": {
          "skip_counts": {
            "type": "boolean",
            "description": "If counts are not needed, consider setting this to true to save on processing time, resulting in faster responses",
            "default": false
          },
          "page": {
            "type": "integer"
          },
          "per_page": {
            "type": "integer"
          },
          "fields": {

          },
          "order_by": {
            "type": "string",
            "enum": [
              "observations_count",
              "login"
            ],
            "default": "observations_count"
          }
        },
        "additionalProperties": false
      },
      "ProjectsPosts": {
        "type": "object",
        "properties": {
          "page": {
            "type": "integer"
          },
          "per_page": {
            "type": "integer"
          },
          "fields": {

          }
        },
        "additionalProperties": false
      },
      "ProjectsSearch": {
        "type": "object",
        "properties": {
          "q": {
            "type": "string"
          },
          "id": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "not_id": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "lat": {
            "type": "number",
            "format": "float",
            "minimum": -90,
            "maximum": 90
          },
          "lng": {
            "type": "number",
            "format": "float",
            "minimum": -180,
            "maximum": 180
          },
          "radius": {
            "type": "integer"
          },
          "place_id": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "features": {
            "type": "boolean"
          },
          "noteworthy": {
            "type": "boolean"
          },
          "site_id": {
            "type": "integer"
          },
          "rule_details": {
            "type": "boolean"
          },
          "type": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "collection",
                "umbrella"
              ]
            }
          },
          "member_id": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "has_params": {
            "type": "boolean"
          },
          "has_posts": {
            "type": "boolean"
          },
          "page": {
            "type": "integer"
          },
          "per_page": {
            "type": "integer"
          },
          "order_by": {
            "type": "string",
            "enum": [
              "recent_posts",
              "created",
              "updated",
              "distance",
              "featured"
            ]
          },
          "fields": {
            "description": "Attribute fields to return in the response",
            "example": "title,description"
          }
        },
        "additionalProperties": false
      },
      "ProjectsUnfeature": {
        "type": "object",
        "properties": {
          "inat_site_id": {
            "type": "integer",
            "minimum": 1
          }
        },
        "additionalProperties": false
      },
      "RelationshipsCreate": {
        "type": "object",
        "properties": {
          "fields": {
            "example": "all"
          },
          "relationship": {
            "type": "object",
            "properties": {
              "friend_id": {
                "type": "integer",
                "minimum": 1,
                "description": "\n        Sequential ID of the user that is the object of the relationship, i.e.\n        the user that the authenticated user is establishing a relationship\n        with\n      "
              },
              "trust": {
                "type": "boolean",
                "description": "Whether the user trusts the friend with hidden coordinates",
                "default": false
              },
              "following": {
                "type": "boolean",
                "description": "Whether the user notifications about new content made by the friend",
                "default": true
              }
            },
            "required": [
              "friend_id"
            ],
            "additionalProperties": false
          }
        },
        "required": [
          "relationship"
        ],
        "additionalProperties": false
      },
      "RelationshipsSearch": {
        "type": "object",
        "properties": {
          "q": {
            "type": "string"
          },
          "trusted": {
            "type": "string",
            "enum": [
              "yes",
              "no",
              "any"
            ],
            "description": "Whether or not the user trusts the friend with hidden coordinates."
          },
          "following": {
            "type": "string",
            "enum": [
              "yes",
              "no",
              "any"
            ],
            "description": "Whether or not the user wants to see updates about new content from the friend."
          },
          "order": {
            "type": "string",
            "enum": [
              "desc",
              "asc"
            ]
          },
          "order_by": {
            "type": "string",
            "enum": [
              "friendships.id",
              "users.login"
            ],
            "default": "users.login"
          },
          "fields": {
            "description": "Attribute fields to return in the response",
            "example": "all"
          }
        },
        "additionalProperties": false
      },
      "RelationshipsUpdate": {
        "type": "object",
        "properties": {
          "fields": {
            "example": "all"
          },
          "relationship": {
            "type": "object",
            "properties": {
              "trust": {
                "type": "boolean",
                "description": "Whether the user trusts the friend with hidden coordinates",
                "default": false
              },
              "following": {
                "type": "boolean",
                "description": "Whether the user notifications about new content made by the friend",
                "default": true
              }
            },
            "additionalProperties": false
          }
        },
        "required": [
          "relationship"
        ],
        "additionalProperties": false
      },
      "SavedLocationsCreate": {
        "type": "object",
        "properties": {
          "fields": {

          },
          "saved_location": {
            "type": "object",
            "properties": {
              "latitude": {
                "type": "number",
                "format": "float"
              },
              "longitude": {
                "type": "number",
                "format": "float"
              },
              "title": {
                "type": "string"
              },
              "positional_accuracy": {
                "type": "integer"
              },
              "geoprivacy": {
                "type": "string",
                "enum": [
                  "open",
                  "obscured",
                  "private"
                ]
              }
            },
            "additionalProperties": false
          }
        },
        "required": [
          "saved_location"
        ],
        "additionalProperties": false
      },
      "SavedLocationsSearch": {
        "type": "object",
        "properties": {
          "q": {
            "type": "string"
          },
          "page": {
            "type": "integer"
          },
          "fields": {

          }
        },
        "additionalProperties": false
      },
      "SoundsCreate": {
        "type": "object",
        "properties": {
          "file": {
            "type": "string",
            "format": "binary"
          },
          "fields": {

          },
          "uuid": {
            "type": "string",
            "format": "uuid"
          }
        },
        "required": [
          "file"
        ]
      },
      "TaxaAutocomplete": {
        "type": "object",
        "properties": {
          "q": {
            "type": "string"
          },
          "is_active": {
            "type": "boolean"
          },
          "iconic": {
            "type": "boolean"
          },
          "per_page": {
            "type": "integer"
          },
          "locale": {
            "type": "string"
          },
          "preferred_place_id": {
            "type": "integer"
          },
          "fields": {

          }
        },
        "additionalProperties": false
      },
      "TaxaSearch": {
        "type": "object",
        "properties": {
          "q": {
            "type": "string"
          },
          "is_active": {
            "type": "boolean",
            "default": true
          },
          "iconic": {
            "type": "boolean"
          },
          "taxon_id": {
            "type": "integer"
          },
          "parent_id": {
            "type": "integer"
          },
          "rank": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "kingdom",
                "phylum",
                "subphylum",
                "superclass",
                "class",
                "subclass",
                "superorder",
                "order",
                "suborder",
                "infraorder",
                "superfamily",
                "epifamily",
                "family",
                "subfamily",
                "supertribe",
                "tribe",
                "subtribe",
                "genus",
                "genushybrid",
                "species",
                "hybrid",
                "subspecies",
                "variety",
                "form"
              ]
            }
          },
          "rank_level": {
            "type": "array",
            "items": {
              "type": "number",
              "format": "float"
            }
          },
          "id_above": {
            "type": "integer"
          },
          "id_below": {
            "type": "integer"
          },
          "per_page": {
            "type": "integer"
          },
          "locale": {
            "type": "string"
          },
          "preferred_place_id": {
            "type": "integer"
          },
          "fields": {

          }
        },
        "additionalProperties": false
      },
      "TaxaSuggest": {
        "type": "object",
        "properties": {
          "featured_observation_id": {
            "type": "string",
            "format": "uuid",
            "description": "When `source` is `observations`, ignore this observation"
          },
          "fields": {

          },
          "image_url": {
            "type": "string",
            "description": "URL for image to use when `source` is `visual`",
            "title": "image_url"
          },
          "include_representative_photos": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "string"
              }
            ]
          },
          "limit": {
            "type": "number",
            "format": "float",
            "minimum": 0,
            "description": "Number of results to return"
          },
          "lat": {
            "type": "number",
            "format": "float",
            "minimum": -90,
            "maximum": 90,
            "description": "Coordinate used when fetching nearby results `source` is `visual` or `*observations`"
          },
          "lng": {
            "type": "number",
            "format": "float",
            "minimum": -180,
            "maximum": 180,
            "description": "Coordinate used when fetching nearby results `source` is `visual` or `*observations`"
          },
          "locale": {
            "type": "string"
          },
          "months": {
            "type": "string"
          },
          "observation_id": {
            "type": "string",
            "format": "uuid",
            "description": " Automatically set place and taxon filters based on this observation; this\n      will override the values of `place_id` and `taxon_id` if these values\n      can be derived from the observation\n    "
          },
          "observed_on": {
            "type": "string",
            "description": " Date the subject was observed (YYYY-MM-DD), used to refine suggestions to\n      those observed at a similar time of year\n    "
          },
          "order_by": {
            "type": "string",
            "enum": [
              "taxonomy",
              "default",
              "sciname"
            ],
            "description": " How the suggestions will be ordered. The default is to order by whatever default\n      a source uses, e.g. the score when `source` is `visual`, or the number of\n      observations (frequency) when the `source` is `*observations`. Ordering by\n      `taxonomy` will group the results by their closeness in the taxonomic\n      tree, but continue to use default ordering for siblings (e.g. species in the\n      same genus).\n    "
          },
          "place_id": {
            "type": "integer",
            "description": " Only retrieve suggestions from this place when `source` is `checklist`\n      or `*observations`\n    "
          },
          "place_lat": {
            "type": "number",
            "format": "float",
            "minimum": -90,
            "maximum": 90,
            "description": " Coordinate used to set a place filter when source is `*observations` by\n      choosing the place whose boundary contains the coordinate. Only chooses\n      from places curated by staff (aka \"standard\" places) and only sets the\n      place when lat, lng, and place_id are blank\n    "
          },
          "place_lng": {
            "type": "number",
            "format": "float",
            "minimum": -180,
            "maximum": 180,
            "description": "See `place_lat`"
          },
          "source": {
            "type": "string",
            "enum": [
              "captive_observations",
              "checklist",
              "misidentifications",
              "observations",
              "rg_observations",
              "visual"
            ],
            "nullable": true,
            "description": " Source of the suggestions. Note that different sources support different\n      search parameters. See each parameter for details\n    "
          },
          "taxon_id": {
            "type": "integer",
            "description": " Only retrieve suggestions in this taxon. If taxon is below genus level it\n      will be replaced with the genus that contains it. When `source` is\n      `misidentifications`, suggestions will be species commonly misidentified\n      as this taxon\n    "
          }
        },
        "additionalProperties": false
      },
      "TaxaWanted": {
        "type": "object",
        "properties": {
          "page": {
            "type": "integer"
          },
          "per_page": {
            "type": "integer"
          }
        },
        "additionalProperties": false
      },
      "TaxonNamePrioritiesCreate": {
        "type": "object",
        "properties": {
          "fields": {

          },
          "taxon_name_priority": {
            "type": "object",
            "properties": {
              "place_id": {
                "type": "integer",
                "nullable": true
              },
              "lexicon": {
                "type": "string",
                "nullable": true
              }
            },
            "required": [
              "lexicon"
            ],
            "additionalProperties": false
          }
        },
        "required": [
          "taxon_name_priority"
        ],
        "additionalProperties": false
      },
      "TaxonNamePrioritiesUpdate": {
        "type": "object",
        "properties": {
          "fields": {

          },
          "taxon_name_priority": {
            "type": "object",
            "properties": {
              "position": {
                "type": "integer"
              }
            },
            "required": [
              "position"
            ],
            "additionalProperties": false
          }
        },
        "required": [
          "taxon_name_priority"
        ],
        "additionalProperties": false
      },
      "UsersAutocomplete": {
        "type": "object",
        "properties": {
          "q": {
            "type": "string"
          },
          "include_suspended": {
            "type": "boolean",
            "default": false
          },
          "per_page": {
            "type": "integer"
          },
          "fields": {

          }
        },
        "additionalProperties": false
      },
      "UsersEmailAvailable": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          }
        },
        "required": [
          "email"
        ],
        "additionalProperties": false
      },
      "UsersIndex": {
        "type": "object",
        "properties": {
          "fields": {

          },
          "page": {
            "type": "integer",
            "minimum": 1
          },
          "per_page": {
            "type": "integer",
            "minimum": 1,
            "maximum": 200
          },
          "following": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 1
              },
              {
                "type": "string"
              },
              {
                "type": "string",
                "format": "uuid"
              }
            ],
            "description": "Show users following this user, specified by sequential ID, username, or UUID",
            "example": "1234"
          },
          "followed_by": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 1
              },
              {
                "type": "string"
              },
              {
                "type": "string",
                "format": "uuid"
              }
            ],
            "description": "Show users followed by this user, specified by sequential ID, username, or UUID",
            "example": "1234"
          },
          "orcid": {
            "type": "string",
            "pattern": "^[0-9]{4}(-[0-9]{4}){2}-[0-9]{3}[0-9X]$",
            "description": "Show users with the specified orcid",
            "example": "0000-0001-0002-0004"
          }
        },
        "additionalProperties": false
      },
      "UsersResetPassword": {
        "type": "object",
        "properties": {
          "user": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string",
                "format": "email"
              }
            },
            "required": [
              "email"
            ],
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      "UsersUpdate": {
        "type": "object",
        "properties": {
          "user": {
            "type": "object",
            "properties": {
              "data_transfer_consent": {
                "type": "boolean",
                "nullable": true,
                "description": "\n        Whether the user consents to the transfer of their personal\n        information to the United States. The only way to revoke this consent\n        is to delete the account.\n      "
              },
              "description": {
                "type": "string",
                "nullable": true
              },
              "faved_project_ids": {
                "type": "array",
                "items": {
                  "type": "number",
                  "format": "float"
                },
                "description": "\n        Ordered list of IDs of projects the user has faved. Order of IDs in\n        the array is the order in which they will be displayed\n      "
              },
              "email": {
                "type": "string"
              },
              "icon": {
                "type": "object",
                "properties": {

                },
                "additionalProperties": false,
                "nullable": true
              },
              "locale": {
                "type": "string",
                "nullable": true
              },
              "login": {
                "type": "string"
              },
              "make_observation_licenses_same": {
                "type": "boolean",
                "description": "Whether a change to `preferred_observation_license` should be apply to all the user's existing observations"
              },
              "make_photo_licenses_same": {
                "type": "boolean",
                "description": "Whether a change to `preferred_photo_license` should be apply to all the user's existing photos"
              },
              "make_sound_licenses_same": {
                "type": "boolean",
                "description": "Whether a change to `preferred_sound_license` should be apply to all the user's existing sounds"
              },
              "name": {
                "type": "string",
                "nullable": true
              },
              "pi_consent": {
                "type": "boolean",
                "nullable": true,
                "description": "\n        Whether the user consents to the storage of their personal\n        information. The only way to revoke this consent is to delete the\n        account.\n      "
              },
              "place_id": {
                "type": "integer",
                "nullable": true,
                "description": "ID of place for localizing common names"
              },
              "preferred_observation_fields_by": {
                "type": "string"
              },
              "preferred_observation_license": {
                "type": "string",
                "nullable": true
              },
              "preferred_photo_license": {
                "type": "string",
                "nullable": true
              },
              "preferred_project_addition_by": {
                "type": "string"
              },
              "preferred_sound_license": {
                "type": "string",
                "nullable": true
              },
              "prefers_automatic_taxonomic_changes": {
                "type": "boolean"
              },
              "prefers_comment_email_notification": {
                "type": "boolean"
              },
              "prefers_common_names": {
                "type": "boolean"
              },
              "prefers_community_taxa": {
                "type": "boolean"
              },
              "prefers_identification_email_notification": {
                "type": "boolean"
              },
              "prefers_infraspecies_identification_notifications": {
                "type": "boolean"
              },
              "prefers_mention_email_notification": {
                "type": "boolean"
              },
              "prefers_message_email_notification": {
                "type": "boolean"
              },
              "prefers_monthly_supporter_badge": {
                "type": "boolean"
              },
              "prefers_no_email": {
                "type": "boolean"
              },
              "prefers_no_tracking": {
                "type": "boolean"
              },
              "prefers_non_disagreeing_identification_notifications": {
                "type": "boolean"
              },
              "prefers_project_added_your_observation_email_notification": {
                "type": "boolean"
              },
              "prefers_project_curator_change_email_notification": {
                "type": "boolean"
              },
              "prefers_project_journal_post_email_notification": {
                "type": "boolean"
              },
              "prefers_receive_mentions": {
                "type": "boolean"
              },
              "prefers_redundant_identification_notifications": {
                "type": "boolean"
              },
              "prefers_scientific_name_first": {
                "type": "boolean"
              },
              "prefers_taxon_change_email_notification": {
                "type": "boolean"
              },
              "prefers_taxon_or_place_observation_email_notification": {
                "type": "boolean"
              },
              "prefers_user_observation_email_notification": {
                "type": "boolean"
              },
              "search_place_id": {
                "type": "integer",
                "nullable": true,
                "description": "ID of place for default observation searches"
              },
              "site_id": {
                "type": "integer",
                "nullable": true
              },
              "time_zone": {
                "type": "string",
                "nullable": true
              },
              "password": {
                "type": "string"
              },
              "password_confirmation": {
                "type": "string"
              }
            },
            "additionalProperties": false
          },
          "icon_delete": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "UsersUpdateMultipart": {
        "type": "object",
        "properties": {
          "user[data_transfer_consent]": {
            "type": "boolean",
            "nullable": true,
            "description": "\n        Whether the user consents to the transfer of their personal\n        information to the United States. The only way to revoke this consent\n        is to delete the account.\n      "
          },
          "user[description]": {
            "type": "string",
            "nullable": true
          },
          "user[faved_project_ids]": {
            "type": "array",
            "items": {
              "type": "number",
              "format": "float"
            },
            "description": "\n        Ordered list of IDs of projects the user has faved. Order of IDs in\n        the array is the order in which they will be displayed\n      "
          },
          "user[email]": {
            "type": "string"
          },
          "user[locale]": {
            "type": "string",
            "nullable": true
          },
          "user[login]": {
            "type": "string"
          },
          "user[make_observation_licenses_same]": {
            "type": "boolean",
            "description": "Whether a change to `preferred_observation_license` should be apply to all the user's existing observations"
          },
          "user[make_photo_licenses_same]": {
            "type": "boolean",
            "description": "Whether a change to `preferred_photo_license` should be apply to all the user's existing photos"
          },
          "user[make_sound_licenses_same]": {
            "type": "boolean",
            "description": "Whether a change to `preferred_sound_license` should be apply to all the user's existing sounds"
          },
          "user[name]": {
            "type": "string",
            "nullable": true
          },
          "user[pi_consent]": {
            "type": "boolean",
            "nullable": true,
            "description": "\n        Whether the user consents to the storage of their personal\n        information. The only way to revoke this consent is to delete the\n        account.\n      "
          },
          "user[place_id]": {
            "type": "integer",
            "nullable": true,
            "description": "ID of place for localizing common names"
          },
          "user[preferred_observation_fields_by]": {
            "type": "string"
          },
          "user[preferred_observation_license]": {
            "type": "string",
            "nullable": true
          },
          "user[preferred_photo_license]": {
            "type": "string",
            "nullable": true
          },
          "user[preferred_project_addition_by]": {
            "type": "string"
          },
          "user[preferred_sound_license]": {
            "type": "string",
            "nullable": true
          },
          "user[prefers_automatic_taxonomic_changes]": {
            "type": "boolean"
          },
          "user[prefers_comment_email_notification]": {
            "type": "boolean"
          },
          "user[prefers_common_names]": {
            "type": "boolean"
          },
          "user[prefers_community_taxa]": {
            "type": "boolean"
          },
          "user[prefers_identification_email_notification]": {
            "type": "boolean"
          },
          "user[prefers_infraspecies_identification_notifications]": {
            "type": "boolean"
          },
          "user[prefers_mention_email_notification]": {
            "type": "boolean"
          },
          "user[prefers_message_email_notification]": {
            "type": "boolean"
          },
          "user[prefers_monthly_supporter_badge]": {
            "type": "boolean"
          },
          "user[prefers_no_email]": {
            "type": "boolean"
          },
          "user[prefers_no_tracking]": {
            "type": "boolean"
          },
          "user[prefers_non_disagreeing_identification_notifications]": {
            "type": "boolean"
          },
          "user[prefers_project_added_your_observation_email_notification]": {
            "type": "boolean"
          },
          "user[prefers_project_curator_change_email_notification]": {
            "type": "boolean"
          },
          "user[prefers_project_journal_post_email_notification]": {
            "type": "boolean"
          },
          "user[prefers_receive_mentions]": {
            "type": "boolean"
          },
          "user[prefers_redundant_identification_notifications]": {
            "type": "boolean"
          },
          "user[prefers_scientific_name_first]": {
            "type": "boolean"
          },
          "user[prefers_taxon_change_email_notification]": {
            "type": "boolean"
          },
          "user[prefers_taxon_or_place_observation_email_notification]": {
            "type": "boolean"
          },
          "user[prefers_user_observation_email_notification]": {
            "type": "boolean"
          },
          "user[search_place_id]": {
            "type": "integer",
            "nullable": true,
            "description": "ID of place for default observation searches"
          },
          "user[site_id]": {
            "type": "integer",
            "nullable": true
          },
          "user[time_zone]": {
            "type": "string",
            "nullable": true
          },
          "user[password]": {
            "type": "string"
          },
          "user[password_confirmation]": {
            "type": "string"
          },
          "icon_delete": {
            "type": "boolean"
          },
          "user[icon]": {
            "type": "string",
            "format": "binary"
          }
        }
      },
      "UsersUpdateSession": {
        "type": "object",
        "properties": {
          "prefers_hide_obs_show_identifiers": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "userJwtRequired": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header",
        "description": "User-specific JSON Web Token required"
      },
      "userJwtOptional": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header",
        "description": "User-specific JSON Web Token optional, may be used to customize responses for the authenticated user, e.g. localizing common names"
      },
      "appJwtRequired": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header",
        "description": "Application JSON Web Token required (application tokens only available to official apps), and user-specific JSON Web Tokens are not allowed"
      },
      "appOrUserJwtRequired": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header",
        "description": "User or application JSON Web Token (application tokens only available to official apps)"
      },
      "appAndUserJwtRequired": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header",
        "description": "User and application JSON Web Token (application tokens only available to official apps). Both tokens must be provided in a comma-separated list in any order"
      }
    },
    "responses": {
      "Error": {
        "description": "Unexpected error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      }
    }
  },
  "paths": {
    "/users/update_session": {
      "parameters": [],
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Update session",
        "description": "\n      Updates attributes that persist for the duration of a user's session.\n      Generally only relevant when using the iNaturalist website\n    ",
        "security": [
          {
            "userJwtRequired": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "prefers_hide_obs_show_identifiers"
          }
        ],
        "responses": {
          "204": {
            "description": "Session updated"
          }
        }
      }
    },
    "/users/reset_password": {
      "parameters": [],
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Reset a user password",
        "security": [
          {
            "appJwtRequired": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UsersResetPassword"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No response body; success implies reset request was received"
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/users/resend_confirmation": {
      "parameters": [],
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Resend an email confirmation",
        "security": [
          {
            "userJwtRequired": []
          }
        ],
        "responses": {
          "200": {
            "description": "No response body; success implies creation"
          }
        }
      }
    },
    "/users/recent_observation_fields": {
      "parameters": [],
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Fetch observation fields recently used by the logged-in user.",
        "security": [
          {
            "userJwtRequired": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "fields"
          }
        ],
        "responses": {
          "200": {
            "description": "An array of observation fields.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultsObservationFields"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/users/notification_counts": {
      "parameters": [],
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Fetch counts of unread notifications for the logged-in user.",
        "security": [
          {
            "userJwtRequired": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "fields"
          }
        ],
        "responses": {
          "200": {
            "description": "An object containing counts of unread notifications.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultsUsersNotificationCounts"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/users/me": {
      "parameters": [],
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Fetch the logged-in user.",
        "security": [
          {
            "userJwtRequired": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "fields"
          }
        ],
        "responses": {
          "200": {
            "description": "An array of users.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultsUsersMe"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/users/email_available": {
      "parameters": [],
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Check if email is available for account creation",
        "security": [
          {
            "appJwtRequired": []
          }
        ],
        "parameters": [
          {
            "in": "header",
            "schema": {
              "type": "string"
            },
            "name": "X-HTTP-Method-Override"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "fields"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "email",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Whether or not the email is available",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultsEmailAvailable"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/users/autocomplete": {
      "parameters": [],
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Search users.",
        "security": [
          {
            "userJwtOptional": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "q"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "include_suspended"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "per_page"
          },
          {
            "in": "query",
            "schema": {

            },
            "name": "fields"
          }
        ],
        "responses": {
          "200": {
            "description": "An array of users.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultsUsers"
                }
              }
            }
          }
        }
      }
    },
    "/users": {
      "parameters": [],
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "List users",
        "parameters": [
          {
            "in": "header",
            "name": "X-HTTP-Method-Override",
            "schema": {
              "type": "string"
            },
            "example": "GET"
          },
          {
            "in": "query",
            "schema": {

            },
            "name": "fields"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "name": "page"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 200
            },
            "name": "per_page"
          },
          {
            "in": "query",
            "schema": {
              "anyOf": [
                {
                  "type": "integer",
                  "minimum": 1,
                  "title": "following"
                },
                {
                  "type": "string",
                  "title": "following"
                },
                {
                  "type": "string",
                  "format": "uuid",
                  "title": "following"
                }
              ]
            },
            "name": "following",
            "description": "Show users following this user, specified by sequential ID, username, or UUID",
            "example": "1234"
          },
          {
            "in": "query",
            "schema": {
              "anyOf": [
                {
                  "type": "integer",
                  "minimum": 1,
                  "title": "followed_by"
                },
                {
                  "type": "string",
                  "title": "followed_by"
                },
                {
                  "type": "string",
                  "format": "uuid",
                  "title": "followed_by"
                }
              ]
            },
            "name": "followed_by",
            "description": "Show users followed by this user, specified by sequential ID, username, or UUID",
            "example": "1234"
          },
          {
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[0-9]{4}(-[0-9]{4}){2}-[0-9]{3}[0-9X]$"
            },
            "name": "orcid",
            "description": "Show users with the specified orcid",
            "example": "0000-0001-0002-0004"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of users",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultsUsers"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/translations/locales": {
      "parameters": [],
      "get": {
        "tags": [
          "Translations"
        ],
        "summary": "Return site translated locales",
        "parameters": [
          {
            "in": "header",
            "schema": {
              "type": "string"
            },
            "name": "X-HTTP-Method-Override"
          },
          {
            "in": "query",
            "schema": {
              "type": "string",
              "default": "locale,language_in_locale"
            },
            "name": "fields"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of locales",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultsTranslationsLocales"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/taxon_name_priorities": {
      "parameters": [],
      "post": {
        "tags": [
          "TaxonNamePriorities"
        ],
        "summary": "Create a taxon name priority",
        "security": [
          {
            "userJwtRequired": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaxonNamePrioritiesCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The taxon name priority just created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultsTaxonNamePriorities"
                }
              }
            }
          }
        }
      }
    },
    "/taxa/suggest": {
      "parameters": [],
      "get": {
        "tags": [
          "Taxa"
        ],
        "summary": "Suggest taxa for identifications given conditions",
        "description": "Retrieve automated identification suggestions for an observation or a set of filters like taxon and place",
        "security": [
          {
            "userJwtRequired": []
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "X-HTTP-Method-Override",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "name": "featured_observation_id",
            "description": "When `source` is `observations`, ignore this observation"
          },
          {
            "in": "query",
            "schema": {

            },
            "name": "fields"
          },
          {
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uri"
            },
            "name": "image_url",
            "description": "URL for image to use when `source` is `visual`"
          },
          {
            "in": "query",
            "schema": {
              "anyOf": [
                {
                  "type": "boolean",
                  "title": "include_representative_photos"
                },
                {
                  "type": "string",
                  "title": "include_representative_photos"
                }
              ]
            },
            "name": "include_representative_photos"
          },
          {
            "in": "query",
            "schema": {
              "type": "number",
              "format": "float",
              "minimum": 0
            },
            "name": "limit",
            "description": "Number of results to return"
          },
          {
            "in": "query",
            "schema": {
              "type": "number",
              "format": "float",
              "minimum": -90,
              "maximum": 90
            },
            "name": "lat",
            "description": "Coordinate used when fetching nearby results `source` is `visual` or `*observations`"
          },
          {
            "in": "query",
            "schema": {
              "type": "number",
              "format": "float",
              "minimum": -180,
              "maximum": 180
            },
            "name": "lng",
            "description": "Coordinate used when fetching nearby results `source` is `visual` or `*observations`"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "locale"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "months"
          },
          {
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "name": "observation_id",
            "description": " Automatically set place and taxon filters based on this observation; this\n      will override the values of `place_id` and `taxon_id` if these values\n      can be derived from the observation\n    "
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "observed_on",
            "description": " Date the subject was observed (YYYY-MM-DD), used to refine suggestions to\n      those observed at a similar time of year\n    "
          },
          {
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "taxonomy",
                "default",
                "sciname"
              ]
            },
            "name": "order_by",
            "description": " How the suggestions will be ordered. The default is to order by whatever default\n      a source uses, e.g. the score when `source` is `visual`, or the number of\n      observations (frequency) when the `source` is `*observations`. Ordering by\n      `taxonomy` will group the results by their closeness in the taxonomic\n      tree, but continue to use default ordering for siblings (e.g. species in the\n      same genus).\n    "
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "place_id",
            "description": " Only retrieve suggestions from this place when `source` is `checklist`\n      or `*observations`\n    "
          },
          {
            "in": "query",
            "schema": {
              "type": "number",
              "format": "float",
              "minimum": -90,
              "maximum": 90
            },
            "name": "place_lat",
            "description": " Coordinate used to set a place filter when source is `*observations` by\n      choosing the place whose boundary contains the coordinate. Only chooses\n      from places curated by staff (aka \"standard\" places) and only sets the\n      place when lat, lng, and place_id are blank\n    "
          },
          {
            "in": "query",
            "schema": {
              "type": "number",
              "format": "float",
              "minimum": -180,
              "maximum": 180
            },
            "name": "place_lng",
            "description": "See `place_lat`"
          },
          {
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "captive_observations",
                "checklist",
                "misidentifications",
                "observations",
                "rg_observations",
                "visual"
              ],
              "nullable": true
            },
            "name": "source",
            "description": " Source of the suggestions. Note that different sources support different\n      search parameters. See each parameter for details\n    "
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "taxon_id",
            "description": " Only retrieve suggestions in this taxon. If taxon is below genus level it\n      will be replaced with the genus that contains it. When `source` is\n      `misidentifications`, suggestions will be species commonly misidentified\n      as this taxon\n    "
          }
        ],
        "responses": {
          "200": {
            "description": "An array of suggestions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultsTaxaSuggest"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Taxa"
        ],
        "summary": "Suggest taxa for identifications given conditions and an image",
        "description": "Just like its GET counterpart except it accepts an `image` parameter in a multipart POST request",
        "security": [
          {
            "userJwtRequired": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "An array of suggestions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultsTaxaSuggest"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "featured_observation_id": {
                    "type": "string",
                    "format": "uuid",
                    "description": "When `source` is `observations`, ignore this observation"
                  },
                  "fields": {

                  },
                  "image_url": {
                    "type": "string",
                    "description": "URL for image to use when `source` is `visual`",
                    "title": "image_url"
                  },
                  "include_representative_photos": {
                    "anyOf": [
                      {
                        "type": "boolean"
                      },
                      {
                        "type": "string"
                      }
                    ]
                  },
                  "limit": {
                    "type": "number",
                    "format": "float",
                    "minimum": 0,
                    "description": "Number of results to return"
                  },
                  "lat": {
                    "type": "number",
                    "format": "float",
                    "minimum": -90,
                    "maximum": 90,
                    "description": "Coordinate used when fetching nearby results `source` is `visual` or `*observations`"
                  },
                  "lng": {
                    "type": "number",
                    "format": "float",
                    "minimum": -180,
                    "maximum": 180,
                    "description": "Coordinate used when fetching nearby results `source` is `visual` or `*observations`"
                  },
                  "locale": {
                    "type": "string"
                  },
                  "months": {
                    "type": "string"
                  },
                  "observation_id": {
                    "type": "string",
                    "format": "uuid",
                    "description": " Automatically set place and taxon filters based on this observation; this\n      will override the values of `place_id` and `taxon_id` if these values\n      can be derived from the observation\n    "
                  },
                  "observed_on": {
                    "type": "string",
                    "description": " Date the subject was observed (YYYY-MM-DD), used to refine suggestions to\n      those observed at a similar time of year\n    "
                  },
                  "order_by": {
                    "type": "string",
                    "enum": [
                      "taxonomy",
                      "default",
                      "sciname"
                    ],
                    "description": " How the suggestions will be ordered. The default is to order by whatever default\n      a source uses, e.g. the score when `source` is `visual`, or the number of\n      observations (frequency) when the `source` is `*observations`. Ordering by\n      `taxonomy` will group the results by their closeness in the taxonomic\n      tree, but continue to use default ordering for siblings (e.g. species in the\n      same genus).\n    "
                  },
                  "place_id": {
                    "type": "integer",
                    "description": " Only retrieve suggestions from this place when `source` is `checklist`\n      or `*observations`\n    "
                  },
                  "place_lat": {
                    "type": "number",
                    "format": "float",
                    "minimum": -90,
                    "maximum": 90,
                    "description": " Coordinate used to set a place filter when source is `*observations` by\n      choosing the place whose boundary contains the coordinate. Only chooses\n      from places curated by staff (aka \"standard\" places) and only sets the\n      place when lat, lng, and place_id are blank\n    "
                  },
                  "place_lng": {
                    "type": "number",
                    "format": "float",
                    "minimum": -180,
                    "maximum": 180,
                    "description": "See `place_lat`"
                  },
                  "source": {
                    "type": "string",
                    "enum": [
                      "captive_observations",
                      "checklist",
                      "misidentifications",
                      "observations",
                      "rg_observations",
                      "visual"
                    ],
                    "nullable": true,
                    "description": " Source of the suggestions. Note that different sources support different\n      search parameters. See each parameter for details\n    "
                  },
                  "taxon_id": {
                    "type": "integer",
                    "description": " Only retrieve suggestions in this taxon. If taxon is below genus level it\n      will be replaced with the genus that contains it. When `source` is\n      `misidentifications`, suggestions will be species commonly misidentified\n      as this taxon\n    "
                  },
                  "image": {
                    "type": "string",
                    "format": "binary",
                    "description": "Image to use when `source` is `visual`"
                  }
                },
                "additionalProperties": false
              }
            }
          }
        }
      }
    },
    "/taxa/iconic": {
      "parameters": [],
      "get": {
        "tags": [
          "Taxa"
        ],
        "summary": "Fetch iconic taxa.",
        "security": [
          {
            "userJwtOptional": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "fields"
          },
          {
            "in": "header",
            "schema": {
              "type": "string"
            },
            "name": "X-HTTP-Method-Override"
          }
        ],
        "responses": {
          "200": {
            "description": "An array of taxa.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultsTaxa"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/taxa/autocomplete": {
      "parameters": [],
      "get": {
        "tags": [
          "Taxa"
        ],
        "summary": "Search taxa.",
        "security": [
          {
            "userJwtOptional": []
          }
        ],
        "x-default-ttl": 120,
        "parameters": [
          {
            "in": "header",
            "name": "X-HTTP-Method-Override",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "q"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "is_active"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "iconic"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "per_page"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "locale"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "preferred_place_id"
          },
          {
            "in": "query",
            "schema": {

            },
            "name": "fields"
          }
        ],
        "responses": {
          "200": {
            "description": "An array of taxa.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultsTaxa"
                }
              }
            }
          }
        }
      }
    },
    "/taxa": {
      "parameters": [],
      "get": {
        "tags": [
          "Taxa"
        ],
        "summary": "Search taxa",
        "parameters": [
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "q"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "is_active"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "iconic"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "taxon_id"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "parent_id"
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "kingdom",
                  "phylum",
                  "subphylum",
                  "superclass",
                  "class",
                  "subclass",
                  "superorder",
                  "order",
                  "suborder",
                  "infraorder",
                  "superfamily",
                  "epifamily",
                  "family",
                  "subfamily",
                  "supertribe",
                  "tribe",
                  "subtribe",
                  "genus",
                  "genushybrid",
                  "species",
                  "hybrid",
                  "subspecies",
                  "variety",
                  "form"
                ]
              }
            },
            "name": "rank",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "number",
                "format": "float"
              }
            },
            "name": "rank_level",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "id_above"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "id_below"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "per_page"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "locale"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "preferred_place_id"
          },
          {
            "in": "query",
            "schema": {

            },
            "name": "fields"
          },
          {
            "in": "header",
            "schema": {
              "type": "string"
            },
            "name": "X-HTTP-Method-Override"
          }
        ],
        "x-default-ttl": 300,
        "responses": {
          "200": {
            "description": "An array of taxa",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultsTaxa"
                }
              }
            }
          }
        }
      }
    },
    "/sounds": {
      "parameters": [],
      "post": {
        "tags": [
          "Sounds"
        ],
        "summary": "Create sounds",
        "security": [
          {
            "userJwtRequired": []
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  },
                  "fields": {

                  },
                  "uuid": {
                    "type": "string",
                    "format": "uuid"
                  }
                },
                "required": [
                  "file"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An array of sounds.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultsSounds"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/sites": {
      "parameters": [],
      "get": {
        "tags": [
          "Sites"
        ],
        "summary": "List sites",
        "parameters": [
          {
            "in": "header",
            "name": "X-HTTP-Method-Override",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of sites",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultsSites"
                }
              }
            }
          }
        }
      }
    },
    "/search": {
      "parameters": [],
      "get": {
        "tags": [
          "Search"
        ],
        "summary": "Search for multiple kinds of records",
        "security": [
          {
            "userJwtOptional": []
          }
        ],
        "x-default-ttl": 120,
        "parameters": [
          {
            "in": "header",
            "name": "X-HTTP-Method-Override",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "q",
            "description": "Search query"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "locale"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "place_id",
            "description": "Integer ID for a place associated with results; only works for projects"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "preferred_place_id",
            "description": "Localizes some response values for the given place"
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "places",
                  "projects",
                  "taxa",
                  "users"
                ]
              }
            },
            "name": "sources",
            "description": "Filters search results by record types. Can be specified as an array or a comma-separated list of values",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "include_taxon_ancestors"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "page"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "per_page"
          },
          {
            "in": "query",
            "schema": {
              "default": "place,project,taxon,user"
            },
            "name": "fields",
            "description": "Attribute fields to return in the response",
            "example": "species_guess,observed_on"
          }
        ],
        "responses": {
          "200": {
            "description": "An array of search results. The actual record is keyed by its type, so if the `result.type` field is `project`, `result.project` will hold the project record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultsSearch"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/saved_locations": {
      "parameters": [],
      "get": {
        "tags": [
          "SavedLocations"
        ],
        "summary": "Retrieve saved locations for the authenticated user",
        "security": [
          {
            "userJwtRequired": []
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "X-HTTP-Method-Override",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "q"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "page"
          },
          {
            "in": "query",
            "schema": {

            },
            "name": "fields"
          }
        ],
        "responses": {
          "200": {
            "description": "An array of saved locations",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultsSavedLocations"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "SavedLocations"
        ],
        "summary": "Create a saved location",
        "security": [
          {
            "userJwtRequired": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SavedLocationsCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An array of saved locations",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultsSavedLocations"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/relationships": {
      "parameters": [],
      "get": {
        "tags": [
          "Relationships"
        ],
        "summary": "Search relationships for the authenticated user",
        "security": [
          {
            "userJwtRequired": []
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "X-HTTP-Method-Override",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "q"
          },
          {
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "yes",
                "no",
                "any"
              ]
            },
            "name": "trusted",
            "description": "Whether or not the user trusts the friend with hidden coordinates."
          },
          {
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "yes",
                "no",
                "any"
              ]
            },
            "name": "following",
            "description": "Whether or not the user wants to see updates about new content from the friend."
          },
          {
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "desc",
                "asc"
              ]
            },
            "name": "order"
          },
          {
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "friendships.id",
                "users.login"
              ],
              "default": "users.login"
            },
            "name": "order_by"
          },
          {
            "in": "query",
            "schema": {

            },
            "name": "fields",
            "description": "Attribute fields to return in the response",
            "example": "all"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of relationships",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultsRelationships"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "Relationships"
        ],
        "summary": "Create a relationship for the authenticated user",
        "security": [
          {
            "userJwtRequired": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipsCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "A list of relationships",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultsRelationships"
                }
              }
            }
          }
        }
      }
    },
    "/provider_authorizations": {
      "parameters": [],
      "get": {
        "tags": [
          "ProviderAuthorizations"
        ],
        "summary": "Third-party accounts the authenticated user has authorized iNat to access on their behalf",
        "security": [
          {
            "userJwtRequired": []
          }
        ],
        "parameters": [
          {
            "in": "header",
            "schema": {
              "type": "string"
            },
            "name": "X-HTTP-Method-Override"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "fields"
          }
        ],
        "responses": {
          "200": {
            "description": "List of third-party accounts the authenticated user has authorized iNat to access on their behalf",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultsProviderAuthorizations"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/projects": {
      "parameters": [],
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "Search projects",
        "x-default-ttl": 300,
        "parameters": [
          {
            "in": "header",
            "name": "X-HTTP-Method-Override",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "q"
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "not_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "number",
              "format": "float",
              "minimum": -90,
              "maximum": 90
            },
            "name": "lat"
          },
          {
            "in": "query",
            "schema": {
              "type": "number",
              "format": "float",
              "minimum": -180,
              "maximum": 180
            },
            "name": "lng"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "radius"
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "place_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "features"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "noteworthy"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "site_id"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "rule_details"
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "collection",
                  "umbrella"
                ]
              }
            },
            "name": "type",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "member_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "has_params"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "has_posts"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "page"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "per_page"
          },
          {
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "recent_posts",
                "created",
                "updated",
                "distance",
                "featured"
              ]
            },
            "name": "order_by"
          },
          {
            "in": "query",
            "schema": {

            },
            "name": "fields",
            "description": "Attribute fields to return in the response",
            "example": "title,description"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of projects",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultsProjects"
                }
              }
            }
          }
        }
      }
    },
    "/project_observations": {
      "parameters": [],
      "post": {
        "tags": [
          "ProjectObservations"
        ],
        "summary": "Add an observation to a project",
        "security": [
          {
            "userJwtRequired": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectObservationsCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The ProjectObservation record just created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultsProjectObservations"
                }
              }
            }
          }
        }
      }
    },
    "/places/nearby": {
      "parameters": [],
      "get": {
        "tags": [
          "Places"
        ],
        "summary": "Fetch nearby places",
        "security": [
          {
            "userJwtOptional": []
          }
        ],
        "x-default-ttl": 300,
        "parameters": [
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "acc",
            "description": "Filter by whether `positional_accuracy` is set or not"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "captive",
            "description": "Filter by captive / cultivated status"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "endemic",
            "description": "Filter by whether the observation is in a place with a check list entry indicating the establishment means is `endemic`"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "geo"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "id_please"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "identified"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "introduced"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "mappable"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "native"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "out_of_range"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "pcid",
            "deprecated": true
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "photos"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "popular"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "sounds"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "taxon_is_active"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "threatened",
            "description": "Filter by whether the observed taxon has a conservation status of \"threatened\" or worse"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "verifiable",
            "description": "Filter by whether observations are 'verifiable' (have quality grades `research` or `needs_id`)"
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "anyOf": [
                  {
                    "type": "string",
                    "format": "uuid"
                  },
                  {
                    "type": "integer"
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            },
            "name": "id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            },
            "name": "not_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "cc-by",
                  "cc-by-nc",
                  "cc-by-nd",
                  "cc-by-sa",
                  "cc-by-nc-nd",
                  "cc-by-nc-sa",
                  "cc0"
                ]
              }
            },
            "name": "license",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "cc-by",
                  "cc-by-nc",
                  "cc-by-nd",
                  "cc-by-sa",
                  "cc-by-nc-nd",
                  "cc-by-nc-sa",
                  "cc0"
                ]
              }
            },
            "name": "photo_license",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "licensed",
            "description": "Filter by observations where the license attribute is not null, i.e. it is licensed"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "photo_licensed",
            "description": "Filter by observations where the license attribute of at least one photo is not null"
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "anyOf": [
                  {
                    "type": "string",
                    "format": "uuid"
                  },
                  {
                    "type": "integer"
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            },
            "name": "place_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "anyOf": [
                  {
                    "type": "integer"
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            },
            "name": "project_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "coords_viewable_for_proj",
            "description": "Filter by observers who trust the project(s) specified in `project_id` OR trust the authenticated viewer"
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "kingdom",
                  "phylum",
                  "subphylum",
                  "superclass",
                  "class",
                  "subclass",
                  "infraclass",
                  "subterclass",
                  "superorder",
                  "order",
                  "suborder",
                  "infraorder",
                  "parvorder",
                  "zoosection",
                  "zoosubsection",
                  "superfamily",
                  "epifamily",
                  "family",
                  "subfamily",
                  "supertribe",
                  "tribe",
                  "subtribe",
                  "genus",
                  "genushybrid",
                  "subgenus",
                  "section",
                  "subsection",
                  "complex",
                  "species",
                  "hybrid",
                  "subspecies",
                  "variety",
                  "form",
                  "infrahybrid"
                ]
              }
            },
            "name": "rank",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "site_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "cc-by",
                  "cc-by-nc",
                  "cc-by-nd",
                  "cc-by-sa",
                  "cc-by-nc-nd",
                  "cc-by-nc-sa",
                  "cc0"
                ]
              }
            },
            "name": "sound_license",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "taxon_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "without_taxon_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "taxon_name"
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "name": "user_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "name": "user_login",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "minimum": 0,
                "maximum": 23
              }
            },
            "name": "hour",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "minimum": 1,
                "maximum": 31
              }
            },
            "name": "day",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "minimum": 1,
                "maximum": 12
              }
            },
            "name": "month",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "year",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "minimum": 1,
                "maximum": 31
              }
            },
            "name": "created_day",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "minimum": 1,
                "maximum": 12
              }
            },
            "name": "created_month",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "created_year",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "term_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "term_value_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "without_term_value_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "term_id_or_unknown",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "name": "annotation_user_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "acc_above"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "acc_below"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "acc_below_or_unknown"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "d1"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "d2"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "created_d1"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "created_d2"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "created_on"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "observed_on"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "unobserved_by_user_id"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "apply_project_rules_for"
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "observation_accuracy_experiment_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "cs"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "csa"
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "LC",
                  "NT",
                  "VU",
                  "EN",
                  "CR",
                  "EW",
                  "EX"
                ]
              }
            },
            "name": "csi",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "obscured",
                  "obscured_private",
                  "open",
                  "private"
                ]
              }
            },
            "name": "geoprivacy",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "obscured",
                  "obscured_private",
                  "open",
                  "private"
                ]
              }
            },
            "name": "taxon_geoprivacy",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "obscured",
                  "private",
                  "none"
                ]
              }
            },
            "name": "obscuration",
            "description": "Filter by observations where the `geoprivacy` or `taxon_geoprivacy` match these values",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "kingdom",
                  "phylum",
                  "subphylum",
                  "superclass",
                  "class",
                  "subclass",
                  "infraclass",
                  "subterclass",
                  "superorder",
                  "order",
                  "suborder",
                  "infraorder",
                  "parvorder",
                  "zoosection",
                  "zoosubsection",
                  "superfamily",
                  "epifamily",
                  "family",
                  "subfamily",
                  "supertribe",
                  "tribe",
                  "subtribe",
                  "genus",
                  "genushybrid",
                  "subgenus",
                  "section",
                  "subsection",
                  "complex",
                  "species",
                  "hybrid",
                  "subspecies",
                  "variety",
                  "form",
                  "infrahybrid"
                ]
              }
            },
            "name": "hrank",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "kingdom",
                  "phylum",
                  "subphylum",
                  "superclass",
                  "class",
                  "subclass",
                  "infraclass",
                  "subterclass",
                  "superorder",
                  "order",
                  "suborder",
                  "infraorder",
                  "parvorder",
                  "zoosection",
                  "zoosubsection",
                  "superfamily",
                  "epifamily",
                  "family",
                  "subfamily",
                  "supertribe",
                  "tribe",
                  "subtribe",
                  "genus",
                  "genushybrid",
                  "subgenus",
                  "section",
                  "subsection",
                  "complex",
                  "species",
                  "hybrid",
                  "subspecies",
                  "variety",
                  "form",
                  "infrahybrid"
                ]
              }
            },
            "name": "lrank",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "Actinopterygii",
                  "Animalia",
                  "Amphibia",
                  "Arachnida",
                  "Aves",
                  "Chromista",
                  "Fungi",
                  "Insecta",
                  "Mammalia",
                  "Mollusca",
                  "Reptilia",
                  "Plantae",
                  "Protozoa",
                  "unknown"
                ]
              }
            },
            "name": "iconic_taxa",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "id_above"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "id_below"
          },
          {
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "most_agree",
                "most_disagree",
                "some_agree"
              ]
            },
            "name": "identifications",
            "description": "Filter by level of agreement among identifications:\n\n* **most_agree:** returns observations where there are more active identifications of taxa that agree with the Observation Taxon than active identifications that disagree with the Observation Taxon\n* **some_agree:** returns observations where there are some active identifications of taxa that agree with the Observation Taxon\n* **most_disagree:** returns observations where there are more active identifications of taxa that disagree with the Observation Taxon than active identifications that agree with the Observation Taxon"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "disagreements",
            "description": "Whether there is disagreement among active identifications"
          },
          {
            "in": "query",
            "schema": {
              "type": "number",
              "format": "float",
              "minimum": -90,
              "maximum": 90
            },
            "name": "lat"
          },
          {
            "in": "query",
            "schema": {
              "type": "number",
              "format": "float",
              "minimum": -180,
              "maximum": 180
            },
            "name": "lng"
          },
          {
            "in": "query",
            "schema": {
              "type": "number",
              "format": "float"
            },
            "name": "radius"
          },
          {
            "in": "query",
            "schema": {
              "type": "number",
              "format": "float",
              "minimum": -90,
              "maximum": 90
            },
            "name": "nelat"
          },
          {
            "in": "query",
            "schema": {
              "type": "number",
              "format": "float",
              "minimum": -180,
              "maximum": 180
            },
            "name": "nelng"
          },
          {
            "in": "query",
            "schema": {
              "type": "number",
              "format": "float",
              "minimum": -90,
              "maximum": 90
            },
            "name": "swlat"
          },
          {
            "in": "query",
            "schema": {
              "type": "number",
              "format": "float",
              "minimum": -180,
              "maximum": 180
            },
            "name": "swlng"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "list_id"
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "name": "not_in_project",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "not_matching_project_rules_for"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "q"
          },
          {
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "names",
                "tags",
                "description",
                "place",
                "taxon_page_obs_photos"
              ]
            },
            "name": "search_on"
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "casual",
                  "needs_id",
                  "research"
                ]
              }
            },
            "name": "quality_grade",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "without_field"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "outlink_source"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "updated_since"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "viewer_id"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "reviewed"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "expected_nearby"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "locale"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "preferred_place_id"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "ttl"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "page"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "per_page"
          },
          {
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "desc",
                "asc"
              ],
              "default": "desc"
            },
            "name": "order"
          },
          {
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "created_at",
                "geo_score",
                "id",
                "observed_on",
                "random",
                "species_guess",
                "updated_at",
                "votes"
              ],
              "default": "created_at"
            },
            "name": "order_by"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "only_id"
          },
          {
            "in": "query",
            "schema": {

            },
            "name": "fields",
            "description": "Attribute fields to return in the response",
            "example": "species_guess,observed_on"
          },
          {
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "observed",
                "created"
              ],
              "default": "observed"
            },
            "name": "date_field"
          },
          {
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "year",
                "month",
                "week",
                "day",
                "hour",
                "month_of_year",
                "week_of_year"
              ],
              "default": "month_of_year"
            },
            "name": "interval"
          },
          {
            "in": "header",
            "schema": {
              "type": "string"
            },
            "name": "X-HTTP-Method-Override"
          }
        ],
        "responses": {
          "200": {
            "description": "An object with metadata and an results object containing standard and community places.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultsPlacesNearby"
                }
              }
            }
          }
        }
      }
    },
    "/places": {
      "parameters": [],
      "get": {
        "tags": [
          "Places"
        ],
        "summary": "Search places",
        "parameters": [
          {
            "in": "header",
            "name": "X-HTTP-Method-Override",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "q"
          },
          {
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "area"
              ]
            },
            "name": "order_by"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "geo"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "per_page"
          },
          {
            "in": "query",
            "schema": {

            },
            "name": "fields"
          }
        ],
        "x-default-ttl": 300,
        "responses": {
          "200": {
            "description": "A list of places",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultsPlaces"
                }
              }
            }
          }
        }
      }
    },
    "/photos": {
      "parameters": [],
      "post": {
        "tags": [
          "Photos"
        ],
        "summary": "Create photos",
        "security": [
          {
            "userJwtRequired": []
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PhotosCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An array of photos.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultsPhotos"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/observations/updates": {
      "parameters": [],
      "get": {
        "tags": [
          "Observations"
        ],
        "summary": "Fetch observation updates",
        "security": [
          {
            "userJwtRequired": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "created_after",
            "description": "ISO8601 datetime after which the update was created"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "viewed",
            "description": "When false this only returns updates that have not been viewed by the authenticated user. When true it returns all updates."
          },
          {
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "owner",
                "following"
              ]
            },
            "name": "observations_by",
            "description": "Restrict to updates on observations by the authenticated user (owner) or on observations the authenticated user is following"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "page"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "per_page"
          },
          {
            "in": "query",
            "schema": {

            },
            "name": "fields"
          },
          {
            "in": "header",
            "schema": {
              "type": "string"
            },
            "name": "X-HTTP-Method-Override"
          }
        ],
        "responses": {
          "200": {
            "description": "An array of updates.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultsUpdates"
                }
              }
            }
          }
        }
      }
    },
    "/observations/umbrella_project_stats": {
      "parameters": [],
      "get": {
        "tags": [
          "Observations"
        ],
        "summary": "Fetch umbrella project stats",
        "security": [
          {
            "userJwtOptional": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "acc",
            "description": "Filter by whether `positional_accuracy` is set or not"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "captive",
            "description": "Filter by captive / cultivated status"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "endemic",
            "description": "Filter by whether the observation is in a place with a check list entry indicating the establishment means is `endemic`"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "geo"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "id_please"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "identified"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "introduced"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "mappable"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "native"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "out_of_range"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "pcid",
            "deprecated": true
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "photos"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "popular"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "sounds"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "taxon_is_active"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "threatened",
            "description": "Filter by whether the observed taxon has a conservation status of \"threatened\" or worse"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "verifiable",
            "description": "Filter by whether observations are 'verifiable' (have quality grades `research` or `needs_id`)"
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "anyOf": [
                  {
                    "type": "string",
                    "format": "uuid"
                  },
                  {
                    "type": "integer"
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            },
            "name": "id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            },
            "name": "not_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "cc-by",
                  "cc-by-nc",
                  "cc-by-nd",
                  "cc-by-sa",
                  "cc-by-nc-nd",
                  "cc-by-nc-sa",
                  "cc0"
                ]
              }
            },
            "name": "license",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "cc-by",
                  "cc-by-nc",
                  "cc-by-nd",
                  "cc-by-sa",
                  "cc-by-nc-nd",
                  "cc-by-nc-sa",
                  "cc0"
                ]
              }
            },
            "name": "photo_license",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "licensed",
            "description": "Filter by observations where the license attribute is not null, i.e. it is licensed"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "photo_licensed",
            "description": "Filter by observations where the license attribute of at least one photo is not null"
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "anyOf": [
                  {
                    "type": "string",
                    "format": "uuid"
                  },
                  {
                    "type": "integer"
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            },
            "name": "place_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "anyOf": [
                  {
                    "type": "integer"
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            },
            "name": "project_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "coords_viewable_for_proj",
            "description": "Filter by observers who trust the project(s) specified in `project_id` OR trust the authenticated viewer"
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "kingdom",
                  "phylum",
                  "subphylum",
                  "superclass",
                  "class",
                  "subclass",
                  "infraclass",
                  "subterclass",
                  "superorder",
                  "order",
                  "suborder",
                  "infraorder",
                  "parvorder",
                  "zoosection",
                  "zoosubsection",
                  "superfamily",
                  "epifamily",
                  "family",
                  "subfamily",
                  "supertribe",
                  "tribe",
                  "subtribe",
                  "genus",
                  "genushybrid",
                  "subgenus",
                  "section",
                  "subsection",
                  "complex",
                  "species",
                  "hybrid",
                  "subspecies",
                  "variety",
                  "form",
                  "infrahybrid"
                ]
              }
            },
            "name": "rank",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "site_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "cc-by",
                  "cc-by-nc",
                  "cc-by-nd",
                  "cc-by-sa",
                  "cc-by-nc-nd",
                  "cc-by-nc-sa",
                  "cc0"
                ]
              }
            },
            "name": "sound_license",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "taxon_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "without_taxon_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "taxon_name"
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "name": "user_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "name": "user_login",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "minimum": 0,
                "maximum": 23
              }
            },
            "name": "hour",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "minimum": 1,
                "maximum": 31
              }
            },
            "name": "day",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "minimum": 1,
                "maximum": 12
              }
            },
            "name": "month",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "year",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "minimum": 1,
                "maximum": 31
              }
            },
            "name": "created_day",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "minimum": 1,
                "maximum": 12
              }
            },
            "name": "created_month",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "created_year",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "term_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "term_value_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "without_term_value_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "term_id_or_unknown",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "name": "annotation_user_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "acc_above"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "acc_below"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "acc_below_or_unknown"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "d1"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "d2"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "created_d1"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "created_d2"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "created_on"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "observed_on"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "unobserved_by_user_id"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "apply_project_rules_for"
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "observation_accuracy_experiment_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "cs"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "csa"
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "LC",
                  "NT",
                  "VU",
                  "EN",
                  "CR",
                  "EW",
                  "EX"
                ]
              }
            },
            "name": "csi",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "obscured",
                  "obscured_private",
                  "open",
                  "private"
                ]
              }
            },
            "name": "geoprivacy",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "obscured",
                  "obscured_private",
                  "open",
                  "private"
                ]
              }
            },
            "name": "taxon_geoprivacy",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "obscured",
                  "private",
                  "none"
                ]
              }
            },
            "name": "obscuration",
            "description": "Filter by observations where the `geoprivacy` or `taxon_geoprivacy` match these values",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "kingdom",
                  "phylum",
                  "subphylum",
                  "superclass",
                  "class",
                  "subclass",
                  "infraclass",
                  "subterclass",
                  "superorder",
                  "order",
                  "suborder",
                  "infraorder",
                  "parvorder",
                  "zoosection",
                  "zoosubsection",
                  "superfamily",
                  "epifamily",
                  "family",
                  "subfamily",
                  "supertribe",
                  "tribe",
                  "subtribe",
                  "genus",
                  "genushybrid",
                  "subgenus",
                  "section",
                  "subsection",
                  "complex",
                  "species",
                  "hybrid",
                  "subspecies",
                  "variety",
                  "form",
                  "infrahybrid"
                ]
              }
            },
            "name": "hrank",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "kingdom",
                  "phylum",
                  "subphylum",
                  "superclass",
                  "class",
                  "subclass",
                  "infraclass",
                  "subterclass",
                  "superorder",
                  "order",
                  "suborder",
                  "infraorder",
                  "parvorder",
                  "zoosection",
                  "zoosubsection",
                  "superfamily",
                  "epifamily",
                  "family",
                  "subfamily",
                  "supertribe",
                  "tribe",
                  "subtribe",
                  "genus",
                  "genushybrid",
                  "subgenus",
                  "section",
                  "subsection",
                  "complex",
                  "species",
                  "hybrid",
                  "subspecies",
                  "variety",
                  "form",
                  "infrahybrid"
                ]
              }
            },
            "name": "lrank",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "Actinopterygii",
                  "Animalia",
                  "Amphibia",
                  "Arachnida",
                  "Aves",
                  "Chromista",
                  "Fungi",
                  "Insecta",
                  "Mammalia",
                  "Mollusca",
                  "Reptilia",
                  "Plantae",
                  "Protozoa",
                  "unknown"
                ]
              }
            },
            "name": "iconic_taxa",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "id_above"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "id_below"
          },
          {
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "most_agree",
                "most_disagree",
                "some_agree"
              ]
            },
            "name": "identifications",
            "description": "Filter by level of agreement among identifications:\n\n* **most_agree:** returns observations where there are more active identifications of taxa that agree with the Observation Taxon than active identifications that disagree with the Observation Taxon\n* **some_agree:** returns observations where there are some active identifications of taxa that agree with the Observation Taxon\n* **most_disagree:** returns observations where there are more active identifications of taxa that disagree with the Observation Taxon than active identifications that agree with the Observation Taxon"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "disagreements",
            "description": "Whether there is disagreement among active identifications"
          },
          {
            "in": "query",
            "schema": {
              "type": "number",
              "format": "float",
              "minimum": -90,
              "maximum": 90
            },
            "name": "lat"
          },
          {
            "in": "query",
            "schema": {
              "type": "number",
              "format": "float",
              "minimum": -180,
              "maximum": 180
            },
            "name": "lng"
          },
          {
            "in": "query",
            "schema": {
              "type": "number",
              "format": "float"
            },
            "name": "radius"
          },
          {
            "in": "query",
            "schema": {
              "type": "number",
              "format": "float",
              "minimum": -90,
              "maximum": 90
            },
            "name": "nelat"
          },
          {
            "in": "query",
            "schema": {
              "type": "number",
              "format": "float",
              "minimum": -180,
              "maximum": 180
            },
            "name": "nelng"
          },
          {
            "in": "query",
            "schema": {
              "type": "number",
              "format": "float",
              "minimum": -90,
              "maximum": 90
            },
            "name": "swlat"
          },
          {
            "in": "query",
            "schema": {
              "type": "number",
              "format": "float",
              "minimum": -180,
              "maximum": 180
            },
            "name": "swlng"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "list_id"
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "name": "not_in_project",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "not_matching_project_rules_for"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "q"
          },
          {
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "names",
                "tags",
                "description",
                "place",
                "taxon_page_obs_photos"
              ]
            },
            "name": "search_on"
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "casual",
                  "needs_id",
                  "research"
                ]
              }
            },
            "name": "quality_grade",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "without_field"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "outlink_source"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "updated_since"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "viewer_id"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "reviewed"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "expected_nearby"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "locale"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "preferred_place_id"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "ttl"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "page"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "per_page"
          },
          {
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "desc",
                "asc"
              ],
              "default": "desc"
            },
            "name": "order"
          },
          {
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "created_at",
                "geo_score",
                "id",
                "observed_on",
                "random",
                "species_guess",
                "updated_at",
                "votes"
              ],
              "default": "created_at"
            },
            "name": "order_by"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "only_id"
          },
          {
            "in": "query",
            "schema": {

            },
            "name": "fields",
            "description": "Attribute fields to return in the response",
            "example": "species_guess,observed_on"
          },
          {
            "in": "header",
            "schema": {
              "type": "string"
            },
            "name": "X-HTTP-Method-Override"
          }
        ],
        "responses": {
          "200": {
            "description": "An array of projects with counts.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultsObservationsUmbrellaProjectStats"
                }
              }
            }
          }
        }
      }
    },
    "/observations/species_counts": {
      "parameters": [],
      "get": {
        "tags": [
          "Observations"
        ],
        "summary": "Fetch observation species counts",
        "security": [
          {
            "userJwtOptional": []
          }
        ],
        "x-default-ttl": 300,
        "parameters": [
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "acc",
            "description": "Filter by whether `positional_accuracy` is set or not"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "captive",
            "description": "Filter by captive / cultivated status"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "endemic",
            "description": "Filter by whether the observation is in a place with a check list entry indicating the establishment means is `endemic`"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "geo"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "id_please"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "identified"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "introduced"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "mappable"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "native"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "out_of_range"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "pcid",
            "deprecated": true
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "photos"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "popular"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "sounds"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "taxon_is_active"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "threatened",
            "description": "Filter by whether the observed taxon has a conservation status of \"threatened\" or worse"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "verifiable",
            "description": "Filter by whether observations are 'verifiable' (have quality grades `research` or `needs_id`)"
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "anyOf": [
                  {
                    "type": "string",
                    "format": "uuid"
                  },
                  {
                    "type": "integer"
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            },
            "name": "id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            },
            "name": "not_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "cc-by",
                  "cc-by-nc",
                  "cc-by-nd",
                  "cc-by-sa",
                  "cc-by-nc-nd",
                  "cc-by-nc-sa",
                  "cc0"
                ]
              }
            },
            "name": "license",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "cc-by",
                  "cc-by-nc",
                  "cc-by-nd",
                  "cc-by-sa",
                  "cc-by-nc-nd",
                  "cc-by-nc-sa",
                  "cc0"
                ]
              }
            },
            "name": "photo_license",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "licensed",
            "description": "Filter by observations where the license attribute is not null, i.e. it is licensed"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "photo_licensed",
            "description": "Filter by observations where the license attribute of at least one photo is not null"
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "anyOf": [
                  {
                    "type": "string",
                    "format": "uuid"
                  },
                  {
                    "type": "integer"
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            },
            "name": "place_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "anyOf": [
                  {
                    "type": "integer"
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            },
            "name": "project_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "coords_viewable_for_proj",
            "description": "Filter by observers who trust the project(s) specified in `project_id` OR trust the authenticated viewer"
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "kingdom",
                  "phylum",
                  "subphylum",
                  "superclass",
                  "class",
                  "subclass",
                  "infraclass",
                  "subterclass",
                  "superorder",
                  "order",
                  "suborder",
                  "infraorder",
                  "parvorder",
                  "zoosection",
                  "zoosubsection",
                  "superfamily",
                  "epifamily",
                  "family",
                  "subfamily",
                  "supertribe",
                  "tribe",
                  "subtribe",
                  "genus",
                  "genushybrid",
                  "subgenus",
                  "section",
                  "subsection",
                  "complex",
                  "species",
                  "hybrid",
                  "subspecies",
                  "variety",
                  "form",
                  "infrahybrid"
                ]
              }
            },
            "name": "rank",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "site_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "cc-by",
                  "cc-by-nc",
                  "cc-by-nd",
                  "cc-by-sa",
                  "cc-by-nc-nd",
                  "cc-by-nc-sa",
                  "cc0"
                ]
              }
            },
            "name": "sound_license",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "taxon_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "without_taxon_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "taxon_name"
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "name": "user_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "name": "user_login",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "minimum": 0,
                "maximum": 23
              }
            },
            "name": "hour",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "minimum": 1,
                "maximum": 31
              }
            },
            "name": "day",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "minimum": 1,
                "maximum": 12
              }
            },
            "name": "month",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "year",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "minimum": 1,
                "maximum": 31
              }
            },
            "name": "created_day",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "minimum": 1,
                "maximum": 12
              }
            },
            "name": "created_month",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "created_year",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "term_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "term_value_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "without_term_value_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "term_id_or_unknown",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "name": "annotation_user_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "acc_above"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "acc_below"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "acc_below_or_unknown"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "d1"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "d2"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "created_d1"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "created_d2"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "created_on"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "observed_on"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "unobserved_by_user_id"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "apply_project_rules_for"
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "observation_accuracy_experiment_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "cs"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "csa"
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "LC",
                  "NT",
                  "VU",
                  "EN",
                  "CR",
                  "EW",
                  "EX"
                ]
              }
            },
            "name": "csi",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "obscured",
                  "obscured_private",
                  "open",
                  "private"
                ]
              }
            },
            "name": "geoprivacy",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "obscured",
                  "obscured_private",
                  "open",
                  "private"
                ]
              }
            },
            "name": "taxon_geoprivacy",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "obscured",
                  "private",
                  "none"
                ]
              }
            },
            "name": "obscuration",
            "description": "Filter by observations where the `geoprivacy` or `taxon_geoprivacy` match these values",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "kingdom",
                  "phylum",
                  "subphylum",
                  "superclass",
                  "class",
                  "subclass",
                  "infraclass",
                  "subterclass",
                  "superorder",
                  "order",
                  "suborder",
                  "infraorder",
                  "parvorder",
                  "zoosection",
                  "zoosubsection",
                  "superfamily",
                  "epifamily",
                  "family",
                  "subfamily",
                  "supertribe",
                  "tribe",
                  "subtribe",
                  "genus",
                  "genushybrid",
                  "subgenus",
                  "section",
                  "subsection",
                  "complex",
                  "species",
                  "hybrid",
                  "subspecies",
                  "variety",
                  "form",
                  "infrahybrid"
                ]
              }
            },
            "name": "hrank",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "kingdom",
                  "phylum",
                  "subphylum",
                  "superclass",
                  "class",
                  "subclass",
                  "infraclass",
                  "subterclass",
                  "superorder",
                  "order",
                  "suborder",
                  "infraorder",
                  "parvorder",
                  "zoosection",
                  "zoosubsection",
                  "superfamily",
                  "epifamily",
                  "family",
                  "subfamily",
                  "supertribe",
                  "tribe",
                  "subtribe",
                  "genus",
                  "genushybrid",
                  "subgenus",
                  "section",
                  "subsection",
                  "complex",
                  "species",
                  "hybrid",
                  "subspecies",
                  "variety",
                  "form",
                  "infrahybrid"
                ]
              }
            },
            "name": "lrank",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "Actinopterygii",
                  "Animalia",
                  "Amphibia",
                  "Arachnida",
                  "Aves",
                  "Chromista",
                  "Fungi",
                  "Insecta",
                  "Mammalia",
                  "Mollusca",
                  "Reptilia",
                  "Plantae",
                  "Protozoa",
                  "unknown"
                ]
              }
            },
            "name": "iconic_taxa",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "id_above"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "id_below"
          },
          {
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "most_agree",
                "most_disagree",
                "some_agree"
              ]
            },
            "name": "identifications",
            "description": "Filter by level of agreement among identifications:\n\n* **most_agree:** returns observations where there are more active identifications of taxa that agree with the Observation Taxon than active identifications that disagree with the Observation Taxon\n* **some_agree:** returns observations where there are some active identifications of taxa that agree with the Observation Taxon\n* **most_disagree:** returns observations where there are more active identifications of taxa that disagree with the Observation Taxon than active identifications that agree with the Observation Taxon"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "disagreements",
            "description": "Whether there is disagreement among active identifications"
          },
          {
            "in": "query",
            "schema": {
              "type": "number",
              "format": "float",
              "minimum": -90,
              "maximum": 90
            },
            "name": "lat"
          },
          {
            "in": "query",
            "schema": {
              "type": "number",
              "format": "float",
              "minimum": -180,
              "maximum": 180
            },
            "name": "lng"
          },
          {
            "in": "query",
            "schema": {
              "type": "number",
              "format": "float"
            },
            "name": "radius"
          },
          {
            "in": "query",
            "schema": {
              "type": "number",
              "format": "float",
              "minimum": -90,
              "maximum": 90
            },
            "name": "nelat"
          },
          {
            "in": "query",
            "schema": {
              "type": "number",
              "format": "float",
              "minimum": -180,
              "maximum": 180
            },
            "name": "nelng"
          },
          {
            "in": "query",
            "schema": {
              "type": "number",
              "format": "float",
              "minimum": -90,
              "maximum": 90
            },
            "name": "swlat"
          },
          {
            "in": "query",
            "schema": {
              "type": "number",
              "format": "float",
              "minimum": -180,
              "maximum": 180
            },
            "name": "swlng"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "list_id"
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "name": "not_in_project",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "not_matching_project_rules_for"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "q"
          },
          {
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "names",
                "tags",
                "description",
                "place",
                "taxon_page_obs_photos"
              ]
            },
            "name": "search_on"
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "casual",
                  "needs_id",
                  "research"
                ]
              }
            },
            "name": "quality_grade",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "without_field"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "outlink_source"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "updated_since"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "viewer_id"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "reviewed"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "expected_nearby"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "locale"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "preferred_place_id"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "ttl"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "page"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "per_page"
          },
          {
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "desc",
                "asc"
              ],
              "default": "desc"
            },
            "name": "order"
          },
          {
            "in": "query",
            "schema": {

            },
            "name": "fields",
            "description": "Attribute fields to return in the response",
            "example": "species_guess,observed_on"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "include_ancestors"
          },
          {
            "in": "header",
            "schema": {
              "type": "string"
            },
            "name": "X-HTTP-Method-Override"
          }
        ],
        "responses": {
          "200": {
            "description": "An array of species counts.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultsObservationsSpeciesCounts"
                }
              }
            }
          }
        }
      }
    },
    "/observations/quality_grades": {
      "parameters": [],
      "get": {
        "tags": [
          "Observations"
        ],
        "summary": "Fetch observation quality grade counts",
        "security": [
          {
            "userJwtOptional": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "fields"
          },
          {
            "in": "header",
            "schema": {
              "type": "string"
            },
            "name": "X-HTTP-Method-Override"
          }
        ],
        "responses": {
          "200": {
            "description": "An array of quality grades and counts.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultsObservationsQualityGrades"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/observations/popular_field_values": {
      "parameters": [],
      "get": {
        "tags": [
          "Observations"
        ],
        "summary": "Fetch observation controlled terms values and a monthly histogram",
        "security": [
          {
            "userJwtOptional": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "acc",
            "description": "Filter by whether `positional_accuracy` is set or not"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "captive",
            "description": "Filter by captive / cultivated status"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "endemic",
            "description": "Filter by whether the observation is in a place with a check list entry indicating the establishment means is `endemic`"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "geo"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "id_please"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "identified"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "introduced"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "mappable"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "native"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "out_of_range"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "pcid",
            "deprecated": true
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "photos"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "popular"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "sounds"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "taxon_is_active"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "threatened",
            "description": "Filter by whether the observed taxon has a conservation status of \"threatened\" or worse"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "verifiable",
            "description": "Filter by whether observations are 'verifiable' (have quality grades `research` or `needs_id`)"
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "anyOf": [
                  {
                    "type": "string",
                    "format": "uuid"
                  },
                  {
                    "type": "integer"
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            },
            "name": "id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            },
            "name": "not_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "cc-by",
                  "cc-by-nc",
                  "cc-by-nd",
                  "cc-by-sa",
                  "cc-by-nc-nd",
                  "cc-by-nc-sa",
                  "cc0"
                ]
              }
            },
            "name": "license",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "cc-by",
                  "cc-by-nc",
                  "cc-by-nd",
                  "cc-by-sa",
                  "cc-by-nc-nd",
                  "cc-by-nc-sa",
                  "cc0"
                ]
              }
            },
            "name": "photo_license",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "licensed",
            "description": "Filter by observations where the license attribute is not null, i.e. it is licensed"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "photo_licensed",
            "description": "Filter by observations where the license attribute of at least one photo is not null"
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "anyOf": [
                  {
                    "type": "string",
                    "format": "uuid"
                  },
                  {
                    "type": "integer"
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            },
            "name": "place_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "anyOf": [
                  {
                    "type": "integer"
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            },
            "name": "project_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "coords_viewable_for_proj",
            "description": "Filter by observers who trust the project(s) specified in `project_id` OR trust the authenticated viewer"
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "kingdom",
                  "phylum",
                  "subphylum",
                  "superclass",
                  "class",
                  "subclass",
                  "infraclass",
                  "subterclass",
                  "superorder",
                  "order",
                  "suborder",
                  "infraorder",
                  "parvorder",
                  "zoosection",
                  "zoosubsection",
                  "superfamily",
                  "epifamily",
                  "family",
                  "subfamily",
                  "supertribe",
                  "tribe",
                  "subtribe",
                  "genus",
                  "genushybrid",
                  "subgenus",
                  "section",
                  "subsection",
                  "complex",
                  "species",
                  "hybrid",
                  "subspecies",
                  "variety",
                  "form",
                  "infrahybrid"
                ]
              }
            },
            "name": "rank",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "site_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "cc-by",
                  "cc-by-nc",
                  "cc-by-nd",
                  "cc-by-sa",
                  "cc-by-nc-nd",
                  "cc-by-nc-sa",
                  "cc0"
                ]
              }
            },
            "name": "sound_license",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "taxon_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "without_taxon_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "taxon_name"
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "name": "user_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "name": "user_login",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "minimum": 0,
                "maximum": 23
              }
            },
            "name": "hour",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "minimum": 1,
                "maximum": 31
              }
            },
            "name": "day",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "minimum": 1,
                "maximum": 12
              }
            },
            "name": "month",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "year",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "minimum": 1,
                "maximum": 31
              }
            },
            "name": "created_day",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "minimum": 1,
                "maximum": 12
              }
            },
            "name": "created_month",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "created_year",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "term_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "term_value_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "without_term_value_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "term_id_or_unknown",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "name": "annotation_user_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "acc_above"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "acc_below"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "acc_below_or_unknown"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "d1"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "d2"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "created_d1"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "created_d2"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "created_on"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "observed_on"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "unobserved_by_user_id"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "apply_project_rules_for"
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "observation_accuracy_experiment_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "cs"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "csa"
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "LC",
                  "NT",
                  "VU",
                  "EN",
                  "CR",
                  "EW",
                  "EX"
                ]
              }
            },
            "name": "csi",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "obscured",
                  "obscured_private",
                  "open",
                  "private"
                ]
              }
            },
            "name": "geoprivacy",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "obscured",
                  "obscured_private",
                  "open",
                  "private"
                ]
              }
            },
            "name": "taxon_geoprivacy",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "obscured",
                  "private",
                  "none"
                ]
              }
            },
            "name": "obscuration",
            "description": "Filter by observations where the `geoprivacy` or `taxon_geoprivacy` match these values",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "kingdom",
                  "phylum",
                  "subphylum",
                  "superclass",
                  "class",
                  "subclass",
                  "infraclass",
                  "subterclass",
                  "superorder",
                  "order",
                  "suborder",
                  "infraorder",
                  "parvorder",
                  "zoosection",
                  "zoosubsection",
                  "superfamily",
                  "epifamily",
                  "family",
                  "subfamily",
                  "supertribe",
                  "tribe",
                  "subtribe",
                  "genus",
                  "genushybrid",
                  "subgenus",
                  "section",
                  "subsection",
                  "complex",
                  "species",
                  "hybrid",
                  "subspecies",
                  "variety",
                  "form",
                  "infrahybrid"
                ]
              }
            },
            "name": "hrank",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "kingdom",
                  "phylum",
                  "subphylum",
                  "superclass",
                  "class",
                  "subclass",
                  "infraclass",
                  "subterclass",
                  "superorder",
                  "order",
                  "suborder",
                  "infraorder",
                  "parvorder",
                  "zoosection",
                  "zoosubsection",
                  "superfamily",
                  "epifamily",
                  "family",
                  "subfamily",
                  "supertribe",
                  "tribe",
                  "subtribe",
                  "genus",
                  "genushybrid",
                  "subgenus",
                  "section",
                  "subsection",
                  "complex",
                  "species",
                  "hybrid",
                  "subspecies",
                  "variety",
                  "form",
                  "infrahybrid"
                ]
              }
            },
            "name": "lrank",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "Actinopterygii",
                  "Animalia",
                  "Amphibia",
                  "Arachnida",
                  "Aves",
                  "Chromista",
                  "Fungi",
                  "Insecta",
                  "Mammalia",
                  "Mollusca",
                  "Reptilia",
                  "Plantae",
                  "Protozoa",
                  "unknown"
                ]
              }
            },
            "name": "iconic_taxa",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "id_above"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "id_below"
          },
          {
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "most_agree",
                "most_disagree",
                "some_agree"
              ]
            },
            "name": "identifications",
            "description": "Filter by level of agreement among identifications:\n\n* **most_agree:** returns observations where there are more active identifications of taxa that agree with the Observation Taxon than active identifications that disagree with the Observation Taxon\n* **some_agree:** returns observations where there are some active identifications of taxa that agree with the Observation Taxon\n* **most_disagree:** returns observations where there are more active identifications of taxa that disagree with the Observation Taxon than active identifications that agree with the Observation Taxon"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "disagreements",
            "description": "Whether there is disagreement among active identifications"
          },
          {
            "in": "query",
            "schema": {
              "type": "number",
              "format": "float",
              "minimum": -90,
              "maximum": 90
            },
            "name": "lat"
          },
          {
            "in": "query",
            "schema": {
              "type": "number",
              "format": "float",
              "minimum": -180,
              "maximum": 180
            },
            "name": "lng"
          },
          {
            "in": "query",
            "schema": {
              "type": "number",
              "format": "float"
            },
            "name": "radius"
          },
          {
            "in": "query",
            "schema": {
              "type": "number",
              "format": "float",
              "minimum": -90,
              "maximum": 90
            },
            "name": "nelat"
          },
          {
            "in": "query",
            "schema": {
              "type": "number",
              "format": "float",
              "minimum": -180,
              "maximum": 180
            },
            "name": "nelng"
          },
          {
            "in": "query",
            "schema": {
              "type": "number",
              "format": "float",
              "minimum": -90,
              "maximum": 90
            },
            "name": "swlat"
          },
          {
            "in": "query",
            "schema": {
              "type": "number",
              "format": "float",
              "minimum": -180,
              "maximum": 180
            },
            "name": "swlng"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "list_id"
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "name": "not_in_project",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "not_matching_project_rules_for"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "q"
          },
          {
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "names",
                "tags",
                "description",
                "place",
                "taxon_page_obs_photos"
              ]
            },
            "name": "search_on"
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "casual",
                  "needs_id",
                  "research"
                ]
              }
            },
            "name": "quality_grade",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "without_field"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "outlink_source"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "updated_since"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "viewer_id"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "reviewed"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "expected_nearby"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "locale"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "preferred_place_id"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "ttl"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "page"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "per_page"
          },
          {
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "desc",
                "asc"
              ],
              "default": "desc"
            },
            "name": "order"
          },
          {
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "created_at",
                "geo_score",
                "id",
                "observed_on",
                "random",
                "species_guess",
                "updated_at",
                "votes"
              ],
              "default": "created_at"
            },
            "name": "order_by"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "only_id"
          },
          {
            "in": "query",
            "schema": {

            },
            "name": "fields",
            "description": "Attribute fields to return in the response",
            "example": "species_guess,observed_on"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "no_histograms"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "unannotated"
          },
          {
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "observed",
                "created"
              ],
              "default": "observed"
            },
            "name": "date_field"
          },
          {
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "month_of_year",
                "week_of_year"
              ],
              "default": "month_of_year"
            },
            "name": "interval"
          },
          {
            "in": "header",
            "schema": {
              "type": "string"
            },
            "name": "X-HTTP-Method-Override"
          }
        ],
        "responses": {
          "200": {
            "description": "An array of observation counts over time.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultsObservationsPopularFieldValues"
                }
              }
            }
          }
        }
      }
    },
    "/observations/observers": {
      "parameters": [],
      "get": {
        "tags": [
          "Observations"
        ],
        "summary": "Fetch observation observers",
        "security": [
          {
            "userJwtOptional": []
          }
        ],
        "x-default-ttl": 300,
        "parameters": [
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "acc",
            "description": "Filter by whether `positional_accuracy` is set or not"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "captive",
            "description": "Filter by captive / cultivated status"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "endemic",
            "description": "Filter by whether the observation is in a place with a check list entry indicating the establishment means is `endemic`"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "geo"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "id_please"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "identified"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "introduced"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "mappable"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "native"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "out_of_range"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "pcid",
            "deprecated": true
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "photos"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "popular"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "sounds"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "taxon_is_active"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "threatened",
            "description": "Filter by whether the observed taxon has a conservation status of \"threatened\" or worse"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "verifiable",
            "description": "Filter by whether observations are 'verifiable' (have quality grades `research` or `needs_id`)"
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "anyOf": [
                  {
                    "type": "string",
                    "format": "uuid"
                  },
                  {
                    "type": "integer"
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            },
            "name": "id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            },
            "name": "not_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "cc-by",
                  "cc-by-nc",
                  "cc-by-nd",
                  "cc-by-sa",
                  "cc-by-nc-nd",
                  "cc-by-nc-sa",
                  "cc0"
                ]
              }
            },
            "name": "license",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "cc-by",
                  "cc-by-nc",
                  "cc-by-nd",
                  "cc-by-sa",
                  "cc-by-nc-nd",
                  "cc-by-nc-sa",
                  "cc0"
                ]
              }
            },
            "name": "photo_license",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "licensed",
            "description": "Filter by observations where the license attribute is not null, i.e. it is licensed"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "photo_licensed",
            "description": "Filter by observations where the license attribute of at least one photo is not null"
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "anyOf": [
                  {
                    "type": "string",
                    "format": "uuid"
                  },
                  {
                    "type": "integer"
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            },
            "name": "place_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "anyOf": [
                  {
                    "type": "integer"
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            },
            "name": "project_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "coords_viewable_for_proj",
            "description": "Filter by observers who trust the project(s) specified in `project_id` OR trust the authenticated viewer"
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "kingdom",
                  "phylum",
                  "subphylum",
                  "superclass",
                  "class",
                  "subclass",
                  "infraclass",
                  "subterclass",
                  "superorder",
                  "order",
                  "suborder",
                  "infraorder",
                  "parvorder",
                  "zoosection",
                  "zoosubsection",
                  "superfamily",
                  "epifamily",
                  "family",
                  "subfamily",
                  "supertribe",
                  "tribe",
                  "subtribe",
                  "genus",
                  "genushybrid",
                  "subgenus",
                  "section",
                  "subsection",
                  "complex",
                  "species",
                  "hybrid",
                  "subspecies",
                  "variety",
                  "form",
                  "infrahybrid"
                ]
              }
            },
            "name": "rank",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "site_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "cc-by",
                  "cc-by-nc",
                  "cc-by-nd",
                  "cc-by-sa",
                  "cc-by-nc-nd",
                  "cc-by-nc-sa",
                  "cc0"
                ]
              }
            },
            "name": "sound_license",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "taxon_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "without_taxon_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "taxon_name"
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "name": "user_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "name": "user_login",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "minimum": 0,
                "maximum": 23
              }
            },
            "name": "hour",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "minimum": 1,
                "maximum": 31
              }
            },
            "name": "day",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "minimum": 1,
                "maximum": 12
              }
            },
            "name": "month",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "year",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "minimum": 1,
                "maximum": 31
              }
            },
            "name": "created_day",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "minimum": 1,
                "maximum": 12
              }
            },
            "name": "created_month",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "created_year",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "term_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "term_value_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "without_term_value_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "term_id_or_unknown",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "name": "annotation_user_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "acc_above"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "acc_below"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "acc_below_or_unknown"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "d1"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "d2"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "created_d1"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "created_d2"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "created_on"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "observed_on"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "unobserved_by_user_id"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "apply_project_rules_for"
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "observation_accuracy_experiment_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "cs"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "csa"
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "LC",
                  "NT",
                  "VU",
                  "EN",
                  "CR",
                  "EW",
                  "EX"
                ]
              }
            },
            "name": "csi",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "obscured",
                  "obscured_private",
                  "open",
                  "private"
                ]
              }
            },
            "name": "geoprivacy",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "obscured",
                  "obscured_private",
                  "open",
                  "private"
                ]
              }
            },
            "name": "taxon_geoprivacy",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "obscured",
                  "private",
                  "none"
                ]
              }
            },
            "name": "obscuration",
            "description": "Filter by observations where the `geoprivacy` or `taxon_geoprivacy` match these values",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "kingdom",
                  "phylum",
                  "subphylum",
                  "superclass",
                  "class",
                  "subclass",
                  "infraclass",
                  "subterclass",
                  "superorder",
                  "order",
                  "suborder",
                  "infraorder",
                  "parvorder",
                  "zoosection",
                  "zoosubsection",
                  "superfamily",
                  "epifamily",
                  "family",
                  "subfamily",
                  "supertribe",
                  "tribe",
                  "subtribe",
                  "genus",
                  "genushybrid",
                  "subgenus",
                  "section",
                  "subsection",
                  "complex",
                  "species",
                  "hybrid",
                  "subspecies",
                  "variety",
                  "form",
                  "infrahybrid"
                ]
              }
            },
            "name": "hrank",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "kingdom",
                  "phylum",
                  "subphylum",
                  "superclass",
                  "class",
                  "subclass",
                  "infraclass",
                  "subterclass",
                  "superorder",
                  "order",
                  "suborder",
                  "infraorder",
                  "parvorder",
                  "zoosection",
                  "zoosubsection",
                  "superfamily",
                  "epifamily",
                  "family",
                  "subfamily",
                  "supertribe",
                  "tribe",
                  "subtribe",
                  "genus",
                  "genushybrid",
                  "subgenus",
                  "section",
                  "subsection",
                  "complex",
                  "species",
                  "hybrid",
                  "subspecies",
                  "variety",
                  "form",
                  "infrahybrid"
                ]
              }
            },
            "name": "lrank",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "Actinopterygii",
                  "Animalia",
                  "Amphibia",
                  "Arachnida",
                  "Aves",
                  "Chromista",
                  "Fungi",
                  "Insecta",
                  "Mammalia",
                  "Mollusca",
                  "Reptilia",
                  "Plantae",
                  "Protozoa",
                  "unknown"
                ]
              }
            },
            "name": "iconic_taxa",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "id_above"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "id_below"
          },
          {
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "most_agree",
                "most_disagree",
                "some_agree"
              ]
            },
            "name": "identifications",
            "description": "Filter by level of agreement among identifications:\n\n* **most_agree:** returns observations where there are more active identifications of taxa that agree with the Observation Taxon than active identifications that disagree with the Observation Taxon\n* **some_agree:** returns observations where there are some active identifications of taxa that agree with the Observation Taxon\n* **most_disagree:** returns observations where there are more active identifications of taxa that disagree with the Observation Taxon than active identifications that agree with the Observation Taxon"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "disagreements",
            "description": "Whether there is disagreement among active identifications"
          },
          {
            "in": "query",
            "schema": {
              "type": "number",
              "format": "float",
              "minimum": -90,
              "maximum": 90
            },
            "name": "lat"
          },
          {
            "in": "query",
            "schema": {
              "type": "number",
              "format": "float",
              "minimum": -180,
              "maximum": 180
            },
            "name": "lng"
          },
          {
            "in": "query",
            "schema": {
              "type": "number",
              "format": "float"
            },
            "name": "radius"
          },
          {
            "in": "query",
            "schema": {
              "type": "number",
              "format": "float",
              "minimum": -90,
              "maximum": 90
            },
            "name": "nelat"
          },
          {
            "in": "query",
            "schema": {
              "type": "number",
              "format": "float",
              "minimum": -180,
              "maximum": 180
            },
            "name": "nelng"
          },
          {
            "in": "query",
            "schema": {
              "type": "number",
              "format": "float",
              "minimum": -90,
              "maximum": 90
            },
            "name": "swlat"
          },
          {
            "in": "query",
            "schema": {
              "type": "number",
              "format": "float",
              "minimum": -180,
              "maximum": 180
            },
            "name": "swlng"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "list_id"
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "name": "not_in_project",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "not_matching_project_rules_for"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "q"
          },
          {
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "names",
                "tags",
                "description",
                "place",
                "taxon_page_obs_photos"
              ]
            },
            "name": "search_on"
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "casual",
                  "needs_id",
                  "research"
                ]
              }
            },
            "name": "quality_grade",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "without_field"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "outlink_source"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "updated_since"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "viewer_id"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "reviewed"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "expected_nearby"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "locale"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "preferred_place_id"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "ttl"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "page"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "per_page"
          },
          {
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "desc",
                "asc"
              ],
              "default": "desc"
            },
            "name": "order"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "only_id"
          },
          {
            "in": "query",
            "schema": {

            },
            "name": "fields",
            "description": "Attribute fields to return in the response",
            "example": "species_guess,observed_on"
          },
          {
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "observation_count",
                "species_count"
              ],
              "default": "observation_count"
            },
            "name": "order_by"
          },
          {
            "in": "header",
            "schema": {
              "type": "string"
            },
            "name": "X-HTTP-Method-Override"
          }
        ],
        "responses": {
          "200": {
            "description": "An array of users with counts.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultsObservationsObservers"
                }
              }
            }
          }
        }
      }
    },
    "/observations/identifiers": {
      "parameters": [],
      "get": {
        "tags": [
          "Observations"
        ],
        "summary": "Fetch observation identifiers",
        "security": [
          {
            "userJwtOptional": []
          }
        ],
        "x-default-ttl": 300,
        "parameters": [
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "acc",
            "description": "Filter by whether `positional_accuracy` is set or not"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "captive",
            "description": "Filter by captive / cultivated status"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "endemic",
            "description": "Filter by whether the observation is in a place with a check list entry indicating the establishment means is `endemic`"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "geo"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "id_please"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "identified"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "introduced"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "mappable"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "native"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "out_of_range"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "pcid",
            "deprecated": true
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "photos"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "popular"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "sounds"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "taxon_is_active"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "threatened",
            "description": "Filter by whether the observed taxon has a conservation status of \"threatened\" or worse"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "verifiable",
            "description": "Filter by whether observations are 'verifiable' (have quality grades `research` or `needs_id`)"
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "anyOf": [
                  {
                    "type": "string",
                    "format": "uuid"
                  },
                  {
                    "type": "integer"
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            },
            "name": "id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            },
            "name": "not_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "cc-by",
                  "cc-by-nc",
                  "cc-by-nd",
                  "cc-by-sa",
                  "cc-by-nc-nd",
                  "cc-by-nc-sa",
                  "cc0"
                ]
              }
            },
            "name": "license",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "cc-by",
                  "cc-by-nc",
                  "cc-by-nd",
                  "cc-by-sa",
                  "cc-by-nc-nd",
                  "cc-by-nc-sa",
                  "cc0"
                ]
              }
            },
            "name": "photo_license",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "licensed",
            "description": "Filter by observations where the license attribute is not null, i.e. it is licensed"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "photo_licensed",
            "description": "Filter by observations where the license attribute of at least one photo is not null"
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "anyOf": [
                  {
                    "type": "string",
                    "format": "uuid"
                  },
                  {
                    "type": "integer"
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            },
            "name": "place_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "anyOf": [
                  {
                    "type": "integer"
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            },
            "name": "project_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "coords_viewable_for_proj",
            "description": "Filter by observers who trust the project(s) specified in `project_id` OR trust the authenticated viewer"
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "kingdom",
                  "phylum",
                  "subphylum",
                  "superclass",
                  "class",
                  "subclass",
                  "infraclass",
                  "subterclass",
                  "superorder",
                  "order",
                  "suborder",
                  "infraorder",
                  "parvorder",
                  "zoosection",
                  "zoosubsection",
                  "superfamily",
                  "epifamily",
                  "family",
                  "subfamily",
                  "supertribe",
                  "tribe",
                  "subtribe",
                  "genus",
                  "genushybrid",
                  "subgenus",
                  "section",
                  "subsection",
                  "complex",
                  "species",
                  "hybrid",
                  "subspecies",
                  "variety",
                  "form",
                  "infrahybrid"
                ]
              }
            },
            "name": "rank",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "site_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "cc-by",
                  "cc-by-nc",
                  "cc-by-nd",
                  "cc-by-sa",
                  "cc-by-nc-nd",
                  "cc-by-nc-sa",
                  "cc0"
                ]
              }
            },
            "name": "sound_license",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "taxon_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "without_taxon_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "taxon_name"
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "name": "user_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "name": "user_login",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "minimum": 0,
                "maximum": 23
              }
            },
            "name": "hour",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "minimum": 1,
                "maximum": 31
              }
            },
            "name": "day",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "minimum": 1,
                "maximum": 12
              }
            },
            "name": "month",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "year",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "minimum": 1,
                "maximum": 31
              }
            },
            "name": "created_day",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "minimum": 1,
                "maximum": 12
              }
            },
            "name": "created_month",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "created_year",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "term_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "term_value_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "without_term_value_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "term_id_or_unknown",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "name": "annotation_user_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "acc_above"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "acc_below"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "acc_below_or_unknown"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "d1"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "d2"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "created_d1"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "created_d2"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "created_on"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "observed_on"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "unobserved_by_user_id"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "apply_project_rules_for"
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "observation_accuracy_experiment_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "cs"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "csa"
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "LC",
                  "NT",
                  "VU",
                  "EN",
                  "CR",
                  "EW",
                  "EX"
                ]
              }
            },
            "name": "csi",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "obscured",
                  "obscured_private",
                  "open",
                  "private"
                ]
              }
            },
            "name": "geoprivacy",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "obscured",
                  "obscured_private",
                  "open",
                  "private"
                ]
              }
            },
            "name": "taxon_geoprivacy",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "obscured",
                  "private",
                  "none"
                ]
              }
            },
            "name": "obscuration",
            "description": "Filter by observations where the `geoprivacy` or `taxon_geoprivacy` match these values",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "kingdom",
                  "phylum",
                  "subphylum",
                  "superclass",
                  "class",
                  "subclass",
                  "infraclass",
                  "subterclass",
                  "superorder",
                  "order",
                  "suborder",
                  "infraorder",
                  "parvorder",
                  "zoosection",
                  "zoosubsection",
                  "superfamily",
                  "epifamily",
                  "family",
                  "subfamily",
                  "supertribe",
                  "tribe",
                  "subtribe",
                  "genus",
                  "genushybrid",
                  "subgenus",
                  "section",
                  "subsection",
                  "complex",
                  "species",
                  "hybrid",
                  "subspecies",
                  "variety",
                  "form",
                  "infrahybrid"
                ]
              }
            },
            "name": "hrank",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "kingdom",
                  "phylum",
                  "subphylum",
                  "superclass",
                  "class",
                  "subclass",
                  "infraclass",
                  "subterclass",
                  "superorder",
                  "order",
                  "suborder",
                  "infraorder",
                  "parvorder",
                  "zoosection",
                  "zoosubsection",
                  "superfamily",
                  "epifamily",
                  "family",
                  "subfamily",
                  "supertribe",
                  "tribe",
                  "subtribe",
                  "genus",
                  "genushybrid",
                  "subgenus",
                  "section",
                  "subsection",
                  "complex",
                  "species",
                  "hybrid",
                  "subspecies",
                  "variety",
                  "form",
                  "infrahybrid"
                ]
              }
            },
            "name": "lrank",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "Actinopterygii",
                  "Animalia",
                  "Amphibia",
                  "Arachnida",
                  "Aves",
                  "Chromista",
                  "Fungi",
                  "Insecta",
                  "Mammalia",
                  "Mollusca",
                  "Reptilia",
                  "Plantae",
                  "Protozoa",
                  "unknown"
                ]
              }
            },
            "name": "iconic_taxa",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "id_above"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "id_below"
          },
          {
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "most_agree",
                "most_disagree",
                "some_agree"
              ]
            },
            "name": "identifications",
            "description": "Filter by level of agreement among identifications:\n\n* **most_agree:** returns observations where there are more active identifications of taxa that agree with the Observation Taxon than active identifications that disagree with the Observation Taxon\n* **some_agree:** returns observations where there are some active identifications of taxa that agree with the Observation Taxon\n* **most_disagree:** returns observations where there are more active identifications of taxa that disagree with the Observation Taxon than active identifications that agree with the Observation Taxon"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "disagreements",
            "description": "Whether there is disagreement among active identifications"
          },
          {
            "in": "query",
            "schema": {
              "type": "number",
              "format": "float",
              "minimum": -90,
              "maximum": 90
            },
            "name": "lat"
          },
          {
            "in": "query",
            "schema": {
              "type": "number",
              "format": "float",
              "minimum": -180,
              "maximum": 180
            },
            "name": "lng"
          },
          {
            "in": "query",
            "schema": {
              "type": "number",
              "format": "float"
            },
            "name": "radius"
          },
          {
            "in": "query",
            "schema": {
              "type": "number",
              "format": "float",
              "minimum": -90,
              "maximum": 90
            },
            "name": "nelat"
          },
          {
            "in": "query",
            "schema": {
              "type": "number",
              "format": "float",
              "minimum": -180,
              "maximum": 180
            },
            "name": "nelng"
          },
          {
            "in": "query",
            "schema": {
              "type": "number",
              "format": "float",
              "minimum": -90,
              "maximum": 90
            },
            "name": "swlat"
          },
          {
            "in": "query",
            "schema": {
              "type": "number",
              "format": "float",
              "minimum": -180,
              "maximum": 180
            },
            "name": "swlng"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "list_id"
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "name": "not_in_project",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "not_matching_project_rules_for"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "q"
          },
          {
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "names",
                "tags",
                "description",
                "place",
                "taxon_page_obs_photos"
              ]
            },
            "name": "search_on"
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "casual",
                  "needs_id",
                  "research"
                ]
              }
            },
            "name": "quality_grade",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "without_field"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "outlink_source"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "updated_since"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "viewer_id"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "reviewed"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "expected_nearby"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "locale"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "preferred_place_id"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "ttl"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "page"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "per_page"
          },
          {
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "desc",
                "asc"
              ],
              "default": "desc"
            },
            "name": "order"
          },
          {
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "created_at",
                "geo_score",
                "id",
                "observed_on",
                "random",
                "species_guess",
                "updated_at",
                "votes"
              ],
              "default": "created_at"
            },
            "name": "order_by"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "only_id"
          },
          {
            "in": "query",
            "schema": {

            },
            "name": "fields",
            "description": "Attribute fields to return in the response",
            "example": "species_guess,observed_on"
          },
          {
            "in": "header",
            "schema": {
              "type": "string"
            },
            "name": "X-HTTP-Method-Override"
          }
        ],
        "responses": {
          "200": {
            "description": "An array of users with counts.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultsObservationsIdentifiers"
                }
              }
            }
          }
        }
      }
    },
    "/observations/identification_categories": {
      "parameters": [],
      "get": {
        "tags": [
          "Observations"
        ],
        "summary": "Fetch observation identification category counts",
        "security": [
          {
            "userJwtOptional": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "fields"
          },
          {
            "in": "header",
            "schema": {
              "type": "string"
            },
            "name": "X-HTTP-Method-Override"
          }
        ],
        "responses": {
          "200": {
            "description": "An array of identification categories and counts.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultsObservationsIdentificationCategories"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/observations/iconic_taxa_species_counts": {
      "parameters": [],
      "get": {
        "tags": [
          "Observations"
        ],
        "summary": "Fetch observation iconic taxon species counts",
        "security": [
          {
            "userJwtOptional": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "acc",
            "description": "Filter by whether `positional_accuracy` is set or not"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "captive",
            "description": "Filter by captive / cultivated status"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "endemic",
            "description": "Filter by whether the observation is in a place with a check list entry indicating the establishment means is `endemic`"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "geo"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "id_please"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "identified"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "introduced"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "mappable"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "native"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "out_of_range"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "pcid",
            "deprecated": true
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "photos"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "popular"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "sounds"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "taxon_is_active"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "threatened",
            "description": "Filter by whether the observed taxon has a conservation status of \"threatened\" or worse"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "verifiable",
            "description": "Filter by whether observations are 'verifiable' (have quality grades `research` or `needs_id`)"
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "anyOf": [
                  {
                    "type": "string",
                    "format": "uuid"
                  },
                  {
                    "type": "integer"
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            },
            "name": "id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            },
            "name": "not_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "cc-by",
                  "cc-by-nc",
                  "cc-by-nd",
                  "cc-by-sa",
                  "cc-by-nc-nd",
                  "cc-by-nc-sa",
                  "cc0"
                ]
              }
            },
            "name": "license",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "cc-by",
                  "cc-by-nc",
                  "cc-by-nd",
                  "cc-by-sa",
                  "cc-by-nc-nd",
                  "cc-by-nc-sa",
                  "cc0"
                ]
              }
            },
            "name": "photo_license",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "licensed",
            "description": "Filter by observations where the license attribute is not null, i.e. it is licensed"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "photo_licensed",
            "description": "Filter by observations where the license attribute of at least one photo is not null"
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "anyOf": [
                  {
                    "type": "string",
                    "format": "uuid"
                  },
                  {
                    "type": "integer"
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            },
            "name": "place_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "anyOf": [
                  {
                    "type": "integer"
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            },
            "name": "project_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "coords_viewable_for_proj",
            "description": "Filter by observers who trust the project(s) specified in `project_id` OR trust the authenticated viewer"
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "kingdom",
                  "phylum",
                  "subphylum",
                  "superclass",
                  "class",
                  "subclass",
                  "infraclass",
                  "subterclass",
                  "superorder",
                  "order",
                  "suborder",
                  "infraorder",
                  "parvorder",
                  "zoosection",
                  "zoosubsection",
                  "superfamily",
                  "epifamily",
                  "family",
                  "subfamily",
                  "supertribe",
                  "tribe",
                  "subtribe",
                  "genus",
                  "genushybrid",
                  "subgenus",
                  "section",
                  "subsection",
                  "complex",
                  "species",
                  "hybrid",
                  "subspecies",
                  "variety",
                  "form",
                  "infrahybrid"
                ]
              }
            },
            "name": "rank",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "site_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "cc-by",
                  "cc-by-nc",
                  "cc-by-nd",
                  "cc-by-sa",
                  "cc-by-nc-nd",
                  "cc-by-nc-sa",
                  "cc0"
                ]
              }
            },
            "name": "sound_license",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "taxon_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "without_taxon_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "taxon_name"
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "name": "user_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "name": "user_login",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "minimum": 0,
                "maximum": 23
              }
            },
            "name": "hour",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "minimum": 1,
                "maximum": 31
              }
            },
            "name": "day",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "minimum": 1,
                "maximum": 12
              }
            },
            "name": "month",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "year",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "minimum": 1,
                "maximum": 31
              }
            },
            "name": "created_day",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "minimum": 1,
                "maximum": 12
              }
            },
            "name": "created_month",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "created_year",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "term_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "term_value_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "without_term_value_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "term_id_or_unknown",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "name": "annotation_user_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "acc_above"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "acc_below"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "acc_below_or_unknown"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "d1"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "d2"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "created_d1"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "created_d2"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "created_on"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "observed_on"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "unobserved_by_user_id"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "apply_project_rules_for"
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "observation_accuracy_experiment_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "cs"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "csa"
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "LC",
                  "NT",
                  "VU",
                  "EN",
                  "CR",
                  "EW",
                  "EX"
                ]
              }
            },
            "name": "csi",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "obscured",
                  "obscured_private",
                  "open",
                  "private"
                ]
              }
            },
            "name": "geoprivacy",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "obscured",
                  "obscured_private",
                  "open",
                  "private"
                ]
              }
            },
            "name": "taxon_geoprivacy",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "obscured",
                  "private",
                  "none"
                ]
              }
            },
            "name": "obscuration",
            "description": "Filter by observations where the `geoprivacy` or `taxon_geoprivacy` match these values",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "kingdom",
                  "phylum",
                  "subphylum",
                  "superclass",
                  "class",
                  "subclass",
                  "infraclass",
                  "subterclass",
                  "superorder",
                  "order",
                  "suborder",
                  "infraorder",
                  "parvorder",
                  "zoosection",
                  "zoosubsection",
                  "superfamily",
                  "epifamily",
                  "family",
                  "subfamily",
                  "supertribe",
                  "tribe",
                  "subtribe",
                  "genus",
                  "genushybrid",
                  "subgenus",
                  "section",
                  "subsection",
                  "complex",
                  "species",
                  "hybrid",
                  "subspecies",
                  "variety",
                  "form",
                  "infrahybrid"
                ]
              }
            },
            "name": "hrank",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "kingdom",
                  "phylum",
                  "subphylum",
                  "superclass",
                  "class",
                  "subclass",
                  "infraclass",
                  "subterclass",
                  "superorder",
                  "order",
                  "suborder",
                  "infraorder",
                  "parvorder",
                  "zoosection",
                  "zoosubsection",
                  "superfamily",
                  "epifamily",
                  "family",
                  "subfamily",
                  "supertribe",
                  "tribe",
                  "subtribe",
                  "genus",
                  "genushybrid",
                  "subgenus",
                  "section",
                  "subsection",
                  "complex",
                  "species",
                  "hybrid",
                  "subspecies",
                  "variety",
                  "form",
                  "infrahybrid"
                ]
              }
            },
            "name": "lrank",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "Actinopterygii",
                  "Animalia",
                  "Amphibia",
                  "Arachnida",
                  "Aves",
                  "Chromista",
                  "Fungi",
                  "Insecta",
                  "Mammalia",
                  "Mollusca",
                  "Reptilia",
                  "Plantae",
                  "Protozoa",
                  "unknown"
                ]
              }
            },
            "name": "iconic_taxa",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "id_above"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "id_below"
          },
          {
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "most_agree",
                "most_disagree",
                "some_agree"
              ]
            },
            "name": "identifications",
            "description": "Filter by level of agreement among identifications:\n\n* **most_agree:** returns observations where there are more active identifications of taxa that agree with the Observation Taxon than active identifications that disagree with the Observation Taxon\n* **some_agree:** returns observations where there are some active identifications of taxa that agree with the Observation Taxon\n* **most_disagree:** returns observations where there are more active identifications of taxa that disagree with the Observation Taxon than active identifications that agree with the Observation Taxon"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "disagreements",
            "description": "Whether there is disagreement among active identifications"
          },
          {
            "in": "query",
            "schema": {
              "type": "number",
              "format": "float",
              "minimum": -90,
              "maximum": 90
            },
            "name": "lat"
          },
          {
            "in": "query",
            "schema": {
              "type": "number",
              "format": "float",
              "minimum": -180,
              "maximum": 180
            },
            "name": "lng"
          },
          {
            "in": "query",
            "schema": {
              "type": "number",
              "format": "float"
            },
            "name": "radius"
          },
          {
            "in": "query",
            "schema": {
              "type": "number",
              "format": "float",
              "minimum": -90,
              "maximum": 90
            },
            "name": "nelat"
          },
          {
            "in": "query",
            "schema": {
              "type": "number",
              "format": "float",
              "minimum": -180,
              "maximum": 180
            },
            "name": "nelng"
          },
          {
            "in": "query",
            "schema": {
              "type": "number",
              "format": "float",
              "minimum": -90,
              "maximum": 90
            },
            "name": "swlat"
          },
          {
            "in": "query",
            "schema": {
              "type": "number",
              "format": "float",
              "minimum": -180,
              "maximum": 180
            },
            "name": "swlng"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "list_id"
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "name": "not_in_project",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "not_matching_project_rules_for"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "q"
          },
          {
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "names",
                "tags",
                "description",
                "place",
                "taxon_page_obs_photos"
              ]
            },
            "name": "search_on"
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "casual",
                  "needs_id",
                  "research"
                ]
              }
            },
            "name": "quality_grade",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "without_field"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "outlink_source"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "updated_since"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "viewer_id"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "reviewed"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "expected_nearby"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "locale"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "preferred_place_id"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "ttl"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "page"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "per_page"
          },
          {
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "desc",
                "asc"
              ],
              "default": "desc"
            },
            "name": "order"
          },
          {
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "created_at",
                "geo_score",
                "id",
                "observed_on",
                "random",
                "species_guess",
                "updated_at",
                "votes"
              ],
              "default": "created_at"
            },
            "name": "order_by"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "only_id"
          },
          {
            "in": "query",
            "schema": {

            },
            "name": "fields",
            "description": "Attribute fields to return in the response",
            "example": "species_guess,observed_on"
          },
          {
            "in": "header",
            "schema": {
              "type": "string"
            },
            "name": "X-HTTP-Method-Override"
          }
        ],
        "responses": {
          "200": {
            "description": "An array of iconic taxon species counts.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultsObservationsSpeciesCounts"
                }
              }
            }
          }
        }
      }
    },
    "/observations/histogram": {
      "parameters": [],
      "get": {
        "tags": [
          "Observations"
        ],
        "summary": "Fetch observation histograms",
        "security": [
          {
            "userJwtOptional": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "acc",
            "description": "Filter by whether `positional_accuracy` is set or not"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "captive",
            "description": "Filter by captive / cultivated status"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "endemic",
            "description": "Filter by whether the observation is in a place with a check list entry indicating the establishment means is `endemic`"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "geo"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "id_please"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "identified"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "introduced"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "mappable"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "native"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "out_of_range"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "pcid",
            "deprecated": true
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "photos"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "popular"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "sounds"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "taxon_is_active"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "threatened",
            "description": "Filter by whether the observed taxon has a conservation status of \"threatened\" or worse"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "verifiable",
            "description": "Filter by whether observations are 'verifiable' (have quality grades `research` or `needs_id`)"
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "anyOf": [
                  {
                    "type": "string",
                    "format": "uuid"
                  },
                  {
                    "type": "integer"
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            },
            "name": "id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            },
            "name": "not_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "cc-by",
                  "cc-by-nc",
                  "cc-by-nd",
                  "cc-by-sa",
                  "cc-by-nc-nd",
                  "cc-by-nc-sa",
                  "cc0"
                ]
              }
            },
            "name": "license",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "cc-by",
                  "cc-by-nc",
                  "cc-by-nd",
                  "cc-by-sa",
                  "cc-by-nc-nd",
                  "cc-by-nc-sa",
                  "cc0"
                ]
              }
            },
            "name": "photo_license",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "licensed",
            "description": "Filter by observations where the license attribute is not null, i.e. it is licensed"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "photo_licensed",
            "description": "Filter by observations where the license attribute of at least one photo is not null"
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "anyOf": [
                  {
                    "type": "string",
                    "format": "uuid"
                  },
                  {
                    "type": "integer"
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            },
            "name": "place_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "anyOf": [
                  {
                    "type": "integer"
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            },
            "name": "project_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "coords_viewable_for_proj",
            "description": "Filter by observers who trust the project(s) specified in `project_id` OR trust the authenticated viewer"
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "kingdom",
                  "phylum",
                  "subphylum",
                  "superclass",
                  "class",
                  "subclass",
                  "infraclass",
                  "subterclass",
                  "superorder",
                  "order",
                  "suborder",
                  "infraorder",
                  "parvorder",
                  "zoosection",
                  "zoosubsection",
                  "superfamily",
                  "epifamily",
                  "family",
                  "subfamily",
                  "supertribe",
                  "tribe",
                  "subtribe",
                  "genus",
                  "genushybrid",
                  "subgenus",
                  "section",
                  "subsection",
                  "complex",
                  "species",
                  "hybrid",
                  "subspecies",
                  "variety",
                  "form",
                  "infrahybrid"
                ]
              }
            },
            "name": "rank",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "site_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "cc-by",
                  "cc-by-nc",
                  "cc-by-nd",
                  "cc-by-sa",
                  "cc-by-nc-nd",
                  "cc-by-nc-sa",
                  "cc0"
                ]
              }
            },
            "name": "sound_license",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "taxon_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "without_taxon_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "taxon_name"
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "name": "user_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "name": "user_login",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "minimum": 0,
                "maximum": 23
              }
            },
            "name": "hour",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "minimum": 1,
                "maximum": 31
              }
            },
            "name": "day",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "minimum": 1,
                "maximum": 12
              }
            },
            "name": "month",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "year",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "minimum": 1,
                "maximum": 31
              }
            },
            "name": "created_day",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "minimum": 1,
                "maximum": 12
              }
            },
            "name": "created_month",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "created_year",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "term_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "term_value_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "without_term_value_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "term_id_or_unknown",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "name": "annotation_user_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "acc_above"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "acc_below"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "acc_below_or_unknown"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "d1"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "d2"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "created_d1"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "created_d2"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "created_on"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "observed_on"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "unobserved_by_user_id"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "apply_project_rules_for"
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "observation_accuracy_experiment_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "cs"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "csa"
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "LC",
                  "NT",
                  "VU",
                  "EN",
                  "CR",
                  "EW",
                  "EX"
                ]
              }
            },
            "name": "csi",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "obscured",
                  "obscured_private",
                  "open",
                  "private"
                ]
              }
            },
            "name": "geoprivacy",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "obscured",
                  "obscured_private",
                  "open",
                  "private"
                ]
              }
            },
            "name": "taxon_geoprivacy",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "obscured",
                  "private",
                  "none"
                ]
              }
            },
            "name": "obscuration",
            "description": "Filter by observations where the `geoprivacy` or `taxon_geoprivacy` match these values",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "kingdom",
                  "phylum",
                  "subphylum",
                  "superclass",
                  "class",
                  "subclass",
                  "infraclass",
                  "subterclass",
                  "superorder",
                  "order",
                  "suborder",
                  "infraorder",
                  "parvorder",
                  "zoosection",
                  "zoosubsection",
                  "superfamily",
                  "epifamily",
                  "family",
                  "subfamily",
                  "supertribe",
                  "tribe",
                  "subtribe",
                  "genus",
                  "genushybrid",
                  "subgenus",
                  "section",
                  "subsection",
                  "complex",
                  "species",
                  "hybrid",
                  "subspecies",
                  "variety",
                  "form",
                  "infrahybrid"
                ]
              }
            },
            "name": "hrank",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "kingdom",
                  "phylum",
                  "subphylum",
                  "superclass",
                  "class",
                  "subclass",
                  "infraclass",
                  "subterclass",
                  "superorder",
                  "order",
                  "suborder",
                  "infraorder",
                  "parvorder",
                  "zoosection",
                  "zoosubsection",
                  "superfamily",
                  "epifamily",
                  "family",
                  "subfamily",
                  "supertribe",
                  "tribe",
                  "subtribe",
                  "genus",
                  "genushybrid",
                  "subgenus",
                  "section",
                  "subsection",
                  "complex",
                  "species",
                  "hybrid",
                  "subspecies",
                  "variety",
                  "form",
                  "infrahybrid"
                ]
              }
            },
            "name": "lrank",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "Actinopterygii",
                  "Animalia",
                  "Amphibia",
                  "Arachnida",
                  "Aves",
                  "Chromista",
                  "Fungi",
                  "Insecta",
                  "Mammalia",
                  "Mollusca",
                  "Reptilia",
                  "Plantae",
                  "Protozoa",
                  "unknown"
                ]
              }
            },
            "name": "iconic_taxa",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "id_above"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "id_below"
          },
          {
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "most_agree",
                "most_disagree",
                "some_agree"
              ]
            },
            "name": "identifications",
            "description": "Filter by level of agreement among identifications:\n\n* **most_agree:** returns observations where there are more active identifications of taxa that agree with the Observation Taxon than active identifications that disagree with the Observation Taxon\n* **some_agree:** returns observations where there are some active identifications of taxa that agree with the Observation Taxon\n* **most_disagree:** returns observations where there are more active identifications of taxa that disagree with the Observation Taxon than active identifications that agree with the Observation Taxon"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "disagreements",
            "description": "Whether there is disagreement among active identifications"
          },
          {
            "in": "query",
            "schema": {
              "type": "number",
              "format": "float",
              "minimum": -90,
              "maximum": 90
            },
            "name": "lat"
          },
          {
            "in": "query",
            "schema": {
              "type": "number",
              "format": "float",
              "minimum": -180,
              "maximum": 180
            },
            "name": "lng"
          },
          {
            "in": "query",
            "schema": {
              "type": "number",
              "format": "float"
            },
            "name": "radius"
          },
          {
            "in": "query",
            "schema": {
              "type": "number",
              "format": "float",
              "minimum": -90,
              "maximum": 90
            },
            "name": "nelat"
          },
          {
            "in": "query",
            "schema": {
              "type": "number",
              "format": "float",
              "minimum": -180,
              "maximum": 180
            },
            "name": "nelng"
          },
          {
            "in": "query",
            "schema": {
              "type": "number",
              "format": "float",
              "minimum": -90,
              "maximum": 90
            },
            "name": "swlat"
          },
          {
            "in": "query",
            "schema": {
              "type": "number",
              "format": "float",
              "minimum": -180,
              "maximum": 180
            },
            "name": "swlng"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "list_id"
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "name": "not_in_project",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "not_matching_project_rules_for"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "q"
          },
          {
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "names",
                "tags",
                "description",
                "place",
                "taxon_page_obs_photos"
              ]
            },
            "name": "search_on"
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "casual",
                  "needs_id",
                  "research"
                ]
              }
            },
            "name": "quality_grade",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "without_field"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "outlink_source"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "updated_since"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "viewer_id"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "reviewed"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "expected_nearby"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "locale"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "preferred_place_id"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "ttl"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "page"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "per_page"
          },
          {
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "desc",
                "asc"
              ],
              "default": "desc"
            },
            "name": "order"
          },
          {
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "created_at",
                "geo_score",
                "id",
                "observed_on",
                "random",
                "species_guess",
                "updated_at",
                "votes"
              ],
              "default": "created_at"
            },
            "name": "order_by"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "only_id"
          },
          {
            "in": "query",
            "schema": {

            },
            "name": "fields",
            "description": "Attribute fields to return in the response",
            "example": "species_guess,observed_on"
          },
          {
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "observed",
                "created"
              ],
              "default": "observed"
            },
            "name": "date_field"
          },
          {
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "year",
                "month",
                "week",
                "day",
                "hour",
                "month_of_year",
                "week_of_year"
              ],
              "default": "month_of_year"
            },
            "name": "interval"
          },
          {
            "in": "header",
            "schema": {
              "type": "string"
            },
            "name": "X-HTTP-Method-Override"
          }
        ],
        "responses": {
          "200": {
            "description": "An object with observation counts over time.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultsObservationsHistogram"
                }
              }
            }
          }
        }
      }
    },
    "/observations/deleted": {
      "parameters": [],
      "get": {
        "tags": [
          "Observations"
        ],
        "summary": "Fetch IDs of observations deleted by the authenticated user",
        "security": [
          {
            "userJwtRequired": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "schema": {

            },
            "name": "fields"
          },
          {
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "name": "since",
            "required": true
          },
          {
            "in": "header",
            "schema": {
              "type": "string"
            },
            "name": "X-HTTP-Method-Override"
          }
        ],
        "responses": {
          "200": {
            "description": "An array of observation IDs",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultsObservationsDeleted"
                }
              }
            }
          }
        }
      }
    },
    "/observations": {
      "parameters": [],
      "get": {
        "tags": [
          "Observations"
        ],
        "summary": "Search observations",
        "security": [
          {
            "userJwtOptional": []
          }
        ],
        "x-default-ttl": 300,
        "parameters": [
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "acc",
            "description": "Filter by whether `positional_accuracy` is set or not"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "captive",
            "description": "Filter by captive / cultivated status"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "endemic",
            "description": "Filter by whether the observation is in a place with a check list entry indicating the establishment means is `endemic`"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "geo"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "id_please"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "identified"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "introduced"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "mappable"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "native"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "out_of_range"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "pcid",
            "deprecated": true
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "photos"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "popular"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "sounds"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "taxon_is_active"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "threatened",
            "description": "Filter by whether the observed taxon has a conservation status of \"threatened\" or worse"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "verifiable",
            "description": "Filter by whether observations are 'verifiable' (have quality grades `research` or `needs_id`)"
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "anyOf": [
                  {
                    "type": "string",
                    "format": "uuid"
                  },
                  {
                    "type": "integer"
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            },
            "name": "id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            },
            "name": "not_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "cc-by",
                  "cc-by-nc",
                  "cc-by-nd",
                  "cc-by-sa",
                  "cc-by-nc-nd",
                  "cc-by-nc-sa",
                  "cc0"
                ]
              }
            },
            "name": "license",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "cc-by",
                  "cc-by-nc",
                  "cc-by-nd",
                  "cc-by-sa",
                  "cc-by-nc-nd",
                  "cc-by-nc-sa",
                  "cc0"
                ]
              }
            },
            "name": "photo_license",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "licensed",
            "description": "Filter by observations where the license attribute is not null, i.e. it is licensed"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "photo_licensed",
            "description": "Filter by observations where the license attribute of at least one photo is not null"
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "anyOf": [
                  {
                    "type": "string",
                    "format": "uuid"
                  },
                  {
                    "type": "integer"
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            },
            "name": "place_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "anyOf": [
                  {
                    "type": "integer"
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            },
            "name": "project_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "coords_viewable_for_proj",
            "description": "Filter by observers who trust the project(s) specified in `project_id` OR trust the authenticated viewer"
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "kingdom",
                  "phylum",
                  "subphylum",
                  "superclass",
                  "class",
                  "subclass",
                  "infraclass",
                  "subterclass",
                  "superorder",
                  "order",
                  "suborder",
                  "infraorder",
                  "parvorder",
                  "zoosection",
                  "zoosubsection",
                  "superfamily",
                  "epifamily",
                  "family",
                  "subfamily",
                  "supertribe",
                  "tribe",
                  "subtribe",
                  "genus",
                  "genushybrid",
                  "subgenus",
                  "section",
                  "subsection",
                  "complex",
                  "species",
                  "hybrid",
                  "subspecies",
                  "variety",
                  "form",
                  "infrahybrid"
                ]
              }
            },
            "name": "rank",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "site_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "cc-by",
                  "cc-by-nc",
                  "cc-by-nd",
                  "cc-by-sa",
                  "cc-by-nc-nd",
                  "cc-by-nc-sa",
                  "cc0"
                ]
              }
            },
            "name": "sound_license",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "taxon_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "without_taxon_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "taxon_name"
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "name": "user_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "name": "user_login",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "minimum": 0,
                "maximum": 23
              }
            },
            "name": "hour",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "minimum": 1,
                "maximum": 31
              }
            },
            "name": "day",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "minimum": 1,
                "maximum": 12
              }
            },
            "name": "month",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "year",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "minimum": 1,
                "maximum": 31
              }
            },
            "name": "created_day",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "minimum": 1,
                "maximum": 12
              }
            },
            "name": "created_month",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "created_year",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "term_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "term_value_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "without_term_value_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "term_id_or_unknown",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "name": "annotation_user_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "acc_above"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "acc_below"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "acc_below_or_unknown"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "d1"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "d2"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "created_d1"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "created_d2"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "created_on"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "observed_on"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "unobserved_by_user_id"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "apply_project_rules_for"
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "observation_accuracy_experiment_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "cs"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "csa"
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "LC",
                  "NT",
                  "VU",
                  "EN",
                  "CR",
                  "EW",
                  "EX"
                ]
              }
            },
            "name": "csi",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "obscured",
                  "obscured_private",
                  "open",
                  "private"
                ]
              }
            },
            "name": "geoprivacy",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "obscured",
                  "obscured_private",
                  "open",
                  "private"
                ]
              }
            },
            "name": "taxon_geoprivacy",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "obscured",
                  "private",
                  "none"
                ]
              }
            },
            "name": "obscuration",
            "description": "Filter by observations where the `geoprivacy` or `taxon_geoprivacy` match these values",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "kingdom",
                  "phylum",
                  "subphylum",
                  "superclass",
                  "class",
                  "subclass",
                  "infraclass",
                  "subterclass",
                  "superorder",
                  "order",
                  "suborder",
                  "infraorder",
                  "parvorder",
                  "zoosection",
                  "zoosubsection",
                  "superfamily",
                  "epifamily",
                  "family",
                  "subfamily",
                  "supertribe",
                  "tribe",
                  "subtribe",
                  "genus",
                  "genushybrid",
                  "subgenus",
                  "section",
                  "subsection",
                  "complex",
                  "species",
                  "hybrid",
                  "subspecies",
                  "variety",
                  "form",
                  "infrahybrid"
                ]
              }
            },
            "name": "hrank",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "kingdom",
                  "phylum",
                  "subphylum",
                  "superclass",
                  "class",
                  "subclass",
                  "infraclass",
                  "subterclass",
                  "superorder",
                  "order",
                  "suborder",
                  "infraorder",
                  "parvorder",
                  "zoosection",
                  "zoosubsection",
                  "superfamily",
                  "epifamily",
                  "family",
                  "subfamily",
                  "supertribe",
                  "tribe",
                  "subtribe",
                  "genus",
                  "genushybrid",
                  "subgenus",
                  "section",
                  "subsection",
                  "complex",
                  "species",
                  "hybrid",
                  "subspecies",
                  "variety",
                  "form",
                  "infrahybrid"
                ]
              }
            },
            "name": "lrank",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "Actinopterygii",
                  "Animalia",
                  "Amphibia",
                  "Arachnida",
                  "Aves",
                  "Chromista",
                  "Fungi",
                  "Insecta",
                  "Mammalia",
                  "Mollusca",
                  "Reptilia",
                  "Plantae",
                  "Protozoa",
                  "unknown"
                ]
              }
            },
            "name": "iconic_taxa",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "id_above"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "id_below"
          },
          {
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "most_agree",
                "most_disagree",
                "some_agree"
              ]
            },
            "name": "identifications",
            "description": "Filter by level of agreement among identifications:\n\n* **most_agree:** returns observations where there are more active identifications of taxa that agree with the Observation Taxon than active identifications that disagree with the Observation Taxon\n* **some_agree:** returns observations where there are some active identifications of taxa that agree with the Observation Taxon\n* **most_disagree:** returns observations where there are more active identifications of taxa that disagree with the Observation Taxon than active identifications that agree with the Observation Taxon"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "disagreements",
            "description": "Whether there is disagreement among active identifications"
          },
          {
            "in": "query",
            "schema": {
              "type": "number",
              "format": "float",
              "minimum": -90,
              "maximum": 90
            },
            "name": "lat"
          },
          {
            "in": "query",
            "schema": {
              "type": "number",
              "format": "float",
              "minimum": -180,
              "maximum": 180
            },
            "name": "lng"
          },
          {
            "in": "query",
            "schema": {
              "type": "number",
              "format": "float"
            },
            "name": "radius"
          },
          {
            "in": "query",
            "schema": {
              "type": "number",
              "format": "float",
              "minimum": -90,
              "maximum": 90
            },
            "name": "nelat"
          },
          {
            "in": "query",
            "schema": {
              "type": "number",
              "format": "float",
              "minimum": -180,
              "maximum": 180
            },
            "name": "nelng"
          },
          {
            "in": "query",
            "schema": {
              "type": "number",
              "format": "float",
              "minimum": -90,
              "maximum": 90
            },
            "name": "swlat"
          },
          {
            "in": "query",
            "schema": {
              "type": "number",
              "format": "float",
              "minimum": -180,
              "maximum": 180
            },
            "name": "swlng"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "list_id"
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "name": "not_in_project",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "not_matching_project_rules_for"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "q"
          },
          {
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "names",
                "tags",
                "description",
                "place",
                "taxon_page_obs_photos"
              ]
            },
            "name": "search_on"
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "casual",
                  "needs_id",
                  "research"
                ]
              }
            },
            "name": "quality_grade",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "without_field"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "outlink_source"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "updated_since"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "viewer_id"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "reviewed"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "expected_nearby"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "locale"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "preferred_place_id"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "ttl"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "page"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "per_page"
          },
          {
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "desc",
                "asc"
              ],
              "default": "desc"
            },
            "name": "order"
          },
          {
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "created_at",
                "geo_score",
                "id",
                "observed_on",
                "random",
                "species_guess",
                "updated_at",
                "votes"
              ],
              "default": "created_at"
            },
            "name": "order_by"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "only_id"
          },
          {
            "in": "query",
            "schema": {

            },
            "name": "fields",
            "description": "Attribute fields to return in the response",
            "example": "species_guess,observed_on"
          },
          {
            "in": "header",
            "schema": {
              "type": "string"
            },
            "name": "X-HTTP-Method-Override"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of observations.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultsObservations"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "Observations"
        ],
        "summary": "Create observations.",
        "security": [
          {
            "userJwtRequired": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ObservationsCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "A list of observations.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultsObservations"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/observation_sounds": {
      "parameters": [],
      "post": {
        "tags": [
          "ObservationSounds"
        ],
        "summary": "Create observation sounds",
        "security": [
          {
            "userJwtRequired": []
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ObservationSoundsCreateMultipart"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ObservationSoundsCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "A list of observation sounds",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultsObservationSounds"
                }
              }
            }
          }
        }
      }
    },
    "/observation_photos": {
      "parameters": [],
      "post": {
        "tags": [
          "ObservationPhotos"
        ],
        "summary": "Create observation photos",
        "description": "Use `multipart/form-data` to upload a new photo to an existing observation and `application/json` to create a connetion between an existing observation and an existing photo. Both accept a client-specified UUID and have upsert behavior to prevent creating duplicate ObservationPhoto records if requests succeed but fail to receive a response under poor network conditions.",
        "security": [
          {
            "userJwtRequired": []
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ObservationPhotosCreateMultipart"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ObservationPhotosCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "A list of observation photos",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultsObservationPhotos"
                }
              }
            }
          }
        }
      }
    },
    "/observation_field_values": {
      "parameters": [],
      "post": {
        "tags": [
          "ObservationFieldValues"
        ],
        "summary": "Create observation field values",
        "security": [
          {
            "userJwtRequired": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ObservationFieldValuesCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "A list of observation field values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultsObservationFieldValues"
                }
              }
            }
          }
        }
      }
    },
    "/messages": {
      "parameters": [],
      "get": {
        "tags": [
          "Messages"
        ],
        "summary": "Retrieve messages for the authenticated user",
        "security": [
          {
            "userJwtRequired": []
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "X-HTTP-Method-Override",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "page"
          },
          {
            "in": "query",
            "schema": {

            },
            "name": "fields"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of messages",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultsMessages"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "Messages"
        ],
        "summary": "Create a message",
        "security": [
          {
            "userJwtRequired": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MessagesCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "A list of messages",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultsMessages"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/identifications/similar_species": {
      "parameters": [],
      "get": {
        "tags": [
          "Identifications"
        ],
        "summary": "Similar Species",
        "parameters": [
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "page"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "per_page"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "fields"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "taxon_id",
            "required": true
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "research",
                  "needs_id",
                  "casual"
                ]
              }
            },
            "name": "quality_grade",
            "description": "Observation must have this quality grade",
            "explode": false
          },
          {
            "in": "header",
            "schema": {
              "type": "string"
            },
            "name": "X-HTTP-Method-Override"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns species attached to IDs of observations of this taxon, or attached to observations identified as this species, ordered by combined frequency descending. This will only return species in the same iconic taxon, and will never return descendants of the chosen taxon",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultsTaxaCounts"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/identifications/recent_taxa": {
      "parameters": [],
      "get": {
        "tags": [
          "Identifications"
        ],
        "summary": "Fetch recent identifications and their associated taxa",
        "parameters": [
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "page"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "per_page"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "fields"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "verifiable"
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "taxon_id",
            "description": "ID taxa must match the given taxa or their descendants",
            "required": true,
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "research",
                  "needs_id",
                  "casual"
                ]
              }
            },
            "name": "quality_grade",
            "description": "Observation must have this quality grade",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "rank"
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "name": "category",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "locale"
          },
          {
            "in": "header",
            "schema": {
              "type": "string"
            },
            "name": "X-HTTP-Method-Override"
          }
        ],
        "responses": {
          "200": {
            "description": "A array of identifications and taxa",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultsIdentificationsRecentTaxa"
                }
              }
            }
          }
        }
      }
    },
    "/identifications/identifiers": {
      "parameters": [],
      "get": {
        "tags": [
          "Identifications"
        ],
        "summary": "Fetch people who have added the most identifications",
        "parameters": [
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "page"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "per_page"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "fields"
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "name": "taxon_id",
            "description": "ID taxa must match the given taxa or their descendants",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "research",
                  "needs_id",
                  "casual"
                ]
              }
            },
            "name": "quality_grade",
            "description": "Observation must have this quality grade",
            "explode": false
          },
          {
            "in": "header",
            "schema": {
              "type": "string"
            },
            "name": "X-HTTP-Method-Override"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of users and the number of identifications they've added that match the query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultsIdentifiers"
                }
              }
            }
          }
        }
      }
    },
    "/identifications": {
      "parameters": [],
      "post": {
        "tags": [
          "Identifications"
        ],
        "summary": "Create an identification",
        "security": [
          {
            "userJwtRequired": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdentificationsCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "A list of identifications",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultsIdentifications"
                }
              }
            }
          }
        }
      }
    },
    "/flags": {
      "parameters": [],
      "post": {
        "tags": [
          "Flags"
        ],
        "summary": "Create a flag",
        "security": [
          {
            "userJwtRequired": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FlagsCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "A list of flags",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultsFlags"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/controlled_terms": {
      "parameters": [],
      "get": {
        "tags": [
          "Controlled Terms"
        ],
        "summary": "Search controlled terms",
        "security": [
          {
            "userJwtOptional": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "fields"
          },
          {
            "in": "header",
            "schema": {
              "type": "string"
            },
            "name": "X-HTTP-Method-Override"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of all controlled terms",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultsControlledTerms"
                }
              }
            }
          }
        }
      }
    },
    "/comments": {
      "parameters": [],
      "post": {
        "tags": [
          "Comments"
        ],
        "summary": "Create a comment",
        "security": [
          {
            "userJwtRequired": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CommentsCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "A list of comments",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultsComments"
                }
              }
            }
          }
        }
      }
    },
    "/authorized_applications": {
      "parameters": [],
      "get": {
        "tags": [
          "AuthorizedApplications"
        ],
        "summary": "Applications the authenticated user has authorized to access their iNat account",
        "security": [
          {
            "userJwtRequired": []
          }
        ],
        "parameters": [
          {
            "in": "header",
            "schema": {
              "type": "string"
            },
            "name": "X-HTTP-Method-Override"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "fields"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of authorized applications",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultsAuthorizedApplications"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/announcements": {
      "parameters": [],
      "get": {
        "tags": [
          "Announcements"
        ],
        "summary": "Search announcements",
        "security": [
          {
            "userJwtOptional": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "users/dashboard#sidebar",
                "users/dashboard",
                "welcome/index",
                "mobile/home",
                "mobile"
              ]
            },
            "name": "placement"
          },
          {
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "inat-ios",
                "inat-android",
                "seek",
                "inatrn"
              ]
            },
            "name": "client"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "locale"
          },
          {
            "in": "query",
            "schema": {

            },
            "name": "fields"
          },
          {
            "in": "header",
            "schema": {
              "type": "string"
            },
            "name": "X-HTTP-Method-Override"
          }
        ],
        "responses": {
          "200": {
            "description": "An array of announcements",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultsAnnouncements"
                }
              }
            }
          }
        }
      }
    },
    "/annotations": {
      "parameters": [],
      "post": {
        "tags": [
          "Annotations"
        ],
        "summary": "Create an annotation",
        "security": [
          {
            "userJwtRequired": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AnnotationsCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The annotation just created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultsAnnotations"
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}/projects": {
      "parameters": [],
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Return projects as user has joined / followed.",
        "security": [
          {
            "userJwtOptional": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "schema": {
              "type": "integer"
            },
            "name": "id",
            "description": "A single project ID",
            "required": true
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "fields"
          },
          {
            "in": "header",
            "schema": {
              "type": "string"
            },
            "name": "X-HTTP-Method-Override"
          }
        ],
        "responses": {
          "200": {
            "description": "An array of projects.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultsProjects"
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}/mute": {
      "parameters": [],
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Mute a user",
        "security": [
          {
            "userJwtRequired": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "schema": {
              "type": "integer"
            },
            "name": "id",
            "description": "A single ID",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "No response body; success implies creation"
          }
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Remove a user mute",
        "security": [
          {
            "userJwtRequired": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "schema": {
              "type": "integer"
            },
            "name": "id",
            "description": "A single ID",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "No response body; success implies deletion"
          }
        }
      }
    },
    "/users/{id}/block": {
      "parameters": [],
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Block a user",
        "security": [
          {
            "userJwtRequired": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "schema": {
              "type": "integer"
            },
            "name": "id",
            "description": "A single ID",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "No response body; success implies creation"
          }
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Remove a user block",
        "security": [
          {
            "userJwtRequired": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "schema": {
              "type": "integer"
            },
            "name": "id",
            "description": "A single ID",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "No response body; success implies deletion"
          }
        }
      }
    },
    "/users/{id}": {
      "parameters": [],
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Fetch users.",
        "security": [
          {
            "userJwtOptional": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "schema": {
              "type": "string"
            },
            "name": "id",
            "required": true
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "fields"
          },
          {
            "in": "header",
            "schema": {
              "type": "string"
            },
            "name": "X-HTTP-Method-Override"
          }
        ],
        "responses": {
          "200": {
            "description": "An array of users.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultsUsers"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Update users.",
        "security": [
          {
            "userJwtRequired": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "schema": {
              "type": "string"
            },
            "name": "id",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/UsersUpdateMultipart"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UsersUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "A user.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/taxon_ranges/{id}/{zoom}/{x}/{y}.png": {
      "parameters": [],
      "get": {
        "tags": [
          "Polygon Tiles"
        ],
        "summary": "Taxon Range Tiles",
        "security": [
          {
            "userJwtOptional": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "schema": {
              "type": "string"
            },
            "name": "id",
            "required": true
          },
          {
            "in": "path",
            "schema": {
              "type": "integer",
              "minimum": 0,
              "maximum": 21
            },
            "name": "zoom",
            "required": true
          },
          {
            "in": "path",
            "schema": {
              "type": "integer",
              "minimum": 0
            },
            "name": "x",
            "required": true
          },
          {
            "in": "path",
            "schema": {
              "type": "integer",
              "minimum": 0
            },
            "name": "y",
            "required": true
          },
          {
            "in": "query",
            "schema": {
              "type": "integer",
              "enum": [256, 512]
            },
            "name": "tile_size"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "acc",
            "description": "Filter by whether `positional_accuracy` is set or not"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "captive",
            "description": "Filter by captive / cultivated status"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "endemic",
            "description": "Filter by whether the observation is in a place with a check list entry indicating the establishment means is `endemic`"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "geo"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "id_please"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "identified"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "introduced"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "mappable"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "native"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "out_of_range"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "pcid",
            "deprecated": true
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "photos"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "popular"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "sounds"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "taxon_is_active"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "threatened",
            "description": "Filter by whether the observed taxon has a conservation status of \"threatened\" or worse"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "verifiable",
            "description": "Filter by whether observations are 'verifiable' (have quality grades `research` or `needs_id`)"
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            },
            "name": "not_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "cc-by",
                  "cc-by-nc",
                  "cc-by-nd",
                  "cc-by-sa",
                  "cc-by-nc-nd",
                  "cc-by-nc-sa",
                  "cc0"
                ]
              }
            },
            "name": "license",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "cc-by",
                  "cc-by-nc",
                  "cc-by-nd",
                  "cc-by-sa",
                  "cc-by-nc-nd",
                  "cc-by-nc-sa",
                  "cc0"
                ]
              }
            },
            "name": "photo_license",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "licensed",
            "description": "Filter by observations where the license attribute is not null, i.e. it is licensed"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "photo_licensed",
            "description": "Filter by observations where the license attribute of at least one photo is not null"
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "anyOf": [
                  {
                    "type": "string",
                    "format": "uuid"
                  },
                  {
                    "type": "integer"
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            },
            "name": "place_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "anyOf": [
                  {
                    "type": "integer"
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            },
            "name": "project_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "coords_viewable_for_proj",
            "description": "Filter by observers who trust the project(s) specified in `project_id` OR trust the authenticated viewer"
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "kingdom",
                  "phylum",
                  "subphylum",
                  "superclass",
                  "class",
                  "subclass",
                  "infraclass",
                  "subterclass",
                  "superorder",
                  "order",
                  "suborder",
                  "infraorder",
                  "parvorder",
                  "zoosection",
                  "zoosubsection",
                  "superfamily",
                  "epifamily",
                  "family",
                  "subfamily",
                  "supertribe",
                  "tribe",
                  "subtribe",
                  "genus",
                  "genushybrid",
                  "subgenus",
                  "section",
                  "subsection",
                  "complex",
                  "species",
                  "hybrid",
                  "subspecies",
                  "variety",
                  "form",
                  "infrahybrid"
                ]
              }
            },
            "name": "rank",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "site_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "cc-by",
                  "cc-by-nc",
                  "cc-by-nd",
                  "cc-by-sa",
                  "cc-by-nc-nd",
                  "cc-by-nc-sa",
                  "cc0"
                ]
              }
            },
            "name": "sound_license",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "taxon_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "without_taxon_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "taxon_name"
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "name": "user_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "name": "user_login",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "minimum": 0,
                "maximum": 23
              }
            },
            "name": "hour",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "minimum": 1,
                "maximum": 31
              }
            },
            "name": "day",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "minimum": 1,
                "maximum": 12
              }
            },
            "name": "month",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "year",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "minimum": 1,
                "maximum": 31
              }
            },
            "name": "created_day",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "minimum": 1,
                "maximum": 12
              }
            },
            "name": "created_month",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "created_year",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "term_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "term_value_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "without_term_value_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "term_id_or_unknown",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "name": "annotation_user_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "acc_above"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "acc_below"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "acc_below_or_unknown"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "d1"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "d2"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "created_d1"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "created_d2"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "created_on"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "observed_on"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "unobserved_by_user_id"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "apply_project_rules_for"
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "observation_accuracy_experiment_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "cs"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "csa"
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "LC",
                  "NT",
                  "VU",
                  "EN",
                  "CR",
                  "EW",
                  "EX"
                ]
              }
            },
            "name": "csi",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "obscured",
                  "obscured_private",
                  "open",
                  "private"
                ]
              }
            },
            "name": "geoprivacy",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "obscured",
                  "obscured_private",
                  "open",
                  "private"
                ]
              }
            },
            "name": "taxon_geoprivacy",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "obscured",
                  "private",
                  "none"
                ]
              }
            },
            "name": "obscuration",
            "description": "Filter by observations where the `geoprivacy` or `taxon_geoprivacy` match these values",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "kingdom",
                  "phylum",
                  "subphylum",
                  "superclass",
                  "class",
                  "subclass",
                  "infraclass",
                  "subterclass",
                  "superorder",
                  "order",
                  "suborder",
                  "infraorder",
                  "parvorder",
                  "zoosection",
                  "zoosubsection",
                  "superfamily",
                  "epifamily",
                  "family",
                  "subfamily",
                  "supertribe",
                  "tribe",
                  "subtribe",
                  "genus",
                  "genushybrid",
                  "subgenus",
                  "section",
                  "subsection",
                  "complex",
                  "species",
                  "hybrid",
                  "subspecies",
                  "variety",
                  "form",
                  "infrahybrid"
                ]
              }
            },
            "name": "hrank",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "kingdom",
                  "phylum",
                  "subphylum",
                  "superclass",
                  "class",
                  "subclass",
                  "infraclass",
                  "subterclass",
                  "superorder",
                  "order",
                  "suborder",
                  "infraorder",
                  "parvorder",
                  "zoosection",
                  "zoosubsection",
                  "superfamily",
                  "epifamily",
                  "family",
                  "subfamily",
                  "supertribe",
                  "tribe",
                  "subtribe",
                  "genus",
                  "genushybrid",
                  "subgenus",
                  "section",
                  "subsection",
                  "complex",
                  "species",
                  "hybrid",
                  "subspecies",
                  "variety",
                  "form",
                  "infrahybrid"
                ]
              }
            },
            "name": "lrank",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "Actinopterygii",
                  "Animalia",
                  "Amphibia",
                  "Arachnida",
                  "Aves",
                  "Chromista",
                  "Fungi",
                  "Insecta",
                  "Mammalia",
                  "Mollusca",
                  "Reptilia",
                  "Plantae",
                  "Protozoa",
                  "unknown"
                ]
              }
            },
            "name": "iconic_taxa",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "id_above"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "id_below"
          },
          {
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "most_agree",
                "most_disagree",
                "some_agree"
              ]
            },
            "name": "identifications",
            "description": "Filter by level of agreement among identifications:\n\n* **most_agree:** returns observations where there are more active identifications of taxa that agree with the Observation Taxon than active identifications that disagree with the Observation Taxon\n* **some_agree:** returns observations where there are some active identifications of taxa that agree with the Observation Taxon\n* **most_disagree:** returns observations where there are more active identifications of taxa that disagree with the Observation Taxon than active identifications that agree with the Observation Taxon"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "disagreements",
            "description": "Whether there is disagreement among active identifications"
          },
          {
            "in": "query",
            "schema": {
              "type": "number",
              "format": "float",
              "minimum": -90,
              "maximum": 90
            },
            "name": "lat"
          },
          {
            "in": "query",
            "schema": {
              "type": "number",
              "format": "float",
              "minimum": -180,
              "maximum": 180
            },
            "name": "lng"
          },
          {
            "in": "query",
            "schema": {
              "type": "number",
              "format": "float"
            },
            "name": "radius"
          },
          {
            "in": "query",
            "schema": {
              "type": "number",
              "format": "float",
              "minimum": -90,
              "maximum": 90
            },
            "name": "nelat"
          },
          {
            "in": "query",
            "schema": {
              "type": "number",
              "format": "float",
              "minimum": -180,
              "maximum": 180
            },
            "name": "nelng"
          },
          {
            "in": "query",
            "schema": {
              "type": "number",
              "format": "float",
              "minimum": -90,
              "maximum": 90
            },
            "name": "swlat"
          },
          {
            "in": "query",
            "schema": {
              "type": "number",
              "format": "float",
              "minimum": -180,
              "maximum": 180
            },
            "name": "swlng"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "list_id"
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "name": "not_in_project",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "not_matching_project_rules_for"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "q"
          },
          {
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "names",
                "tags",
                "description",
                "place",
                "taxon_page_obs_photos"
              ]
            },
            "name": "search_on"
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "casual",
                  "needs_id",
                  "research"
                ]
              }
            },
            "name": "quality_grade",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "without_field"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "outlink_source"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "updated_since"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "viewer_id"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "reviewed"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "expected_nearby"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "locale"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "preferred_place_id"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "ttl"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "page"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "per_page"
          },
          {
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "desc",
                "asc"
              ],
              "default": "desc"
            },
            "name": "order"
          },
          {
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "created_at",
                "geo_score",
                "id",
                "observed_on",
                "random",
                "species_guess",
                "updated_at",
                "votes"
              ],
              "default": "created_at"
            },
            "name": "order_by"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "only_id"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns taxon range tiles.",
            "content": {
              "image/png": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/taxon_places/{id}/{zoom}/{x}/{y}.png": {
      "parameters": [],
      "get": {
        "tags": [
          "Polygon Tiles"
        ],
        "summary": "Taxon Place Tiles",
        "security": [
          {
            "userJwtOptional": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "schema": {
              "type": "string"
            },
            "name": "id",
            "required": true
          },
          {
            "in": "path",
            "schema": {
              "type": "integer",
              "minimum": 0,
              "maximum": 21
            },
            "name": "zoom",
            "required": true
          },
          {
            "in": "path",
            "schema": {
              "type": "integer",
              "minimum": 0
            },
            "name": "x",
            "required": true
          },
          {
            "in": "path",
            "schema": {
              "type": "integer",
              "minimum": 0
            },
            "name": "y",
            "required": true
          },
          {
            "in": "query",
            "schema": {
              "type": "integer",
              "enum": [256, 512]
            },
            "name": "tile_size"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "acc",
            "description": "Filter by whether `positional_accuracy` is set or not"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "captive",
            "description": "Filter by captive / cultivated status"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "endemic",
            "description": "Filter by whether the observation is in a place with a check list entry indicating the establishment means is `endemic`"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "geo"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "id_please"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "identified"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "introduced"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "mappable"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "native"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "out_of_range"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "pcid",
            "deprecated": true
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "photos"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "popular"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "sounds"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "taxon_is_active"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "threatened",
            "description": "Filter by whether the observed taxon has a conservation status of \"threatened\" or worse"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "verifiable",
            "description": "Filter by whether observations are 'verifiable' (have quality grades `research` or `needs_id`)"
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            },
            "name": "not_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "cc-by",
                  "cc-by-nc",
                  "cc-by-nd",
                  "cc-by-sa",
                  "cc-by-nc-nd",
                  "cc-by-nc-sa",
                  "cc0"
                ]
              }
            },
            "name": "license",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "cc-by",
                  "cc-by-nc",
                  "cc-by-nd",
                  "cc-by-sa",
                  "cc-by-nc-nd",
                  "cc-by-nc-sa",
                  "cc0"
                ]
              }
            },
            "name": "photo_license",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "licensed",
            "description": "Filter by observations where the license attribute is not null, i.e. it is licensed"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "photo_licensed",
            "description": "Filter by observations where the license attribute of at least one photo is not null"
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "anyOf": [
                  {
                    "type": "string",
                    "format": "uuid"
                  },
                  {
                    "type": "integer"
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            },
            "name": "place_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "anyOf": [
                  {
                    "type": "integer"
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            },
            "name": "project_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "coords_viewable_for_proj",
            "description": "Filter by observers who trust the project(s) specified in `project_id` OR trust the authenticated viewer"
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "kingdom",
                  "phylum",
                  "subphylum",
                  "superclass",
                  "class",
                  "subclass",
                  "infraclass",
                  "subterclass",
                  "superorder",
                  "order",
                  "suborder",
                  "infraorder",
                  "parvorder",
                  "zoosection",
                  "zoosubsection",
                  "superfamily",
                  "epifamily",
                  "family",
                  "subfamily",
                  "supertribe",
                  "tribe",
                  "subtribe",
                  "genus",
                  "genushybrid",
                  "subgenus",
                  "section",
                  "subsection",
                  "complex",
                  "species",
                  "hybrid",
                  "subspecies",
                  "variety",
                  "form",
                  "infrahybrid"
                ]
              }
            },
            "name": "rank",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "site_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "cc-by",
                  "cc-by-nc",
                  "cc-by-nd",
                  "cc-by-sa",
                  "cc-by-nc-nd",
                  "cc-by-nc-sa",
                  "cc0"
                ]
              }
            },
            "name": "sound_license",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "taxon_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "without_taxon_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "taxon_name"
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "name": "user_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "name": "user_login",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "minimum": 0,
                "maximum": 23
              }
            },
            "name": "hour",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "minimum": 1,
                "maximum": 31
              }
            },
            "name": "day",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "minimum": 1,
                "maximum": 12
              }
            },
            "name": "month",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "year",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "minimum": 1,
                "maximum": 31
              }
            },
            "name": "created_day",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "minimum": 1,
                "maximum": 12
              }
            },
            "name": "created_month",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "created_year",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "term_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "term_value_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "without_term_value_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "term_id_or_unknown",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "name": "annotation_user_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "acc_above"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "acc_below"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "acc_below_or_unknown"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "d1"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "d2"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "created_d1"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "created_d2"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "created_on"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "observed_on"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "unobserved_by_user_id"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "apply_project_rules_for"
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "observation_accuracy_experiment_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "cs"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "csa"
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "LC",
                  "NT",
                  "VU",
                  "EN",
                  "CR",
                  "EW",
                  "EX"
                ]
              }
            },
            "name": "csi",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "obscured",
                  "obscured_private",
                  "open",
                  "private"
                ]
              }
            },
            "name": "geoprivacy",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "obscured",
                  "obscured_private",
                  "open",
                  "private"
                ]
              }
            },
            "name": "taxon_geoprivacy",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "obscured",
                  "private",
                  "none"
                ]
              }
            },
            "name": "obscuration",
            "description": "Filter by observations where the `geoprivacy` or `taxon_geoprivacy` match these values",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "kingdom",
                  "phylum",
                  "subphylum",
                  "superclass",
                  "class",
                  "subclass",
                  "infraclass",
                  "subterclass",
                  "superorder",
                  "order",
                  "suborder",
                  "infraorder",
                  "parvorder",
                  "zoosection",
                  "zoosubsection",
                  "superfamily",
                  "epifamily",
                  "family",
                  "subfamily",
                  "supertribe",
                  "tribe",
                  "subtribe",
                  "genus",
                  "genushybrid",
                  "subgenus",
                  "section",
                  "subsection",
                  "complex",
                  "species",
                  "hybrid",
                  "subspecies",
                  "variety",
                  "form",
                  "infrahybrid"
                ]
              }
            },
            "name": "hrank",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "kingdom",
                  "phylum",
                  "subphylum",
                  "superclass",
                  "class",
                  "subclass",
                  "infraclass",
                  "subterclass",
                  "superorder",
                  "order",
                  "suborder",
                  "infraorder",
                  "parvorder",
                  "zoosection",
                  "zoosubsection",
                  "superfamily",
                  "epifamily",
                  "family",
                  "subfamily",
                  "supertribe",
                  "tribe",
                  "subtribe",
                  "genus",
                  "genushybrid",
                  "subgenus",
                  "section",
                  "subsection",
                  "complex",
                  "species",
                  "hybrid",
                  "subspecies",
                  "variety",
                  "form",
                  "infrahybrid"
                ]
              }
            },
            "name": "lrank",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "Actinopterygii",
                  "Animalia",
                  "Amphibia",
                  "Arachnida",
                  "Aves",
                  "Chromista",
                  "Fungi",
                  "Insecta",
                  "Mammalia",
                  "Mollusca",
                  "Reptilia",
                  "Plantae",
                  "Protozoa",
                  "unknown"
                ]
              }
            },
            "name": "iconic_taxa",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "id_above"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "id_below"
          },
          {
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "most_agree",
                "most_disagree",
                "some_agree"
              ]
            },
            "name": "identifications",
            "description": "Filter by level of agreement among identifications:\n\n* **most_agree:** returns observations where there are more active identifications of taxa that agree with the Observation Taxon than active identifications that disagree with the Observation Taxon\n* **some_agree:** returns observations where there are some active identifications of taxa that agree with the Observation Taxon\n* **most_disagree:** returns observations where there are more active identifications of taxa that disagree with the Observation Taxon than active identifications that agree with the Observation Taxon"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "disagreements",
            "description": "Whether there is disagreement among active identifications"
          },
          {
            "in": "query",
            "schema": {
              "type": "number",
              "format": "float",
              "minimum": -90,
              "maximum": 90
            },
            "name": "lat"
          },
          {
            "in": "query",
            "schema": {
              "type": "number",
              "format": "float",
              "minimum": -180,
              "maximum": 180
            },
            "name": "lng"
          },
          {
            "in": "query",
            "schema": {
              "type": "number",
              "format": "float"
            },
            "name": "radius"
          },
          {
            "in": "query",
            "schema": {
              "type": "number",
              "format": "float",
              "minimum": -90,
              "maximum": 90
            },
            "name": "nelat"
          },
          {
            "in": "query",
            "schema": {
              "type": "number",
              "format": "float",
              "minimum": -180,
              "maximum": 180
            },
            "name": "nelng"
          },
          {
            "in": "query",
            "schema": {
              "type": "number",
              "format": "float",
              "minimum": -90,
              "maximum": 90
            },
            "name": "swlat"
          },
          {
            "in": "query",
            "schema": {
              "type": "number",
              "format": "float",
              "minimum": -180,
              "maximum": 180
            },
            "name": "swlng"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "list_id"
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "name": "not_in_project",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "not_matching_project_rules_for"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "q"
          },
          {
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "names",
                "tags",
                "description",
                "place",
                "taxon_page_obs_photos"
              ]
            },
            "name": "search_on"
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "casual",
                  "needs_id",
                  "research"
                ]
              }
            },
            "name": "quality_grade",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "without_field"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "outlink_source"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "updated_since"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "viewer_id"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "reviewed"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "expected_nearby"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "locale"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "preferred_place_id"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "ttl"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "page"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "per_page"
          },
          {
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "desc",
                "asc"
              ],
              "default": "desc"
            },
            "name": "order"
          },
          {
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "created_at",
                "geo_score",
                "id",
                "observed_on",
                "random",
                "species_guess",
                "updated_at",
                "votes"
              ],
              "default": "created_at"
            },
            "name": "order_by"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "only_id"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns taxon place tiles.",
            "content": {
              "image/png": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/taxon_name_priorities/{id}": {
      "parameters": [],
      "put": {
        "tags": [
          "TaxonNamePriorities"
        ],
        "summary": "Update a taxon name priority",
        "security": [
          {
            "userJwtRequired": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "schema": {
              "type": "integer"
            },
            "name": "id",
            "description": "A single ID",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaxonNamePrioritiesUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "A list of taxon name priorities",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultsTaxonNamePriorities"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "TaxonNamePriorities"
        ],
        "summary": "Delete a taxon name priority",
        "security": [
          {
            "userJwtRequired": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "schema": {
              "type": "integer"
            },
            "name": "id",
            "description": "A single ID",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "No response body; success implies deletion"
          }
        }
      }
    },
    "/taxa/{id}/wanted": {
      "parameters": [],
      "get": {
        "tags": [
          "Taxa"
        ],
        "summary": "Fetch unobserved taxa in a clade.",
        "security": [
          {
            "userJwtOptional": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "page"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "per_page"
          },
          {
            "in": "path",
            "schema": {
              "type": "integer"
            },
            "name": "id",
            "description": "A single ID",
            "required": true
          },
          {
            "in": "header",
            "schema": {
              "type": "string"
            },
            "name": "X-HTTP-Method-Override"
          }
        ],
        "responses": {
          "200": {
            "description": "An array of taxa.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultsTaxa"
                }
              }
            }
          }
        }
      }
    },
    "/taxa/{id}": {
      "parameters": [],
      "get": {
        "tags": [
          "Taxa"
        ],
        "summary": "Fetch taxa.",
        "security": [
          {
            "userJwtOptional": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "id",
            "required": true,
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "number",
                "format": "float"
              }
            },
            "name": "rank_level",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "fields"
          },
          {
            "in": "header",
            "schema": {
              "type": "string"
            },
            "name": "X-HTTP-Method-Override"
          }
        ],
        "responses": {
          "200": {
            "description": "An array of taxa.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultsTaxa"
                }
              }
            }
          }
        }
      }
    },
    "/saved_locations/{id}": {
      "parameters": [],
      "delete": {
        "tags": [
          "SavedLocations"
        ],
        "summary": "Delete a saved location",
        "security": [
          {
            "userJwtRequired": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "schema": {
              "type": "integer"
            },
            "name": "id",
            "description": "A single ID",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "No response body; success implies deletion"
          }
        }
      }
    },
    "/relationships/{id}": {
      "parameters": [],
      "put": {
        "tags": [
          "Relationships"
        ],
        "summary": "Update a relationship",
        "security": [
          {
            "userJwtRequired": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "schema": {
              "type": "integer"
            },
            "name": "id",
            "description": "A single ID",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipsUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "A list of relationships",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultsRelationships"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Relationships"
        ],
        "summary": "Delete a relationship",
        "security": [
          {
            "userJwtRequired": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "schema": {
              "type": "integer"
            },
            "name": "id",
            "description": "A single ID",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "No response body; success implies deletion"
          }
        }
      }
    },
    "/provider_authorizations/{id}": {
      "parameters": [],
      "delete": {
        "tags": [
          "ProviderAuthorizations"
        ],
        "summary": "Revoke iNat's authorization to access the user's account on this provider's service",
        "security": [
          {
            "userJwtRequired": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "schema": {
              "type": "integer"
            },
            "name": "id",
            "description": "Unique identifier for the authorization",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Authorization revoked"
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/projects/{id}/posts": {
      "parameters": [],
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "Fetch project posts",
        "security": [
          {
            "userJwtOptional": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "id",
            "description": "A single ID or a comma-separated list of them",
            "required": true,
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "page"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "per_page"
          },
          {
            "in": "query",
            "schema": {

            },
            "name": "fields"
          },
          {
            "in": "header",
            "schema": {
              "type": "string"
            },
            "name": "X-HTTP-Method-Override"
          }
        ],
        "responses": {
          "200": {
            "description": "An array of project posts.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultsProjectsPosts"
                }
              }
            }
          }
        }
      }
    },
    "/projects/{id}/membership": {
      "parameters": [],
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "Membership of current user.",
        "security": [
          {
            "userJwtRequired": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "id",
            "description": "A single ID or a comma-separated list of them",
            "required": true,
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "fields"
          },
          {
            "in": "header",
            "schema": {
              "type": "string"
            },
            "name": "X-HTTP-Method-Override"
          }
        ],
        "responses": {
          "200": {
            "description": "An array of project membership details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultsProjectMembership"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Projects"
        ],
        "summary": "Join a project",
        "security": [
          {
            "userJwtRequired": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "schema": {
              "type": "integer"
            },
            "name": "id",
            "description": "A single project ID",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Joined project"
          }
        }
      },
      "delete": {
        "tags": [
          "Projects"
        ],
        "summary": "Leave a project",
        "security": [
          {
            "userJwtRequired": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "schema": {
              "type": "integer"
            },
            "name": "id",
            "description": "A single project ID",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Joined project"
          }
        }
      }
    },
    "/projects/{id}/members": {
      "parameters": [],
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "Fetch project members",
        "security": [
          {
            "userJwtOptional": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "schema": {
              "type": "integer"
            },
            "name": "id",
            "description": "A single ID",
            "required": true
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "skip_counts",
            "description": "If counts are not needed, consider setting this to true to save on processing time, resulting in faster responses"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "page"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "per_page"
          },
          {
            "in": "query",
            "schema": {

            },
            "name": "fields"
          },
          {
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "observations_count",
                "login"
              ],
              "default": "observations_count"
            },
            "name": "order_by"
          },
          {
            "in": "header",
            "schema": {
              "type": "string"
            },
            "name": "X-HTTP-Method-Override"
          }
        ],
        "responses": {
          "200": {
            "description": "An array of project user membership information.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultsProjectsMembers"
                }
              }
            }
          }
        }
      }
    },
    "/projects/{id}": {
      "parameters": [],
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "Fetch projects",
        "parameters": [
          {
            "in": "path",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "id",
            "description": "A single ID or a comma-separated list of them",
            "required": true,
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "rule_details"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "fields"
          },
          {
            "in": "header",
            "schema": {
              "type": "string"
            },
            "name": "X-HTTP-Method-Override"
          }
        ],
        "responses": {
          "200": {
            "description": "An array of projects",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultsProjects"
                }
              }
            }
          }
        }
      }
    },
    "/project_users/{id}": {
      "parameters": [],
      "put": {
        "tags": [
          "ProjectUsers"
        ],
        "summary": "Update project users.",
        "security": [
          {
            "userJwtRequired": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "schema": {
              "type": "string"
            },
            "name": "id",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectUsersUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "A project user.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectUser"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/project_observations/{uuid}": {
      "parameters": [],
      "put": {
        "tags": [
          "ProjectObservations"
        ],
        "summary": "Update a project observation",
        "security": [
          {
            "userJwtRequired": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "name": "uuid",
            "description": "A single UUID",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectObservationsUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "A list of project observations",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultsProjectObservations"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "ProjectObservations"
        ],
        "summary": "Delete a project observation",
        "security": [
          {
            "userJwtRequired": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "name": "uuid",
            "description": "A single UUID",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "No response body; success implies deletion"
          }
        }
      }
    },
    "/points/{zoom}/{x}/{y}.png": {
      "parameters": [],
      "get": {
        "tags": [
          "Observation Tiles"
        ],
        "summary": "Grid Tiles",
        "security": [
          {
            "userJwtOptional": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "schema": {
              "type": "integer",
              "minimum": 0,
              "maximum": 21
            },
            "name": "zoom",
            "required": true
          },
          {
            "in": "path",
            "schema": {
              "type": "integer",
              "minimum": 0
            },
            "name": "x",
            "required": true
          },
          {
            "in": "path",
            "schema": {
              "type": "integer",
              "minimum": 0
            },
            "name": "y",
            "required": true
          },
          {
            "in": "query",
            "schema": {
              "type": "integer",
              "enum": [256, 512]
            },
            "name": "tile_size"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "acc",
            "description": "Filter by whether `positional_accuracy` is set or not"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "captive",
            "description": "Filter by captive / cultivated status"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "endemic",
            "description": "Filter by whether the observation is in a place with a check list entry indicating the establishment means is `endemic`"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "geo"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "id_please"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "identified"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "introduced"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "mappable"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "native"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "out_of_range"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "pcid",
            "deprecated": true
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "photos"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "popular"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "sounds"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "taxon_is_active"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "threatened",
            "description": "Filter by whether the observed taxon has a conservation status of \"threatened\" or worse"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "verifiable",
            "description": "Filter by whether observations are 'verifiable' (have quality grades `research` or `needs_id`)"
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "anyOf": [
                  {
                    "type": "string",
                    "format": "uuid"
                  },
                  {
                    "type": "integer"
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            },
            "name": "id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            },
            "name": "not_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "cc-by",
                  "cc-by-nc",
                  "cc-by-nd",
                  "cc-by-sa",
                  "cc-by-nc-nd",
                  "cc-by-nc-sa",
                  "cc0"
                ]
              }
            },
            "name": "license",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "cc-by",
                  "cc-by-nc",
                  "cc-by-nd",
                  "cc-by-sa",
                  "cc-by-nc-nd",
                  "cc-by-nc-sa",
                  "cc0"
                ]
              }
            },
            "name": "photo_license",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "licensed",
            "description": "Filter by observations where the license attribute is not null, i.e. it is licensed"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "photo_licensed",
            "description": "Filter by observations where the license attribute of at least one photo is not null"
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "anyOf": [
                  {
                    "type": "string",
                    "format": "uuid"
                  },
                  {
                    "type": "integer"
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            },
            "name": "place_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "anyOf": [
                  {
                    "type": "integer"
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            },
            "name": "project_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "coords_viewable_for_proj",
            "description": "Filter by observers who trust the project(s) specified in `project_id` OR trust the authenticated viewer"
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "kingdom",
                  "phylum",
                  "subphylum",
                  "superclass",
                  "class",
                  "subclass",
                  "infraclass",
                  "subterclass",
                  "superorder",
                  "order",
                  "suborder",
                  "infraorder",
                  "parvorder",
                  "zoosection",
                  "zoosubsection",
                  "superfamily",
                  "epifamily",
                  "family",
                  "subfamily",
                  "supertribe",
                  "tribe",
                  "subtribe",
                  "genus",
                  "genushybrid",
                  "subgenus",
                  "section",
                  "subsection",
                  "complex",
                  "species",
                  "hybrid",
                  "subspecies",
                  "variety",
                  "form",
                  "infrahybrid"
                ]
              }
            },
            "name": "rank",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "site_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "cc-by",
                  "cc-by-nc",
                  "cc-by-nd",
                  "cc-by-sa",
                  "cc-by-nc-nd",
                  "cc-by-nc-sa",
                  "cc0"
                ]
              }
            },
            "name": "sound_license",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "taxon_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "without_taxon_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "taxon_name"
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "name": "user_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "name": "user_login",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "minimum": 0,
                "maximum": 23
              }
            },
            "name": "hour",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "minimum": 1,
                "maximum": 31
              }
            },
            "name": "day",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "minimum": 1,
                "maximum": 12
              }
            },
            "name": "month",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "year",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "minimum": 1,
                "maximum": 31
              }
            },
            "name": "created_day",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "minimum": 1,
                "maximum": 12
              }
            },
            "name": "created_month",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "created_year",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "term_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "term_value_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "without_term_value_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "term_id_or_unknown",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "name": "annotation_user_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "acc_above"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "acc_below"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "acc_below_or_unknown"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "d1"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "d2"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "created_d1"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "created_d2"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "created_on"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "observed_on"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "unobserved_by_user_id"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "apply_project_rules_for"
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "observation_accuracy_experiment_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "cs"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "csa"
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "LC",
                  "NT",
                  "VU",
                  "EN",
                  "CR",
                  "EW",
                  "EX"
                ]
              }
            },
            "name": "csi",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "obscured",
                  "obscured_private",
                  "open",
                  "private"
                ]
              }
            },
            "name": "geoprivacy",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "obscured",
                  "obscured_private",
                  "open",
                  "private"
                ]
              }
            },
            "name": "taxon_geoprivacy",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "obscured",
                  "private",
                  "none"
                ]
              }
            },
            "name": "obscuration",
            "description": "Filter by observations where the `geoprivacy` or `taxon_geoprivacy` match these values",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "kingdom",
                  "phylum",
                  "subphylum",
                  "superclass",
                  "class",
                  "subclass",
                  "infraclass",
                  "subterclass",
                  "superorder",
                  "order",
                  "suborder",
                  "infraorder",
                  "parvorder",
                  "zoosection",
                  "zoosubsection",
                  "superfamily",
                  "epifamily",
                  "family",
                  "subfamily",
                  "supertribe",
                  "tribe",
                  "subtribe",
                  "genus",
                  "genushybrid",
                  "subgenus",
                  "section",
                  "subsection",
                  "complex",
                  "species",
                  "hybrid",
                  "subspecies",
                  "variety",
                  "form",
                  "infrahybrid"
                ]
              }
            },
            "name": "hrank",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "kingdom",
                  "phylum",
                  "subphylum",
                  "superclass",
                  "class",
                  "subclass",
                  "infraclass",
                  "subterclass",
                  "superorder",
                  "order",
                  "suborder",
                  "infraorder",
                  "parvorder",
                  "zoosection",
                  "zoosubsection",
                  "superfamily",
                  "epifamily",
                  "family",
                  "subfamily",
                  "supertribe",
                  "tribe",
                  "subtribe",
                  "genus",
                  "genushybrid",
                  "subgenus",
                  "section",
                  "subsection",
                  "complex",
                  "species",
                  "hybrid",
                  "subspecies",
                  "variety",
                  "form",
                  "infrahybrid"
                ]
              }
            },
            "name": "lrank",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "Actinopterygii",
                  "Animalia",
                  "Amphibia",
                  "Arachnida",
                  "Aves",
                  "Chromista",
                  "Fungi",
                  "Insecta",
                  "Mammalia",
                  "Mollusca",
                  "Reptilia",
                  "Plantae",
                  "Protozoa",
                  "unknown"
                ]
              }
            },
            "name": "iconic_taxa",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "id_above"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "id_below"
          },
          {
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "most_agree",
                "most_disagree",
                "some_agree"
              ]
            },
            "name": "identifications",
            "description": "Filter by level of agreement among identifications:\n\n* **most_agree:** returns observations where there are more active identifications of taxa that agree with the Observation Taxon than active identifications that disagree with the Observation Taxon\n* **some_agree:** returns observations where there are some active identifications of taxa that agree with the Observation Taxon\n* **most_disagree:** returns observations where there are more active identifications of taxa that disagree with the Observation Taxon than active identifications that agree with the Observation Taxon"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "disagreements",
            "description": "Whether there is disagreement among active identifications"
          },
          {
            "in": "query",
            "schema": {
              "type": "number",
              "format": "float",
              "minimum": -90,
              "maximum": 90
            },
            "name": "lat"
          },
          {
            "in": "query",
            "schema": {
              "type": "number",
              "format": "float",
              "minimum": -180,
              "maximum": 180
            },
            "name": "lng"
          },
          {
            "in": "query",
            "schema": {
              "type": "number",
              "format": "float"
            },
            "name": "radius"
          },
          {
            "in": "query",
            "schema": {
              "type": "number",
              "format": "float",
              "minimum": -90,
              "maximum": 90
            },
            "name": "nelat"
          },
          {
            "in": "query",
            "schema": {
              "type": "number",
              "format": "float",
              "minimum": -180,
              "maximum": 180
            },
            "name": "nelng"
          },
          {
            "in": "query",
            "schema": {
              "type": "number",
              "format": "float",
              "minimum": -90,
              "maximum": 90
            },
            "name": "swlat"
          },
          {
            "in": "query",
            "schema": {
              "type": "number",
              "format": "float",
              "minimum": -180,
              "maximum": 180
            },
            "name": "swlng"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "list_id"
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "name": "not_in_project",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "not_matching_project_rules_for"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "q"
          },
          {
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "names",
                "tags",
                "description",
                "place",
                "taxon_page_obs_photos"
              ]
            },
            "name": "search_on"
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "casual",
                  "needs_id",
                  "research"
                ]
              }
            },
            "name": "quality_grade",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "without_field"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "outlink_source"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "updated_since"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "viewer_id"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "reviewed"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "expected_nearby"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "locale"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "preferred_place_id"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "ttl"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "page"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "per_page"
          },
          {
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "desc",
                "asc"
              ],
              "default": "desc"
            },
            "name": "order"
          },
          {
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "created_at",
                "geo_score",
                "id",
                "observed_on",
                "random",
                "species_guess",
                "updated_at",
                "votes"
              ],
              "default": "created_at"
            },
            "name": "order_by"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "only_id"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns points tiles.",
            "content": {
              "image/png": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/points/{zoom}/{x}/{y}.grid.json": {
      "parameters": [],
      "get": {
        "tags": [
          "UTFGrid"
        ],
        "summary": "JSON for points tiles",
        "security": [
          {
            "userJwtOptional": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "schema": {
              "type": "integer",
              "minimum": 0,
              "maximum": 21
            },
            "name": "zoom",
            "required": true
          },
          {
            "in": "path",
            "schema": {
              "type": "integer",
              "minimum": 0
            },
            "name": "x",
            "required": true
          },
          {
            "in": "path",
            "schema": {
              "type": "integer",
              "minimum": 0
            },
            "name": "y",
            "required": true
          },
          {
            "in": "query",
            "schema": {
              "type": "integer",
              "enum": [256, 512]
            },
            "name": "tile_size"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "acc",
            "description": "Filter by whether `positional_accuracy` is set or not"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "captive",
            "description": "Filter by captive / cultivated status"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "endemic",
            "description": "Filter by whether the observation is in a place with a check list entry indicating the establishment means is `endemic`"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "geo"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "id_please"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "identified"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "introduced"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "mappable"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "native"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "out_of_range"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "pcid",
            "deprecated": true
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "photos"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "popular"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "sounds"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "taxon_is_active"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "threatened",
            "description": "Filter by whether the observed taxon has a conservation status of \"threatened\" or worse"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "verifiable",
            "description": "Filter by whether observations are 'verifiable' (have quality grades `research` or `needs_id`)"
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "anyOf": [
                  {
                    "type": "string",
                    "format": "uuid"
                  },
                  {
                    "type": "integer"
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            },
            "name": "id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            },
            "name": "not_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "cc-by",
                  "cc-by-nc",
                  "cc-by-nd",
                  "cc-by-sa",
                  "cc-by-nc-nd",
                  "cc-by-nc-sa",
                  "cc0"
                ]
              }
            },
            "name": "license",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "cc-by",
                  "cc-by-nc",
                  "cc-by-nd",
                  "cc-by-sa",
                  "cc-by-nc-nd",
                  "cc-by-nc-sa",
                  "cc0"
                ]
              }
            },
            "name": "photo_license",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "licensed",
            "description": "Filter by observations where the license attribute is not null, i.e. it is licensed"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "photo_licensed",
            "description": "Filter by observations where the license attribute of at least one photo is not null"
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "anyOf": [
                  {
                    "type": "string",
                    "format": "uuid"
                  },
                  {
                    "type": "integer"
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            },
            "name": "place_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "anyOf": [
                  {
                    "type": "integer"
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            },
            "name": "project_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "coords_viewable_for_proj",
            "description": "Filter by observers who trust the project(s) specified in `project_id` OR trust the authenticated viewer"
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "kingdom",
                  "phylum",
                  "subphylum",
                  "superclass",
                  "class",
                  "subclass",
                  "infraclass",
                  "subterclass",
                  "superorder",
                  "order",
                  "suborder",
                  "infraorder",
                  "parvorder",
                  "zoosection",
                  "zoosubsection",
                  "superfamily",
                  "epifamily",
                  "family",
                  "subfamily",
                  "supertribe",
                  "tribe",
                  "subtribe",
                  "genus",
                  "genushybrid",
                  "subgenus",
                  "section",
                  "subsection",
                  "complex",
                  "species",
                  "hybrid",
                  "subspecies",
                  "variety",
                  "form",
                  "infrahybrid"
                ]
              }
            },
            "name": "rank",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "site_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "cc-by",
                  "cc-by-nc",
                  "cc-by-nd",
                  "cc-by-sa",
                  "cc-by-nc-nd",
                  "cc-by-nc-sa",
                  "cc0"
                ]
              }
            },
            "name": "sound_license",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "taxon_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "without_taxon_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "taxon_name"
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "name": "user_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "name": "user_login",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "minimum": 0,
                "maximum": 23
              }
            },
            "name": "hour",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "minimum": 1,
                "maximum": 31
              }
            },
            "name": "day",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "minimum": 1,
                "maximum": 12
              }
            },
            "name": "month",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "year",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "minimum": 1,
                "maximum": 31
              }
            },
            "name": "created_day",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "minimum": 1,
                "maximum": 12
              }
            },
            "name": "created_month",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "created_year",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "term_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "term_value_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "without_term_value_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "term_id_or_unknown",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "name": "annotation_user_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "acc_above"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "acc_below"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "acc_below_or_unknown"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "d1"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "d2"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "created_d1"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "created_d2"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "created_on"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "observed_on"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "unobserved_by_user_id"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "apply_project_rules_for"
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "observation_accuracy_experiment_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "cs"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "csa"
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "LC",
                  "NT",
                  "VU",
                  "EN",
                  "CR",
                  "EW",
                  "EX"
                ]
              }
            },
            "name": "csi",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "obscured",
                  "obscured_private",
                  "open",
                  "private"
                ]
              }
            },
            "name": "geoprivacy",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "obscured",
                  "obscured_private",
                  "open",
                  "private"
                ]
              }
            },
            "name": "taxon_geoprivacy",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "obscured",
                  "private",
                  "none"
                ]
              }
            },
            "name": "obscuration",
            "description": "Filter by observations where the `geoprivacy` or `taxon_geoprivacy` match these values",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "kingdom",
                  "phylum",
                  "subphylum",
                  "superclass",
                  "class",
                  "subclass",
                  "infraclass",
                  "subterclass",
                  "superorder",
                  "order",
                  "suborder",
                  "infraorder",
                  "parvorder",
                  "zoosection",
                  "zoosubsection",
                  "superfamily",
                  "epifamily",
                  "family",
                  "subfamily",
                  "supertribe",
                  "tribe",
                  "subtribe",
                  "genus",
                  "genushybrid",
                  "subgenus",
                  "section",
                  "subsection",
                  "complex",
                  "species",
                  "hybrid",
                  "subspecies",
                  "variety",
                  "form",
                  "infrahybrid"
                ]
              }
            },
            "name": "hrank",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "kingdom",
                  "phylum",
                  "subphylum",
                  "superclass",
                  "class",
                  "subclass",
                  "infraclass",
                  "subterclass",
                  "superorder",
                  "order",
                  "suborder",
                  "infraorder",
                  "parvorder",
                  "zoosection",
                  "zoosubsection",
                  "superfamily",
                  "epifamily",
                  "family",
                  "subfamily",
                  "supertribe",
                  "tribe",
                  "subtribe",
                  "genus",
                  "genushybrid",
                  "subgenus",
                  "section",
                  "subsection",
                  "complex",
                  "species",
                  "hybrid",
                  "subspecies",
                  "variety",
                  "form",
                  "infrahybrid"
                ]
              }
            },
            "name": "lrank",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "Actinopterygii",
                  "Animalia",
                  "Amphibia",
                  "Arachnida",
                  "Aves",
                  "Chromista",
                  "Fungi",
                  "Insecta",
                  "Mammalia",
                  "Mollusca",
                  "Reptilia",
                  "Plantae",
                  "Protozoa",
                  "unknown"
                ]
              }
            },
            "name": "iconic_taxa",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "id_above"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "id_below"
          },
          {
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "most_agree",
                "most_disagree",
                "some_agree"
              ]
            },
            "name": "identifications",
            "description": "Filter by level of agreement among identifications:\n\n* **most_agree:** returns observations where there are more active identifications of taxa that agree with the Observation Taxon than active identifications that disagree with the Observation Taxon\n* **some_agree:** returns observations where there are some active identifications of taxa that agree with the Observation Taxon\n* **most_disagree:** returns observations where there are more active identifications of taxa that disagree with the Observation Taxon than active identifications that agree with the Observation Taxon"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "disagreements",
            "description": "Whether there is disagreement among active identifications"
          },
          {
            "in": "query",
            "schema": {
              "type": "number",
              "format": "float",
              "minimum": -90,
              "maximum": 90
            },
            "name": "lat"
          },
          {
            "in": "query",
            "schema": {
              "type": "number",
              "format": "float",
              "minimum": -180,
              "maximum": 180
            },
            "name": "lng"
          },
          {
            "in": "query",
            "schema": {
              "type": "number",
              "format": "float"
            },
            "name": "radius"
          },
          {
            "in": "query",
            "schema": {
              "type": "number",
              "format": "float",
              "minimum": -90,
              "maximum": 90
            },
            "name": "nelat"
          },
          {
            "in": "query",
            "schema": {
              "type": "number",
              "format": "float",
              "minimum": -180,
              "maximum": 180
            },
            "name": "nelng"
          },
          {
            "in": "query",
            "schema": {
              "type": "number",
              "format": "float",
              "minimum": -90,
              "maximum": 90
            },
            "name": "swlat"
          },
          {
            "in": "query",
            "schema": {
              "type": "number",
              "format": "float",
              "minimum": -180,
              "maximum": 180
            },
            "name": "swlng"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "list_id"
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "name": "not_in_project",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "not_matching_project_rules_for"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "q"
          },
          {
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "names",
                "tags",
                "description",
                "place",
                "taxon_page_obs_photos"
              ]
            },
            "name": "search_on"
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "casual",
                  "needs_id",
                  "research"
                ]
              }
            },
            "name": "quality_grade",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "without_field"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "outlink_source"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "updated_since"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "viewer_id"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "reviewed"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "expected_nearby"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "locale"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "preferred_place_id"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "ttl"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "page"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "per_page"
          },
          {
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "desc",
                "asc"
              ],
              "default": "desc"
            },
            "name": "order"
          },
          {
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "created_at",
                "geo_score",
                "id",
                "observed_on",
                "random",
                "species_guess",
                "updated_at",
                "votes"
              ],
              "default": "created_at"
            },
            "name": "order_by"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "only_id"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a UTFGrid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UtfGrid"
                }
              }
            }
          }
        }
      }
    },
    "/places/{uuid}": {
      "parameters": [],
      "get": {
        "tags": [
          "Places"
        ],
        "summary": "Fetch places",
        "parameters": [
          {
            "in": "path",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "name": "uuid",
            "description": "A single UUID or a comma-separated list of them",
            "required": true,
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "lat",
            "description": "Latitude of coordinate used to sort results by distance"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "lng",
            "description": "Longitude of coordinate used to sort results by distance"
          },
          {
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "admin_and_distance"
              ]
            },
            "name": "order_by",
            "description": "Order results by admin level and distance from a point specified in lat and lng"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "fields"
          },
          {
            "in": "header",
            "schema": {
              "type": "string"
            },
            "name": "X-HTTP-Method-Override"
          }
        ],
        "responses": {
          "200": {
            "description": "An array of places",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultsPlaces"
                }
              }
            }
          }
        }
      }
    },
    "/places/{id}/{zoom}/{x}/{y}.png": {
      "parameters": [],
      "get": {
        "tags": [
          "Polygon Tiles"
        ],
        "summary": "Place Tiles",
        "security": [
          {
            "userJwtOptional": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "schema": {
              "type": "string"
            },
            "name": "id",
            "required": true
          },
          {
            "in": "path",
            "schema": {
              "type": "integer",
              "minimum": 0,
              "maximum": 21
            },
            "name": "zoom",
            "required": true
          },
          {
            "in": "path",
            "schema": {
              "type": "integer",
              "minimum": 0
            },
            "name": "x",
            "required": true
          },
          {
            "in": "path",
            "schema": {
              "type": "integer",
              "minimum": 0
            },
            "name": "y",
            "required": true
          },
          {
            "in": "query",
            "schema": {
              "type": "integer",
              "enum": [256, 512]
            },
            "name": "tile_size"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "acc",
            "description": "Filter by whether `positional_accuracy` is set or not"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "captive",
            "description": "Filter by captive / cultivated status"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "endemic",
            "description": "Filter by whether the observation is in a place with a check list entry indicating the establishment means is `endemic`"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "geo"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "id_please"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "identified"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "introduced"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "mappable"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "native"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "out_of_range"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "pcid",
            "deprecated": true
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "photos"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "popular"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "sounds"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "taxon_is_active"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "threatened",
            "description": "Filter by whether the observed taxon has a conservation status of \"threatened\" or worse"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "verifiable",
            "description": "Filter by whether observations are 'verifiable' (have quality grades `research` or `needs_id`)"
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            },
            "name": "not_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "cc-by",
                  "cc-by-nc",
                  "cc-by-nd",
                  "cc-by-sa",
                  "cc-by-nc-nd",
                  "cc-by-nc-sa",
                  "cc0"
                ]
              }
            },
            "name": "license",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "cc-by",
                  "cc-by-nc",
                  "cc-by-nd",
                  "cc-by-sa",
                  "cc-by-nc-nd",
                  "cc-by-nc-sa",
                  "cc0"
                ]
              }
            },
            "name": "photo_license",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "licensed",
            "description": "Filter by observations where the license attribute is not null, i.e. it is licensed"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "photo_licensed",
            "description": "Filter by observations where the license attribute of at least one photo is not null"
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "anyOf": [
                  {
                    "type": "string",
                    "format": "uuid"
                  },
                  {
                    "type": "integer"
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            },
            "name": "place_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "anyOf": [
                  {
                    "type": "integer"
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            },
            "name": "project_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "coords_viewable_for_proj",
            "description": "Filter by observers who trust the project(s) specified in `project_id` OR trust the authenticated viewer"
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "kingdom",
                  "phylum",
                  "subphylum",
                  "superclass",
                  "class",
                  "subclass",
                  "infraclass",
                  "subterclass",
                  "superorder",
                  "order",
                  "suborder",
                  "infraorder",
                  "parvorder",
                  "zoosection",
                  "zoosubsection",
                  "superfamily",
                  "epifamily",
                  "family",
                  "subfamily",
                  "supertribe",
                  "tribe",
                  "subtribe",
                  "genus",
                  "genushybrid",
                  "subgenus",
                  "section",
                  "subsection",
                  "complex",
                  "species",
                  "hybrid",
                  "subspecies",
                  "variety",
                  "form",
                  "infrahybrid"
                ]
              }
            },
            "name": "rank",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "site_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "cc-by",
                  "cc-by-nc",
                  "cc-by-nd",
                  "cc-by-sa",
                  "cc-by-nc-nd",
                  "cc-by-nc-sa",
                  "cc0"
                ]
              }
            },
            "name": "sound_license",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "taxon_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "without_taxon_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "taxon_name"
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "name": "user_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "name": "user_login",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "minimum": 0,
                "maximum": 23
              }
            },
            "name": "hour",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "minimum": 1,
                "maximum": 31
              }
            },
            "name": "day",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "minimum": 1,
                "maximum": 12
              }
            },
            "name": "month",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "year",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "minimum": 1,
                "maximum": 31
              }
            },
            "name": "created_day",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "minimum": 1,
                "maximum": 12
              }
            },
            "name": "created_month",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "created_year",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "term_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "term_value_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "without_term_value_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "term_id_or_unknown",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "name": "annotation_user_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "acc_above"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "acc_below"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "acc_below_or_unknown"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "d1"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "d2"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "created_d1"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "created_d2"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "created_on"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "observed_on"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "unobserved_by_user_id"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "apply_project_rules_for"
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "observation_accuracy_experiment_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "cs"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "csa"
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "LC",
                  "NT",
                  "VU",
                  "EN",
                  "CR",
                  "EW",
                  "EX"
                ]
              }
            },
            "name": "csi",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "obscured",
                  "obscured_private",
                  "open",
                  "private"
                ]
              }
            },
            "name": "geoprivacy",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "obscured",
                  "obscured_private",
                  "open",
                  "private"
                ]
              }
            },
            "name": "taxon_geoprivacy",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "obscured",
                  "private",
                  "none"
                ]
              }
            },
            "name": "obscuration",
            "description": "Filter by observations where the `geoprivacy` or `taxon_geoprivacy` match these values",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "kingdom",
                  "phylum",
                  "subphylum",
                  "superclass",
                  "class",
                  "subclass",
                  "infraclass",
                  "subterclass",
                  "superorder",
                  "order",
                  "suborder",
                  "infraorder",
                  "parvorder",
                  "zoosection",
                  "zoosubsection",
                  "superfamily",
                  "epifamily",
                  "family",
                  "subfamily",
                  "supertribe",
                  "tribe",
                  "subtribe",
                  "genus",
                  "genushybrid",
                  "subgenus",
                  "section",
                  "subsection",
                  "complex",
                  "species",
                  "hybrid",
                  "subspecies",
                  "variety",
                  "form",
                  "infrahybrid"
                ]
              }
            },
            "name": "hrank",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "kingdom",
                  "phylum",
                  "subphylum",
                  "superclass",
                  "class",
                  "subclass",
                  "infraclass",
                  "subterclass",
                  "superorder",
                  "order",
                  "suborder",
                  "infraorder",
                  "parvorder",
                  "zoosection",
                  "zoosubsection",
                  "superfamily",
                  "epifamily",
                  "family",
                  "subfamily",
                  "supertribe",
                  "tribe",
                  "subtribe",
                  "genus",
                  "genushybrid",
                  "subgenus",
                  "section",
                  "subsection",
                  "complex",
                  "species",
                  "hybrid",
                  "subspecies",
                  "variety",
                  "form",
                  "infrahybrid"
                ]
              }
            },
            "name": "lrank",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "Actinopterygii",
                  "Animalia",
                  "Amphibia",
                  "Arachnida",
                  "Aves",
                  "Chromista",
                  "Fungi",
                  "Insecta",
                  "Mammalia",
                  "Mollusca",
                  "Reptilia",
                  "Plantae",
                  "Protozoa",
                  "unknown"
                ]
              }
            },
            "name": "iconic_taxa",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "id_above"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "id_below"
          },
          {
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "most_agree",
                "most_disagree",
                "some_agree"
              ]
            },
            "name": "identifications",
            "description": "Filter by level of agreement among identifications:\n\n* **most_agree:** returns observations where there are more active identifications of taxa that agree with the Observation Taxon than active identifications that disagree with the Observation Taxon\n* **some_agree:** returns observations where there are some active identifications of taxa that agree with the Observation Taxon\n* **most_disagree:** returns observations where there are more active identifications of taxa that disagree with the Observation Taxon than active identifications that agree with the Observation Taxon"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "disagreements",
            "description": "Whether there is disagreement among active identifications"
          },
          {
            "in": "query",
            "schema": {
              "type": "number",
              "format": "float",
              "minimum": -90,
              "maximum": 90
            },
            "name": "lat"
          },
          {
            "in": "query",
            "schema": {
              "type": "number",
              "format": "float",
              "minimum": -180,
              "maximum": 180
            },
            "name": "lng"
          },
          {
            "in": "query",
            "schema": {
              "type": "number",
              "format": "float"
            },
            "name": "radius"
          },
          {
            "in": "query",
            "schema": {
              "type": "number",
              "format": "float",
              "minimum": -90,
              "maximum": 90
            },
            "name": "nelat"
          },
          {
            "in": "query",
            "schema": {
              "type": "number",
              "format": "float",
              "minimum": -180,
              "maximum": 180
            },
            "name": "nelng"
          },
          {
            "in": "query",
            "schema": {
              "type": "number",
              "format": "float",
              "minimum": -90,
              "maximum": 90
            },
            "name": "swlat"
          },
          {
            "in": "query",
            "schema": {
              "type": "number",
              "format": "float",
              "minimum": -180,
              "maximum": 180
            },
            "name": "swlng"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "list_id"
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "name": "not_in_project",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "not_matching_project_rules_for"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "q"
          },
          {
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "names",
                "tags",
                "description",
                "place",
                "taxon_page_obs_photos"
              ]
            },
            "name": "search_on"
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "casual",
                  "needs_id",
                  "research"
                ]
              }
            },
            "name": "quality_grade",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "without_field"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "outlink_source"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "updated_since"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "viewer_id"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "reviewed"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "expected_nearby"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "locale"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "preferred_place_id"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "ttl"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "page"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "per_page"
          },
          {
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "desc",
                "asc"
              ],
              "default": "desc"
            },
            "name": "order"
          },
          {
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "created_at",
                "geo_score",
                "id",
                "observed_on",
                "random",
                "species_guess",
                "updated_at",
                "votes"
              ],
              "default": "created_at"
            },
            "name": "order_by"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "only_id"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns place tiles.",
            "content": {
              "image/png": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/photos/{id}": {
      "parameters": [],
      "put": {
        "tags": [
          "Photos"
        ],
        "summary": "Update a photo",
        "security": [
          {
            "userJwtRequired": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "schema": {
              "type": "integer"
            },
            "name": "id",
            "description": "A single ID",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "An array of photos.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultsPhotos"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/observations/{uuid}/viewed_updates": {
      "parameters": [],
      "put": {
        "tags": [
          "Observations"
        ],
        "summary": "Mark all updates associated with this observation as viewed by logged-in user",
        "security": [
          {
            "userJwtRequired": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            },
            "name": "uuid",
            "description": "A single UUID or a comma-separated list of them",
            "required": true,
            "explode": false
          }
        ],
        "responses": {
          "204": {
            "description": "Observation updates marked as viewed"
          }
        }
      }
    },
    "/observations/{uuid}/taxon_summary": {
      "parameters": [],
      "get": {
        "tags": [
          "Observations"
        ],
        "summary": "Additional information about an observation's taxon",
        "description": "Shows additional information about an observation's taxon given the observation's coordinates, including relevant a conservation status and establishment means",
        "security": [
          {
            "userJwtOptional": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "name": "uuid",
            "description": "A single observation UUID",
            "required": true
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "community",
            "description": "Show info about the community taxon instead of the observation taxon"
          }
        ],
        "responses": {
          "200": {
            "description": "An array of quality metrics",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultsTaxonSummary"
                }
              }
            }
          }
        }
      }
    },
    "/observations/{uuid}/subscriptions": {
      "parameters": [],
      "get": {
        "tags": [
          "Observations"
        ],
        "summary": "List the authenticated user's subscriptions to this observation",
        "description": "Includes subscriptions to this specific observation and to the user who made this observation. Generally only useful to detect whether the authenticated user is subscribed to these records.",
        "security": [
          {
            "userJwtRequired": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "name": "uuid",
            "description": "A single observation UUID",
            "required": true
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "fields"
          },
          {
            "in": "header",
            "schema": {
              "type": "string"
            },
            "name": "X-HTTP-Method-Override"
          }
        ],
        "responses": {
          "200": {
            "description": "An array of subscriptions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultsSubscriptions"
                }
              }
            }
          }
        }
      }
    },
    "/observations/{uuid}/subscription": {
      "parameters": [],
      "put": {
        "tags": [
          "Observations"
        ],
        "summary": "Toggle the authenticated user's subscription to an observation",
        "security": [
          {
            "userJwtRequired": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "name": "uuid",
            "description": "A single observation UUID",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Subscription toggled"
          }
        }
      }
    },
    "/observations/{uuid}/review": {
      "parameters": [],
      "post": {
        "tags": [
          "Observations"
        ],
        "summary": "Review an observation",
        "security": [
          {
            "userJwtRequired": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            },
            "name": "uuid",
            "description": "A single UUID or a comma-separated list of them",
            "required": true,
            "explode": false
          }
        ],
        "responses": {
          "204": {
            "description": "Observation reviewed"
          }
        }
      },
      "delete": {
        "tags": [
          "Observations"
        ],
        "summary": "Remove a review from an observation",
        "security": [
          {
            "userJwtRequired": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            },
            "name": "uuid",
            "description": "A single UUID or a comma-separated list of them",
            "required": true,
            "explode": false
          }
        ],
        "responses": {
          "204": {
            "description": "Observation review removed"
          }
        }
      }
    },
    "/observations/{uuid}/quality/{metric}": {
      "parameters": [],
      "post": {
        "tags": [
          "Observations"
        ],
        "summary": "Vote on an observation quality metric",
        "security": [
          {
            "userJwtRequired": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            },
            "name": "uuid",
            "description": "A single UUID",
            "required": true,
            "explode": false
          },
          {
            "in": "path",
            "schema": {
              "type": "string",
              "enum": [
                "date",
                "evidence",
                "location",
                "needs_id",
                "recent",
                "wild",
                "subject"
              ]
            },
            "name": "metric",
            "description": " The metric being voted on.\n\n            date: Whether or not the date seems accurate.\n            evidence: Whether the media presents evidence for the presence of the organism.\n            location: Whether the location seems accurate.\n            needs_id: Whether the observation should remain in the Needs ID category.\n            recent: Whether the evidence demonstrates that the organism was present recently.\n            wild: Whether the individual organism was where and when it was without human intervention.\n            subject: Whether the media evidence is related to a single subject.\n          ",
            "required": true
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "agree"
          }
        ],
        "responses": {
          "204": {
            "description": "Vote was successful"
          }
        }
      },
      "delete": {
        "tags": [
          "Observations"
        ],
        "summary": "Remove the authenticated user's vote on a quality metric",
        "security": [
          {
            "userJwtRequired": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            },
            "name": "uuid",
            "description": "A single UUID",
            "required": true,
            "explode": false
          },
          {
            "in": "path",
            "schema": {
              "type": "string",
              "enum": [
                "date",
                "evidence",
                "location",
                "needs_id",
                "recent",
                "wild",
                "subject"
              ]
            },
            "name": "metric",
            "description": "The metric being voted on",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Vote removal was successful"
          }
        }
      }
    },
    "/observations/{uuid}/quality_metrics": {
      "parameters": [],
      "get": {
        "tags": [
          "Observations"
        ],
        "summary": "Fetch quality metrics for observations",
        "security": [
          {
            "userJwtOptional": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            },
            "name": "uuid",
            "description": "A single UUID or a comma-separated list of them",
            "required": true,
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "fields"
          },
          {
            "in": "header",
            "schema": {
              "type": "string"
            },
            "name": "X-HTTP-Method-Override"
          }
        ],
        "responses": {
          "200": {
            "description": "An array of quality metrics",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultsQualityMetrics"
                }
              }
            }
          }
        }
      }
    },
    "/observations/{uuid}/fave": {
      "parameters": [],
      "post": {
        "tags": [
          "Observations"
        ],
        "summary": "Fave an observation",
        "security": [
          {
            "userJwtRequired": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            },
            "name": "uuid",
            "description": "A single UUID or a comma-separated list of them",
            "required": true,
            "explode": false
          }
        ],
        "responses": {
          "204": {
            "description": "Observation faved"
          }
        }
      },
      "delete": {
        "tags": [
          "Observations"
        ],
        "summary": "Remove a fave on an observation",
        "security": [
          {
            "userJwtRequired": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            },
            "name": "uuid",
            "description": "A single UUID or a comma-separated list of them",
            "required": true,
            "explode": false
          }
        ],
        "responses": {
          "204": {
            "description": "Observation fave removed"
          }
        }
      }
    },
    "/observations/{uuid}": {
      "parameters": [],
      "get": {
        "tags": [
          "Observations"
        ],
        "summary": "Fetch observations",
        "security": [
          {
            "userJwtOptional": []
          }
        ],
        "x-default-ttl": -1,
        "parameters": [
          {
            "in": "path",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            },
            "name": "uuid",
            "description": "A single UUID or a comma-separated list of them",
            "required": true,
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "fields"
          },
          {
            "in": "header",
            "schema": {
              "type": "string"
            },
            "name": "X-HTTP-Method-Override"
          }
        ],
        "responses": {
          "200": {
            "description": "An array of observations.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultsObservations"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "Observations"
        ],
        "summary": "Update an observation.",
        "security": [
          {
            "userJwtRequired": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "name": "uuid",
            "description": "A single UUID",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ObservationsUpdate"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ObservationsUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "A list of observations.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultsObservations"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Observations"
        ],
        "summary": "Delete an observation",
        "security": [
          {
            "userJwtRequired": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "name": "uuid",
            "description": "A single UUID",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "No response body; success implies deletion"
          }
        }
      }
    },
    "/observation_sounds/{uuid}": {
      "parameters": [],
      "put": {
        "tags": [
          "ObservationSounds"
        ],
        "summary": "Update an observation sound",
        "security": [
          {
            "userJwtRequired": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "name": "uuid",
            "description": "A single UUID",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ObservationSoundsUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "A list of observation sounds",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultsObservationSounds"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ObservationSounds"
        ],
        "summary": "Delete an observation sound",
        "security": [
          {
            "userJwtRequired": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "name": "uuid",
            "description": "A single UUID",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "No response body; success implies deletion"
          }
        }
      }
    },
    "/observation_photos/{uuid}": {
      "parameters": [],
      "put": {
        "tags": [
          "ObservationPhotos"
        ],
        "summary": "Update an observation photo",
        "security": [
          {
            "userJwtRequired": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "name": "uuid",
            "description": "A single UUID",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ObservationPhotosUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "A list of observation photos",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultsObservationPhotos"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ObservationPhotos"
        ],
        "summary": "Delete an observation photo",
        "security": [
          {
            "userJwtRequired": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "name": "uuid",
            "description": "A single UUID",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "No response body; success implies deletion"
          }
        }
      }
    },
    "/observation_field_values/{uuid}": {
      "parameters": [],
      "put": {
        "tags": [
          "ObservationFieldValues"
        ],
        "summary": "Update an observation field value",
        "security": [
          {
            "userJwtOptional": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "name": "uuid",
            "description": "A single UUID",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ObservationFieldValuesCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "A list of observation field values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultsObservationFieldValues"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ObservationFieldValues"
        ],
        "summary": "Delete an observation field value",
        "security": [
          {
            "userJwtRequired": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "name": "uuid",
            "description": "A single UUID",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Observation field value deleted"
          }
        }
      }
    },
    "/messages/{id}": {
      "parameters": [],
      "get": {
        "tags": [
          "Messages"
        ],
        "summary": "Retrieve messages in a thread",
        "security": [
          {
            "userJwtRequired": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "schema": {
              "type": "integer"
            },
            "name": "id",
            "description": "ID of the record",
            "required": true
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "fields"
          },
          {
            "in": "header",
            "schema": {
              "type": "string"
            },
            "name": "X-HTTP-Method-Override"
          }
        ],
        "responses": {
          "200": {
            "description": "An array of messages.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultsMessagesThread"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/identifications/{uuid}": {
      "parameters": [],
      "put": {
        "tags": [
          "Identifications"
        ],
        "summary": "Update an identification",
        "security": [
          {
            "userJwtOptional": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "name": "uuid",
            "description": "A single UUID",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdentificationsUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An array of identifications.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultsObservations"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Identifications"
        ],
        "summary": "Delete an identification",
        "description": "Note that unlike API v1, this completely deletes the identification. To withdraw the identification, update `current` to `false`.",
        "security": [
          {
            "userJwtRequired": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "name": "uuid",
            "description": "A single UUID",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "No response body; success implies deletion"
          }
        }
      }
    },
    "/heatmap/{zoom}/{x}/{y}.png": {
      "parameters": [],
      "get": {
        "tags": [
          "Observation Tiles"
        ],
        "summary": "Grid Tiles",
        "security": [
          {
            "userJwtOptional": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "schema": {
              "type": "integer",
              "minimum": 0,
              "maximum": 21
            },
            "name": "zoom",
            "required": true
          },
          {
            "in": "path",
            "schema": {
              "type": "integer",
              "minimum": 0
            },
            "name": "x",
            "required": true
          },
          {
            "in": "path",
            "schema": {
              "type": "integer",
              "minimum": 0
            },
            "name": "y",
            "required": true
          },
          {
            "in": "query",
            "schema": {
              "type": "integer",
              "enum": [256, 512]
            },
            "name": "tile_size"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "acc",
            "description": "Filter by whether `positional_accuracy` is set or not"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "captive",
            "description": "Filter by captive / cultivated status"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "endemic",
            "description": "Filter by whether the observation is in a place with a check list entry indicating the establishment means is `endemic`"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "geo"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "id_please"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "identified"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "introduced"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "mappable"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "native"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "out_of_range"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "pcid",
            "deprecated": true
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "photos"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "popular"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "sounds"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "taxon_is_active"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "threatened",
            "description": "Filter by whether the observed taxon has a conservation status of \"threatened\" or worse"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "verifiable",
            "description": "Filter by whether observations are 'verifiable' (have quality grades `research` or `needs_id`)"
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "anyOf": [
                  {
                    "type": "string",
                    "format": "uuid"
                  },
                  {
                    "type": "integer"
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            },
            "name": "id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            },
            "name": "not_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "cc-by",
                  "cc-by-nc",
                  "cc-by-nd",
                  "cc-by-sa",
                  "cc-by-nc-nd",
                  "cc-by-nc-sa",
                  "cc0"
                ]
              }
            },
            "name": "license",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "cc-by",
                  "cc-by-nc",
                  "cc-by-nd",
                  "cc-by-sa",
                  "cc-by-nc-nd",
                  "cc-by-nc-sa",
                  "cc0"
                ]
              }
            },
            "name": "photo_license",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "licensed",
            "description": "Filter by observations where the license attribute is not null, i.e. it is licensed"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "photo_licensed",
            "description": "Filter by observations where the license attribute of at least one photo is not null"
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "anyOf": [
                  {
                    "type": "string",
                    "format": "uuid"
                  },
                  {
                    "type": "integer"
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            },
            "name": "place_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "anyOf": [
                  {
                    "type": "integer"
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            },
            "name": "project_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "coords_viewable_for_proj",
            "description": "Filter by observers who trust the project(s) specified in `project_id` OR trust the authenticated viewer"
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "kingdom",
                  "phylum",
                  "subphylum",
                  "superclass",
                  "class",
                  "subclass",
                  "infraclass",
                  "subterclass",
                  "superorder",
                  "order",
                  "suborder",
                  "infraorder",
                  "parvorder",
                  "zoosection",
                  "zoosubsection",
                  "superfamily",
                  "epifamily",
                  "family",
                  "subfamily",
                  "supertribe",
                  "tribe",
                  "subtribe",
                  "genus",
                  "genushybrid",
                  "subgenus",
                  "section",
                  "subsection",
                  "complex",
                  "species",
                  "hybrid",
                  "subspecies",
                  "variety",
                  "form",
                  "infrahybrid"
                ]
              }
            },
            "name": "rank",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "site_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "cc-by",
                  "cc-by-nc",
                  "cc-by-nd",
                  "cc-by-sa",
                  "cc-by-nc-nd",
                  "cc-by-nc-sa",
                  "cc0"
                ]
              }
            },
            "name": "sound_license",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "taxon_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "without_taxon_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "taxon_name"
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "name": "user_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "name": "user_login",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "minimum": 0,
                "maximum": 23
              }
            },
            "name": "hour",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "minimum": 1,
                "maximum": 31
              }
            },
            "name": "day",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "minimum": 1,
                "maximum": 12
              }
            },
            "name": "month",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "year",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "minimum": 1,
                "maximum": 31
              }
            },
            "name": "created_day",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "minimum": 1,
                "maximum": 12
              }
            },
            "name": "created_month",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "created_year",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "term_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "term_value_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "without_term_value_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "term_id_or_unknown",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "name": "annotation_user_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "acc_above"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "acc_below"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "acc_below_or_unknown"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "d1"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "d2"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "created_d1"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "created_d2"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "created_on"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "observed_on"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "unobserved_by_user_id"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "apply_project_rules_for"
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "observation_accuracy_experiment_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "cs"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "csa"
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "LC",
                  "NT",
                  "VU",
                  "EN",
                  "CR",
                  "EW",
                  "EX"
                ]
              }
            },
            "name": "csi",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "obscured",
                  "obscured_private",
                  "open",
                  "private"
                ]
              }
            },
            "name": "geoprivacy",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "obscured",
                  "obscured_private",
                  "open",
                  "private"
                ]
              }
            },
            "name": "taxon_geoprivacy",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "obscured",
                  "private",
                  "none"
                ]
              }
            },
            "name": "obscuration",
            "description": "Filter by observations where the `geoprivacy` or `taxon_geoprivacy` match these values",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "kingdom",
                  "phylum",
                  "subphylum",
                  "superclass",
                  "class",
                  "subclass",
                  "infraclass",
                  "subterclass",
                  "superorder",
                  "order",
                  "suborder",
                  "infraorder",
                  "parvorder",
                  "zoosection",
                  "zoosubsection",
                  "superfamily",
                  "epifamily",
                  "family",
                  "subfamily",
                  "supertribe",
                  "tribe",
                  "subtribe",
                  "genus",
                  "genushybrid",
                  "subgenus",
                  "section",
                  "subsection",
                  "complex",
                  "species",
                  "hybrid",
                  "subspecies",
                  "variety",
                  "form",
                  "infrahybrid"
                ]
              }
            },
            "name": "hrank",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "kingdom",
                  "phylum",
                  "subphylum",
                  "superclass",
                  "class",
                  "subclass",
                  "infraclass",
                  "subterclass",
                  "superorder",
                  "order",
                  "suborder",
                  "infraorder",
                  "parvorder",
                  "zoosection",
                  "zoosubsection",
                  "superfamily",
                  "epifamily",
                  "family",
                  "subfamily",
                  "supertribe",
                  "tribe",
                  "subtribe",
                  "genus",
                  "genushybrid",
                  "subgenus",
                  "section",
                  "subsection",
                  "complex",
                  "species",
                  "hybrid",
                  "subspecies",
                  "variety",
                  "form",
                  "infrahybrid"
                ]
              }
            },
            "name": "lrank",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "Actinopterygii",
                  "Animalia",
                  "Amphibia",
                  "Arachnida",
                  "Aves",
                  "Chromista",
                  "Fungi",
                  "Insecta",
                  "Mammalia",
                  "Mollusca",
                  "Reptilia",
                  "Plantae",
                  "Protozoa",
                  "unknown"
                ]
              }
            },
            "name": "iconic_taxa",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "id_above"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "id_below"
          },
          {
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "most_agree",
                "most_disagree",
                "some_agree"
              ]
            },
            "name": "identifications",
            "description": "Filter by level of agreement among identifications:\n\n* **most_agree:** returns observations where there are more active identifications of taxa that agree with the Observation Taxon than active identifications that disagree with the Observation Taxon\n* **some_agree:** returns observations where there are some active identifications of taxa that agree with the Observation Taxon\n* **most_disagree:** returns observations where there are more active identifications of taxa that disagree with the Observation Taxon than active identifications that agree with the Observation Taxon"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "disagreements",
            "description": "Whether there is disagreement among active identifications"
          },
          {
            "in": "query",
            "schema": {
              "type": "number",
              "format": "float",
              "minimum": -90,
              "maximum": 90
            },
            "name": "lat"
          },
          {
            "in": "query",
            "schema": {
              "type": "number",
              "format": "float",
              "minimum": -180,
              "maximum": 180
            },
            "name": "lng"
          },
          {
            "in": "query",
            "schema": {
              "type": "number",
              "format": "float"
            },
            "name": "radius"
          },
          {
            "in": "query",
            "schema": {
              "type": "number",
              "format": "float",
              "minimum": -90,
              "maximum": 90
            },
            "name": "nelat"
          },
          {
            "in": "query",
            "schema": {
              "type": "number",
              "format": "float",
              "minimum": -180,
              "maximum": 180
            },
            "name": "nelng"
          },
          {
            "in": "query",
            "schema": {
              "type": "number",
              "format": "float",
              "minimum": -90,
              "maximum": 90
            },
            "name": "swlat"
          },
          {
            "in": "query",
            "schema": {
              "type": "number",
              "format": "float",
              "minimum": -180,
              "maximum": 180
            },
            "name": "swlng"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "list_id"
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "name": "not_in_project",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "not_matching_project_rules_for"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "q"
          },
          {
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "names",
                "tags",
                "description",
                "place",
                "taxon_page_obs_photos"
              ]
            },
            "name": "search_on"
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "casual",
                  "needs_id",
                  "research"
                ]
              }
            },
            "name": "quality_grade",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "without_field"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "outlink_source"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "updated_since"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "viewer_id"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "reviewed"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "expected_nearby"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "locale"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "preferred_place_id"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "ttl"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "page"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "per_page"
          },
          {
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "desc",
                "asc"
              ],
              "default": "desc"
            },
            "name": "order"
          },
          {
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "created_at",
                "geo_score",
                "id",
                "observed_on",
                "random",
                "species_guess",
                "updated_at",
                "votes"
              ],
              "default": "created_at"
            },
            "name": "order_by"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "only_id"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns heatmap tiles.",
            "content": {
              "image/png": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/grid/{zoom}/{x}/{y}.png": {
      "parameters": [],
      "get": {
        "tags": [
          "Observation Tiles"
        ],
        "summary": "Grid Tiles",
        "security": [
          {
            "userJwtOptional": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "schema": {
              "type": "integer",
              "minimum": 0,
              "maximum": 21
            },
            "name": "zoom",
            "required": true
          },
          {
            "in": "path",
            "schema": {
              "type": "integer",
              "minimum": 0
            },
            "name": "x",
            "required": true
          },
          {
            "in": "path",
            "schema": {
              "type": "integer",
              "minimum": 0
            },
            "name": "y",
            "required": true
          },
          {
            "in": "query",
            "schema": {
              "type": "integer",
              "enum": [256, 512]
            },
            "name": "tile_size"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "acc",
            "description": "Filter by whether `positional_accuracy` is set or not"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "captive",
            "description": "Filter by captive / cultivated status"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "endemic",
            "description": "Filter by whether the observation is in a place with a check list entry indicating the establishment means is `endemic`"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "geo"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "id_please"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "identified"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "introduced"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "mappable"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "native"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "out_of_range"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "pcid",
            "deprecated": true
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "photos"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "popular"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "sounds"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "taxon_is_active"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "threatened",
            "description": "Filter by whether the observed taxon has a conservation status of \"threatened\" or worse"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "verifiable",
            "description": "Filter by whether observations are 'verifiable' (have quality grades `research` or `needs_id`)"
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "anyOf": [
                  {
                    "type": "string",
                    "format": "uuid"
                  },
                  {
                    "type": "integer"
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            },
            "name": "id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            },
            "name": "not_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "cc-by",
                  "cc-by-nc",
                  "cc-by-nd",
                  "cc-by-sa",
                  "cc-by-nc-nd",
                  "cc-by-nc-sa",
                  "cc0"
                ]
              }
            },
            "name": "license",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "cc-by",
                  "cc-by-nc",
                  "cc-by-nd",
                  "cc-by-sa",
                  "cc-by-nc-nd",
                  "cc-by-nc-sa",
                  "cc0"
                ]
              }
            },
            "name": "photo_license",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "licensed",
            "description": "Filter by observations where the license attribute is not null, i.e. it is licensed"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "photo_licensed",
            "description": "Filter by observations where the license attribute of at least one photo is not null"
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "anyOf": [
                  {
                    "type": "string",
                    "format": "uuid"
                  },
                  {
                    "type": "integer"
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            },
            "name": "place_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "anyOf": [
                  {
                    "type": "integer"
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            },
            "name": "project_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "coords_viewable_for_proj",
            "description": "Filter by observers who trust the project(s) specified in `project_id` OR trust the authenticated viewer"
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "kingdom",
                  "phylum",
                  "subphylum",
                  "superclass",
                  "class",
                  "subclass",
                  "infraclass",
                  "subterclass",
                  "superorder",
                  "order",
                  "suborder",
                  "infraorder",
                  "parvorder",
                  "zoosection",
                  "zoosubsection",
                  "superfamily",
                  "epifamily",
                  "family",
                  "subfamily",
                  "supertribe",
                  "tribe",
                  "subtribe",
                  "genus",
                  "genushybrid",
                  "subgenus",
                  "section",
                  "subsection",
                  "complex",
                  "species",
                  "hybrid",
                  "subspecies",
                  "variety",
                  "form",
                  "infrahybrid"
                ]
              }
            },
            "name": "rank",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "site_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "cc-by",
                  "cc-by-nc",
                  "cc-by-nd",
                  "cc-by-sa",
                  "cc-by-nc-nd",
                  "cc-by-nc-sa",
                  "cc0"
                ]
              }
            },
            "name": "sound_license",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "taxon_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "without_taxon_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "taxon_name"
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "name": "user_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "name": "user_login",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "minimum": 0,
                "maximum": 23
              }
            },
            "name": "hour",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "minimum": 1,
                "maximum": 31
              }
            },
            "name": "day",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "minimum": 1,
                "maximum": 12
              }
            },
            "name": "month",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "year",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "minimum": 1,
                "maximum": 31
              }
            },
            "name": "created_day",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "minimum": 1,
                "maximum": 12
              }
            },
            "name": "created_month",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "created_year",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "term_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "term_value_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "without_term_value_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "term_id_or_unknown",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "name": "annotation_user_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "acc_above"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "acc_below"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "acc_below_or_unknown"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "d1"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "d2"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "created_d1"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "created_d2"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "created_on"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "observed_on"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "unobserved_by_user_id"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "apply_project_rules_for"
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "observation_accuracy_experiment_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "cs"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "csa"
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "LC",
                  "NT",
                  "VU",
                  "EN",
                  "CR",
                  "EW",
                  "EX"
                ]
              }
            },
            "name": "csi",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "obscured",
                  "obscured_private",
                  "open",
                  "private"
                ]
              }
            },
            "name": "geoprivacy",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "obscured",
                  "obscured_private",
                  "open",
                  "private"
                ]
              }
            },
            "name": "taxon_geoprivacy",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "obscured",
                  "private",
                  "none"
                ]
              }
            },
            "name": "obscuration",
            "description": "Filter by observations where the `geoprivacy` or `taxon_geoprivacy` match these values",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "kingdom",
                  "phylum",
                  "subphylum",
                  "superclass",
                  "class",
                  "subclass",
                  "infraclass",
                  "subterclass",
                  "superorder",
                  "order",
                  "suborder",
                  "infraorder",
                  "parvorder",
                  "zoosection",
                  "zoosubsection",
                  "superfamily",
                  "epifamily",
                  "family",
                  "subfamily",
                  "supertribe",
                  "tribe",
                  "subtribe",
                  "genus",
                  "genushybrid",
                  "subgenus",
                  "section",
                  "subsection",
                  "complex",
                  "species",
                  "hybrid",
                  "subspecies",
                  "variety",
                  "form",
                  "infrahybrid"
                ]
              }
            },
            "name": "hrank",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "kingdom",
                  "phylum",
                  "subphylum",
                  "superclass",
                  "class",
                  "subclass",
                  "infraclass",
                  "subterclass",
                  "superorder",
                  "order",
                  "suborder",
                  "infraorder",
                  "parvorder",
                  "zoosection",
                  "zoosubsection",
                  "superfamily",
                  "epifamily",
                  "family",
                  "subfamily",
                  "supertribe",
                  "tribe",
                  "subtribe",
                  "genus",
                  "genushybrid",
                  "subgenus",
                  "section",
                  "subsection",
                  "complex",
                  "species",
                  "hybrid",
                  "subspecies",
                  "variety",
                  "form",
                  "infrahybrid"
                ]
              }
            },
            "name": "lrank",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "Actinopterygii",
                  "Animalia",
                  "Amphibia",
                  "Arachnida",
                  "Aves",
                  "Chromista",
                  "Fungi",
                  "Insecta",
                  "Mammalia",
                  "Mollusca",
                  "Reptilia",
                  "Plantae",
                  "Protozoa",
                  "unknown"
                ]
              }
            },
            "name": "iconic_taxa",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "id_above"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "id_below"
          },
          {
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "most_agree",
                "most_disagree",
                "some_agree"
              ]
            },
            "name": "identifications",
            "description": "Filter by level of agreement among identifications:\n\n* **most_agree:** returns observations where there are more active identifications of taxa that agree with the Observation Taxon than active identifications that disagree with the Observation Taxon\n* **some_agree:** returns observations where there are some active identifications of taxa that agree with the Observation Taxon\n* **most_disagree:** returns observations where there are more active identifications of taxa that disagree with the Observation Taxon than active identifications that agree with the Observation Taxon"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "disagreements",
            "description": "Whether there is disagreement among active identifications"
          },
          {
            "in": "query",
            "schema": {
              "type": "number",
              "format": "float",
              "minimum": -90,
              "maximum": 90
            },
            "name": "lat"
          },
          {
            "in": "query",
            "schema": {
              "type": "number",
              "format": "float",
              "minimum": -180,
              "maximum": 180
            },
            "name": "lng"
          },
          {
            "in": "query",
            "schema": {
              "type": "number",
              "format": "float"
            },
            "name": "radius"
          },
          {
            "in": "query",
            "schema": {
              "type": "number",
              "format": "float",
              "minimum": -90,
              "maximum": 90
            },
            "name": "nelat"
          },
          {
            "in": "query",
            "schema": {
              "type": "number",
              "format": "float",
              "minimum": -180,
              "maximum": 180
            },
            "name": "nelng"
          },
          {
            "in": "query",
            "schema": {
              "type": "number",
              "format": "float",
              "minimum": -90,
              "maximum": 90
            },
            "name": "swlat"
          },
          {
            "in": "query",
            "schema": {
              "type": "number",
              "format": "float",
              "minimum": -180,
              "maximum": 180
            },
            "name": "swlng"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "list_id"
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "name": "not_in_project",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "not_matching_project_rules_for"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "q"
          },
          {
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "names",
                "tags",
                "description",
                "place",
                "taxon_page_obs_photos"
              ]
            },
            "name": "search_on"
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "casual",
                  "needs_id",
                  "research"
                ]
              }
            },
            "name": "quality_grade",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "without_field"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "outlink_source"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "updated_since"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "viewer_id"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "reviewed"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "expected_nearby"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "locale"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "preferred_place_id"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "ttl"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "page"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "per_page"
          },
          {
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "desc",
                "asc"
              ],
              "default": "desc"
            },
            "name": "order"
          },
          {
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "created_at",
                "geo_score",
                "id",
                "observed_on",
                "random",
                "species_guess",
                "updated_at",
                "votes"
              ],
              "default": "created_at"
            },
            "name": "order_by"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "only_id"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns grid tiles.",
            "content": {
              "image/png": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/grid/{zoom}/{x}/{y}.grid.json": {
      "parameters": [],
      "get": {
        "tags": [
          "UTFGrid"
        ],
        "summary": "JSON for grid tiles",
        "security": [
          {
            "userJwtOptional": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "schema": {
              "type": "integer",
              "minimum": 0,
              "maximum": 21
            },
            "name": "zoom",
            "required": true
          },
          {
            "in": "path",
            "schema": {
              "type": "integer",
              "minimum": 0
            },
            "name": "x",
            "required": true
          },
          {
            "in": "path",
            "schema": {
              "type": "integer",
              "minimum": 0
            },
            "name": "y",
            "required": true
          },
          {
            "in": "query",
            "schema": {
              "type": "integer",
              "enum": [256, 512]
            },
            "name": "tile_size"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "acc",
            "description": "Filter by whether `positional_accuracy` is set or not"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "captive",
            "description": "Filter by captive / cultivated status"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "endemic",
            "description": "Filter by whether the observation is in a place with a check list entry indicating the establishment means is `endemic`"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "geo"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "id_please"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "identified"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "introduced"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "mappable"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "native"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "out_of_range"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "pcid",
            "deprecated": true
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "photos"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "popular"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "sounds"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "taxon_is_active"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "threatened",
            "description": "Filter by whether the observed taxon has a conservation status of \"threatened\" or worse"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "verifiable",
            "description": "Filter by whether observations are 'verifiable' (have quality grades `research` or `needs_id`)"
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "anyOf": [
                  {
                    "type": "string",
                    "format": "uuid"
                  },
                  {
                    "type": "integer"
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            },
            "name": "id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            },
            "name": "not_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "cc-by",
                  "cc-by-nc",
                  "cc-by-nd",
                  "cc-by-sa",
                  "cc-by-nc-nd",
                  "cc-by-nc-sa",
                  "cc0"
                ]
              }
            },
            "name": "license",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "cc-by",
                  "cc-by-nc",
                  "cc-by-nd",
                  "cc-by-sa",
                  "cc-by-nc-nd",
                  "cc-by-nc-sa",
                  "cc0"
                ]
              }
            },
            "name": "photo_license",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "licensed",
            "description": "Filter by observations where the license attribute is not null, i.e. it is licensed"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "photo_licensed",
            "description": "Filter by observations where the license attribute of at least one photo is not null"
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "anyOf": [
                  {
                    "type": "string",
                    "format": "uuid"
                  },
                  {
                    "type": "integer"
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            },
            "name": "place_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "anyOf": [
                  {
                    "type": "integer"
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            },
            "name": "project_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "coords_viewable_for_proj",
            "description": "Filter by observers who trust the project(s) specified in `project_id` OR trust the authenticated viewer"
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "kingdom",
                  "phylum",
                  "subphylum",
                  "superclass",
                  "class",
                  "subclass",
                  "infraclass",
                  "subterclass",
                  "superorder",
                  "order",
                  "suborder",
                  "infraorder",
                  "parvorder",
                  "zoosection",
                  "zoosubsection",
                  "superfamily",
                  "epifamily",
                  "family",
                  "subfamily",
                  "supertribe",
                  "tribe",
                  "subtribe",
                  "genus",
                  "genushybrid",
                  "subgenus",
                  "section",
                  "subsection",
                  "complex",
                  "species",
                  "hybrid",
                  "subspecies",
                  "variety",
                  "form",
                  "infrahybrid"
                ]
              }
            },
            "name": "rank",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "site_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "cc-by",
                  "cc-by-nc",
                  "cc-by-nd",
                  "cc-by-sa",
                  "cc-by-nc-nd",
                  "cc-by-nc-sa",
                  "cc0"
                ]
              }
            },
            "name": "sound_license",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "taxon_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "without_taxon_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "taxon_name"
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "name": "user_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "name": "user_login",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "minimum": 0,
                "maximum": 23
              }
            },
            "name": "hour",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "minimum": 1,
                "maximum": 31
              }
            },
            "name": "day",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "minimum": 1,
                "maximum": 12
              }
            },
            "name": "month",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "year",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "minimum": 1,
                "maximum": 31
              }
            },
            "name": "created_day",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "minimum": 1,
                "maximum": 12
              }
            },
            "name": "created_month",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "created_year",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "term_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "term_value_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "without_term_value_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "term_id_or_unknown",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "name": "annotation_user_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "acc_above"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "acc_below"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "acc_below_or_unknown"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "d1"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "d2"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "created_d1"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "created_d2"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "created_on"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "observed_on"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "unobserved_by_user_id"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "apply_project_rules_for"
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "name": "observation_accuracy_experiment_id",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "cs"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "csa"
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "LC",
                  "NT",
                  "VU",
                  "EN",
                  "CR",
                  "EW",
                  "EX"
                ]
              }
            },
            "name": "csi",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "obscured",
                  "obscured_private",
                  "open",
                  "private"
                ]
              }
            },
            "name": "geoprivacy",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "obscured",
                  "obscured_private",
                  "open",
                  "private"
                ]
              }
            },
            "name": "taxon_geoprivacy",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "obscured",
                  "private",
                  "none"
                ]
              }
            },
            "name": "obscuration",
            "description": "Filter by observations where the `geoprivacy` or `taxon_geoprivacy` match these values",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "kingdom",
                  "phylum",
                  "subphylum",
                  "superclass",
                  "class",
                  "subclass",
                  "infraclass",
                  "subterclass",
                  "superorder",
                  "order",
                  "suborder",
                  "infraorder",
                  "parvorder",
                  "zoosection",
                  "zoosubsection",
                  "superfamily",
                  "epifamily",
                  "family",
                  "subfamily",
                  "supertribe",
                  "tribe",
                  "subtribe",
                  "genus",
                  "genushybrid",
                  "subgenus",
                  "section",
                  "subsection",
                  "complex",
                  "species",
                  "hybrid",
                  "subspecies",
                  "variety",
                  "form",
                  "infrahybrid"
                ]
              }
            },
            "name": "hrank",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "kingdom",
                  "phylum",
                  "subphylum",
                  "superclass",
                  "class",
                  "subclass",
                  "infraclass",
                  "subterclass",
                  "superorder",
                  "order",
                  "suborder",
                  "infraorder",
                  "parvorder",
                  "zoosection",
                  "zoosubsection",
                  "superfamily",
                  "epifamily",
                  "family",
                  "subfamily",
                  "supertribe",
                  "tribe",
                  "subtribe",
                  "genus",
                  "genushybrid",
                  "subgenus",
                  "section",
                  "subsection",
                  "complex",
                  "species",
                  "hybrid",
                  "subspecies",
                  "variety",
                  "form",
                  "infrahybrid"
                ]
              }
            },
            "name": "lrank",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "Actinopterygii",
                  "Animalia",
                  "Amphibia",
                  "Arachnida",
                  "Aves",
                  "Chromista",
                  "Fungi",
                  "Insecta",
                  "Mammalia",
                  "Mollusca",
                  "Reptilia",
                  "Plantae",
                  "Protozoa",
                  "unknown"
                ]
              }
            },
            "name": "iconic_taxa",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "id_above"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "id_below"
          },
          {
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "most_agree",
                "most_disagree",
                "some_agree"
              ]
            },
            "name": "identifications",
            "description": "Filter by level of agreement among identifications:\n\n* **most_agree:** returns observations where there are more active identifications of taxa that agree with the Observation Taxon than active identifications that disagree with the Observation Taxon\n* **some_agree:** returns observations where there are some active identifications of taxa that agree with the Observation Taxon\n* **most_disagree:** returns observations where there are more active identifications of taxa that disagree with the Observation Taxon than active identifications that agree with the Observation Taxon"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "disagreements",
            "description": "Whether there is disagreement among active identifications"
          },
          {
            "in": "query",
            "schema": {
              "type": "number",
              "format": "float",
              "minimum": -90,
              "maximum": 90
            },
            "name": "lat"
          },
          {
            "in": "query",
            "schema": {
              "type": "number",
              "format": "float",
              "minimum": -180,
              "maximum": 180
            },
            "name": "lng"
          },
          {
            "in": "query",
            "schema": {
              "type": "number",
              "format": "float"
            },
            "name": "radius"
          },
          {
            "in": "query",
            "schema": {
              "type": "number",
              "format": "float",
              "minimum": -90,
              "maximum": 90
            },
            "name": "nelat"
          },
          {
            "in": "query",
            "schema": {
              "type": "number",
              "format": "float",
              "minimum": -180,
              "maximum": 180
            },
            "name": "nelng"
          },
          {
            "in": "query",
            "schema": {
              "type": "number",
              "format": "float",
              "minimum": -90,
              "maximum": 90
            },
            "name": "swlat"
          },
          {
            "in": "query",
            "schema": {
              "type": "number",
              "format": "float",
              "minimum": -180,
              "maximum": 180
            },
            "name": "swlng"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "list_id"
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "name": "not_in_project",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "not_matching_project_rules_for"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "q"
          },
          {
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "names",
                "tags",
                "description",
                "place",
                "taxon_page_obs_photos"
              ]
            },
            "name": "search_on"
          },
          {
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "casual",
                  "needs_id",
                  "research"
                ]
              }
            },
            "name": "quality_grade",
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "without_field"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "outlink_source"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "updated_since"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "viewer_id"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "reviewed"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "expected_nearby"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "locale"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "preferred_place_id"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "ttl"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "page"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "per_page"
          },
          {
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "desc",
                "asc"
              ],
              "default": "desc"
            },
            "name": "order"
          },
          {
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "created_at",
                "geo_score",
                "id",
                "observed_on",
                "random",
                "species_guess",
                "updated_at",
                "votes"
              ],
              "default": "created_at"
            },
            "name": "order_by"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "only_id"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a UTFGrid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UtfGrid"
                }
              }
            }
          }
        }
      }
    },
    "/geomodel/{id}/{zoom}/{x}/{y}.png": {
      "parameters": [],
      "get": {
        "tags": [
          "Polygon Tiles"
        ],
        "summary": "Taxon Geomodel Tiles",
        "security": [
          {
            "userJwtOptional": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "schema": {
              "type": "string"
            },
            "name": "id",
            "required": true
          },
          {
            "in": "path",
            "schema": {
              "type": "integer",
              "minimum": 0,
              "maximum": 21
            },
            "name": "zoom",
            "required": true
          },
          {
            "in": "path",
            "schema": {
              "type": "integer",
              "minimum": 0
            },
            "name": "x",
            "required": true
          },
          {
            "in": "path",
            "schema": {
              "type": "integer",
              "minimum": 0
            },
            "name": "y",
            "required": true
          },
          {
            "in": "query",
            "schema": {
              "type": "integer",
              "enum": [256, 512]
            },
            "name": "tile_size"
          },
          {
            "in": "query",
            "schema": {
              "enum": [
                "true",
                "false"
              ]
            },
            "name": "thresholded",
            "description": "Set to true to render only cells above the Seen Nearby threshold"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns taxon geomodel tiles.",
            "content": {
              "image/png": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/geomodel_taxon_range/{id}/{zoom}/{x}/{y}.png": {
      "parameters": [],
      "get": {
        "tags": [
          "Polygon Tiles"
        ],
        "summary": "Taxon Geomodel Taxon Range Tiles",
        "security": [
          {
            "userJwtOptional": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "schema": {
              "type": "string"
            },
            "name": "id",
            "required": true
          },
          {
            "in": "path",
            "schema": {
              "type": "integer",
              "minimum": 0,
              "maximum": 21
            },
            "name": "zoom",
            "required": true
          },
          {
            "in": "path",
            "schema": {
              "type": "integer",
              "minimum": 0
            },
            "name": "x",
            "required": true
          },
          {
            "in": "path",
            "schema": {
              "type": "integer",
              "minimum": 0
            },
            "name": "y",
            "required": true
          },
          {
            "in": "query",
            "schema": {
              "type": "integer",
              "enum": [256, 512]
            },
            "name": "tile_size"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns taxon geomodel taxon range tiles.",
            "content": {
              "image/png": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/geomodel_comparison/{id}/{zoom}/{x}/{y}.png": {
      "parameters": [],
      "get": {
        "tags": [
          "Polygon Tiles"
        ],
        "summary": "Taxon Geomodel Comparison Tiles",
        "security": [
          {
            "userJwtOptional": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "schema": {
              "type": "string"
            },
            "name": "id",
            "required": true
          },
          {
            "in": "path",
            "schema": {
              "type": "integer",
              "minimum": 0,
              "maximum": 21
            },
            "name": "zoom",
            "required": true
          },
          {
            "in": "path",
            "schema": {
              "type": "integer",
              "minimum": 0
            },
            "name": "x",
            "required": true
          },
          {
            "in": "path",
            "schema": {
              "type": "integer",
              "minimum": 0
            },
            "name": "y",
            "required": true
          },
          {
            "in": "query",
            "schema": {
              "type": "integer",
              "enum": [256, 512]
            },
            "name": "tile_size"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns taxon geomodel comparison tiles.",
            "content": {
              "image/png": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/flags/{id}": {
      "parameters": [],
      "put": {
        "tags": [
          "Flags"
        ],
        "summary": "Update a flag",
        "security": [
          {
            "userJwtRequired": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "schema": {
              "type": "integer"
            },
            "name": "id",
            "description": "ID of the record",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FlagsUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "A list of flags",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultsFlags"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Flags"
        ],
        "summary": "Delete a flag",
        "security": [
          {
            "userJwtRequired": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "schema": {
              "type": "integer"
            },
            "name": "id",
            "description": "ID of the record",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "No response body; success implies deletion"
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/controlled_terms/for_taxon/{taxon_id}": {
      "parameters": [],
      "get": {
        "tags": [
          "Controlled Terms"
        ],
        "summary": "Fetch controlled terms for a taxon",
        "security": [
          {
            "userJwtOptional": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "name": "taxon_id",
            "description": "A single taxon UUID or ID, or a comma-separated list of them",
            "required": true,
            "explode": false
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "fields"
          },
          {
            "in": "header",
            "schema": {
              "type": "string"
            },
            "name": "X-HTTP-Method-Override"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of controlled attributes relevant to a taxon with nested controlled values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultsControlledTerms"
                }
              }
            }
          }
        }
      }
    },
    "/comments/{uuid}": {
      "parameters": [],
      "put": {
        "tags": [
          "Comments"
        ],
        "summary": "Update a comment",
        "security": [
          {
            "userJwtRequired": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "name": "uuid",
            "description": "A single UUID",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CommentsUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "A list of comments",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultsComments"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Comments"
        ],
        "summary": "Delete a comment",
        "security": [
          {
            "userJwtRequired": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "name": "uuid",
            "description": "A single UUID",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "No response body; success implies deletion"
          }
        }
      }
    },
    "/authorized_applications/{id}": {
      "parameters": [],
      "delete": {
        "tags": [
          "AuthorizedApplications"
        ],
        "summary": "Revoke application authorization",
        "security": [
          {
            "userJwtRequired": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "schema": {
              "type": "integer"
            },
            "name": "id",
            "description": "Unique identifier for the authorization",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Authorization revoked"
          },
          "default": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/announcements/{id}/dismiss": {
      "parameters": [],
      "put": {
        "tags": [
          "Announcements"
        ],
        "summary": "Dismiss an announcement",
        "security": [
          {
            "userJwtRequired": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "schema": {
              "type": "integer"
            },
            "name": "id",
            "description": "A single ID",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "No response body; success implies dismissal"
          }
        }
      }
    },
    "/annotations/{uuid}/vote": {
      "parameters": [],
      "post": {
        "tags": [
          "Annotations"
        ],
        "summary": "Vote on an annotation",
        "security": [
          {
            "userJwtRequired": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            },
            "name": "uuid",
            "description": "A single UUID",
            "required": true,
            "explode": false
          }
        ],
        "responses": {
          "204": {
            "description": "Vote was successful"
          }
        }
      },
      "delete": {
        "tags": [
          "Annotations"
        ],
        "summary": "Remove the authenticated user's vote on an annotation",
        "security": [
          {
            "userJwtRequired": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            },
            "name": "uuid",
            "description": "A single UUID",
            "required": true,
            "explode": false
          }
        ],
        "responses": {
          "204": {
            "description": "Vote removal was successful"
          }
        }
      }
    },
    "/annotations/{uuid}": {
      "parameters": [],
      "delete": {
        "tags": [
          "Annotations"
        ],
        "summary": "Delete an annotation",
        "security": [
          {
            "userJwtRequired": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            },
            "name": "uuid",
            "description": "A single UUID",
            "required": true,
            "explode": false
          }
        ],
        "responses": {
          "200": {
            "description": "No response body; success implies deletion"
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "Annotations"
    },
    {
      "name": "Announcements"
    },
    {
      "name": "AuthorizedApplications"
    },
    {
      "name": "Comments"
    },
    {
      "name": "Controlled Terms"
    },
    {
      "name": "Flags"
    },
    {
      "name": "Identifications"
    },
    {
      "name": "Messages"
    },
    {
      "name": "Observation Tiles"
    },
    {
      "name": "ObservationFieldValues"
    },
    {
      "name": "ObservationPhotos"
    },
    {
      "name": "ObservationSounds"
    },
    {
      "name": "Observations"
    },
    {
      "name": "Photos"
    },
    {
      "name": "Places"
    },
    {
      "name": "Polygon Tiles"
    },
    {
      "name": "ProjectObservations"
    },
    {
      "name": "ProjectUsers"
    },
    {
      "name": "Projects"
    },
    {
      "name": "ProviderAuthorizations"
    },
    {
      "name": "Relationships"
    },
    {
      "name": "SavedLocations"
    },
    {
      "name": "Search"
    },
    {
      "name": "Sites"
    },
    {
      "name": "Sounds"
    },
    {
      "name": "Taxa"
    },
    {
      "name": "TaxonNamePriorities"
    },
    {
      "name": "Translations"
    },
    {
      "name": "UTFGrid"
    },
    {
      "name": "Users"
    }
  ]
}